{"version":3,"sources":["ApolloProvider.js","context/auth.js","pages/Login.js","pages/Daftar Karyawan.js","pages/Karyawan/MasterKaryawan.js","pages/Karyawan/Detail Karyawan.js","pages/Permintaan.js","pages/Detail Permintaan.js","pages/Permintaan/Permintaan Utang.js","pages/Permintaan/Detail Utang.js","pages/Permintaan/Permintaan Surat.js","pages/Permintaan/Detail Surat.js","pages/Penambahan/Daftar Surat Perintah.js","pages/Penambahan/Detail Surat Perintah.js","pages/Dashboard.js","pages/Profil.js","pages/Ubah Password.js","pages/Penambahan/Tambah Surat Perintah Kerja.js","pages/Tambah Gudang.js","pages/Tambah Mesin.js","pages/Tambah Group.js","pages/Pembagian Group Detail.js","pages/Overview.js","pages/Absensi/Tambah Absensi.js","pages/Absensi/Daftar Absensi.js","pages/Tambah Jam Kerja.js","pages/Kuisioner/Tambah Kuisioner.js","pages/Kuisioner/Tambah Pertanyaan.js","pages/Kuisioner/DaftarTanggapan.js","pages/Kuisioner/Master Kuisioner.js","pages/Kuisioner/Detail Kuisioner.js","pages/Kuisioner/Detail Pertanyaan.js","pages/Kuisioner/Tambah Pertanyaan Baru.js","pages/Kuisioner/Detail Distribusi.js","pages/Kuisioner/Isi Kuisioner.js","pages/Penilaian/Tambah Penilaian.js","pages/Penilaian/Daftar Penilaian.js","pages/Penilaian/Master Nilai.js","pages/Penilaian/Master Index.js","pages/Izin/Master Izin.js","pages/Kontrak/MasterGaji.js","pages/Kontrak/MasterIuran.js","pages/Kontrak/Master Kontrak.js","pages/Kontrak/Tambah Kontrak.js","pages/Kontrak/Detail Kontrak.js","pages/Kontrak/Master Pembayaran Gaji.js","pages/Kontrak/Detail Pembayaran Gaji.js","pages/Laporan/Produksi Pipa.js","pages/Laporan/Mixer Pipa.js","pages/Laporan/Quality Control.js","pages/Laporan/Stokist Pipa.js","pages/Laporan/Armada.js","pages/Laporan/Cat Tegel.js","pages/Laporan/Hollow.js","pages/Laporan/Spandek.js","pages/Laporan/Sekuriti.js","pages/Laporan/Sales.js","pages/Laporan/Sales Detail.js","pages/Laporan/Sekuriti Detail.js","pages/Laporan/Armada Detail.js","pages/Laporan/Stokist Pipa Detail.js","pages/Laporan/Quality Control Detail.js","pages/Laporan/Produksi Pipa Detail.js","pages/Laporan/Cat Tegel Detail.js","pages/Direktur/Karyawan/MasterKaryawan.js","pages/Direktur/Karyawan/Daftar HRD.js","pages/Direktur/Karyawan/Detail Karyawan.js","pages/Direktur/Kontrak/MasterGaji.js","pages/Direktur/Kontrak/MasterIuran.js","pages/Direktur/Kontrak/Master Kontrak.js","pages/Direktur/Kontrak/Detail Kontrak.js","pages/Direktur/Kontrak/Master Pembayaran Gaji.js","pages/Direktur/Kontrak/Detail Pembayaran Gaji.js","pages/Direktur/Permintaan/Permintaan Utang.js","pages/Direktur/Permintaan/Detail Utang.js","pages/Direktur/Absensi/Daftar Absensi.js","pages/Direktur/Kuisioner/Master Kuisioner.js","pages/Direktur/Kuisioner/DaftarTanggapan.js","pages/Direktur/Kuisioner/Detail Kuisioner.js","pages/Direktur/Kuisioner/Detail Distribusi.js","pages/Direktur/Penilaian/Master Nilai.js","pages/Direktur/Penilaian/Master Index.js","pages/Direktur/Penilaian/Daftar Penilaian.js","pages/Direktur/Izin/Master Izin.js","pages/Direktur/Promosi/Daftar Permintaan.js","pages/Reports.js","util/DynamicRoute.js","components/SideBarData.js","components/SideBarDataDirektur.js","components/SubMenu.js","components/SideBar.js","App.js","index.js"],"names":["uploadLink","createHttpLink","uri","createUploadLink","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","ApolloLink","from","cache","InMemoryCache","ApolloProvider","props","AuthStateContext","createContext","AuthDispatchContext","user","decodedToken","jwtDecode","expiredAt","Date","exp","removeItem","console","log","authReducer","state","action","type","setItem","payload","userDivisi","Error","AuthProvider","children","useReducer","dispatch","Provider","value","useAuthState","useContext","useAuthDispatch","loginWebsite","gql","Login","showError","useState","username","password","variables","setVariables","errors","setErrors","className","Object","keys","map","i","color","useLazyQuery","onError","err","graphQLErrors","extensions","onCompleted","data","loginUser","loading","md","style","width","src","block","class","height","content","freeSet","cilUser","placeholder","autoComplete","onChange","e","target","cilLockLocked","xs","onClick","getJabatan","registerKaryawan","Register","usersMarkUp","showUser","id","idJabatan","nik","noTelp","tanggalMasuk","tempatLahir","tanggalLahir","alamat","agama","pendidikan","foto","file","setFile","imageURI","setImageURI","success","setSuccess","useQuery","counter","length","jabatan","tingkatJabatan","namaJabatan","Alert","variant","useMutation","update","res","passwordRaw","registerKaryawanku","Form","Control","as","parseInt","cilCalendar","cilBuilding","cilEducation","nama","alt","files","reader","FileReader","onload","readyState","result","readAsDataURL","getPermintaanDataDiri","getListKaryawanMaster","MasterKaryawan","history","useHistory","pageNumber","setPageNumber","limit","loadingPermintaan","dataPermintaan","refetchPermintaan","refetch","page","loadingKaryawan","dataKaryawan","refetchKaryawan","goToDetail","laporan","laporanPermintaan","push","pathname","dataKu","undefined","breakPoints","itemsToShow","index","idKaryawan","namaKaryawan","bagianData","dataSeharusnya","Button","dataKaryawanKu","counterKaryawanKu","pageKu","counterPage","count","jml","Math","ceil","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","forcePage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","changePage","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","rows","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","dayjs","format","useEffect","window","performance","navigation","Row","Col","getKaryawanKu","updateKaryawan","DetailKaryawan","location","useLocation","getKaryawan","setDataKu","updateKaryawanKu","size","goBack","disabled","idPermintaan","register","getPermintaansMaster","getListDivisi","getListKaryawanKontrak","Permintaan","setPage","selectedDateAwal","setSelectedDateAwal","status","setStatus","divisiKontrak","setDivisiKontrak","karyawanKontrak","setKaryawanKontrak","orderBy","setOrderBy","karyawan","bulan","peminta","izin","namaIzin","tanggalMulai","tanggalBerakhir","totalHari","loadingDivisi","dataDivisi","dataDivisiKu","counterDivisi","divisi","namaDivisi","loadingKaryawanKontrak","dataKaryawanKontrak","dataKaryawanKontrakKu","element","jabatanKu","Container","Group","Label","date","dateFormat","maxDate","showMonthYearPicker","updateStatusPermintaan","DetailPermintaan","alasan","setAlasan","dataLaporan","setDataLaporan","updateStatusPermintaanKu","actionPermintaan","Card","Body","Text","totalIzin","ketua","keterangan","upload","getListPinjaman","PermintaanPinjaman","loadingPinjaman","dataPinjaman","refetchPinjaman","dataUtangKu","counterUtangKu","displayType","jumlahPinjam","thousandSeparator","decimalSeparator","prefix","keteranganPinjam","lunas","cicilan","getDetailPinjaman","updateHPinjaman","DetailPinjaman","setKeterangan","pembayaranKe","totalPembayaran","scope","updatePinjamanKu","updatePinjaman","textAlign","Header","marginTop","name","getListSuratMaster","PermintaanSurat","tanggalKerja","createdAt","updateStatusSurat","DetailSurat","keteranganHRD","hrd","jenisSurat","tanggalLaporan","require","saveAs","getListSuratPerintahMaster","DaftarSuratPerintah","dinas","tanggalAkhir","updateStatusSuratPerintahMaster","DetailSuratPerintah","downloadFile","keteranganKaryawan","Overview","Profil","Title","sm","lg","changePassword","UbahPassword","pesan","passwordLama","passwordBaru","passwordConfirm","changePasswordKu","submitChangePasswordForm","a","preventDefault","onSubmit","registerPermintaanSuratPerintah","TambahSuratPerintah","setDivisi","setKaryawan","setDinas","setTanggalMulai","setTanggalAkhir","Sukses","registerKuisionerKu","showYearDropdown","scrollableMonthYearDropdown","registerGudang","updateStatusGudang","updateGudang","getListGudang","setId","namaGudang","alamatGudang","registerGudangku","updateStatusIndexKu","updateStatus","editIndex","updateIndexKu","updateIndex","registerMesin","RegisterMesin","namaMesin","registerMesinku","updatePembagianDivisi","TambahGroup","setNamaDivisi","jumlah","setJumlah","visible","setVisible","updatePembagianDivisiKu","jumlahGroup","Modal","show","onHide","closeButton","Footer","getMasterListPembagianAnggota","DetailPembagianGroup","Array","x","groupKaryawan","registerAbsensi","absensi","setAbsensi","registerAbsensiKu","ctrTgl","tglKu","counterAbsensi","absensiKu","toString","split","tanggal","jamKerja","scanMasuk","scanPulang","terlambat","jamBolos","absen","lembur","absensiInput","Promise","resolve","reject","fileReader","readAsArrayBuffer","bufferArray","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","error","then","d","readExcel","Nama","Absent","Lembur","marginBottom","borderRadius","getAbsensi","DaftarAbsensi","selectedDateAkhir","setSelectedDateAkhir","getAbsensiKu","namaShift","jamMasuk","jamKeluar","tglAwal","tglAkhir","registerJamKerja","registerJamKerjaKu","registerKuisioner","TambahKuisioner","setNama","deskripsi","setDeskripsi","jenis","setJenis","namaKuisioner","deskripsiKuisioner","jenisKuisioner","getKuisioner","registerPertanyaan","TambahPertanyaan","kuisioner","setKuisioner","pertanyaan","setPertanyaan","jenisPertanyaan","setJenisPertanyaan","jawaban","setJawaban","jawabanRadio","setJawabanRadio","registerPertanyaanKu","KuisionerId","teskPertanyaan","teskJawaban","marginLeft","oldArray","prevActions","filter","hapusRadio","getListKaryawan","getTanggapanWeb","React","setListDivisi","setListKaryawan","loadingKuisioner","dataKuisioner","getListKaryawanKu","getTanggapanWebKu","loadingTanggapan","dataTanggapan","dataKuisionerKu","counterKaryawan","dataTanggapanKu","backgroundColor","listTanggapan","teskTanggapan","updateStatusKuisioner","MasterKuisioner","updateStatusKuisionerKu","goToDistribusi","getPertanyaan","updateKuisioner","updateStatusPertanyaan","DetailKuisioner","loadingPertanyaan","dataPertanyaan","counterPertanyaan","updateStatusPertanyaanKu","dataPertanyaanKu","listJawaban","index1","updateKuisionerKu","alert","fullscreen","onClose","radio","updatePertanyaan","DetailPertanyaan","idJawaban","setIdJawaban","updatePertanyaanKu","TambahPertanyaanBaru","getListJabatan","getDistribusi","updateStatusDistribusi","registerDistribusi","DetailDistribusi","setJabatan","nilai","setNilai","updateStatusDistribusiKu","dataDistribusiKu","persentaseNilai","registerDistribusiKu","ListKuisionerId","TingkatJabatan","getKuisionerMobile","getListKaryawanKuisioner","tambahTanggapanKuisioner","IsiKuisioner","answerText","setAnswerText","answerRadio","setAnswerRadio","answerPilihan","setAnswerPilihan","answerOpsi","setAnswerOpsi","listKaryawan","jenisKaryawan","setJenisKaryawan","refetchKuisioner","refetchPertanyaan","text","item","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","event","prevItems","tambahTanggapanKu","getIndexPenilaian","registerNilaiHRD","listDivisi","listNilai","setListNilai","registerNilaiKu","hasil","parseFloat","ListNilaiInput","namaIndex","keteranganIndex","nilaiIndex","persentase","updateNilai","getNilaiKaryawan","DaftarPenilaian","hPenilaianHRD","totalNilai","hPenilaianKuisioner","registerPengaruhNilai","updatePengaruhNilai","getPengaruhNilai","MasterNilai","nilaiMin","setNilaiMin","nilaiMax","setNilaiMax","setHasil","pengurangan","setPengurangan","nilaiUang","setNilaiUang","updateNilaiKu","hasilNilai","fontSize","onValueChange","Check","inline","checked","label","registerIndexPenilaian","updateStatusIndexPenilaian","updateIndexPenilaian","MasterIndex","counterJml","hidden","fontWeight","registerIndexKu","getIzin","updateStatusIzin","registerIzin","updateIzin","MasterIzin","hari","setHari","batasanHari","setBatasanHari","edit","setEdit","counterCuti","updateStatusIzinKu","dataCuti","editIzin","registerIzinKu","updateIzinKu","updateIzinFunction","registerIndexGaji","updateStatusIndexGaji","updateIndexGaji","getIndexGaji","MasterGaji","registerIndexGajiKu","namaGaji","keteranganGaji","registerIndexIuran","updateStatusIndexIuran","updateIndexIuran","getIndexIuran","MasterIuran","registerIndexIuranKu","namaIuran","keteranganIuran","getKontrakKaryawan","MasterKontrak","jenisKontrak","totalGaji","totalIuran","diff","registerKontrakKaryawan","TambahKontrak","setIdKaryawan","setJenisKontrak","setTanggalBerakhir","gaji","setGaji","iuran","setIuran","registerKontrakKaryawanKu","loadingGaji","dataGaji","loadingIuran","dataIuran","total","getDetailKontrak","updateStatusKontrakMaster","DetailKontrak","dataDetailKontrak","dKontrakGaji","dKontrakIndexGaji","dKontrakIuran","dKontrakIndexIuran","registerPembayaranGaji","getPembayaranGaji","getListKaryawanPembayaranGaji","MasterPembayaranGaji","setLembur","registerPembayaranGajiKu","kontrak","tanggalPembayaran","jumlahLembur","getDetailPembayaranGaji","updateStatusPembayaranGaji","keuangan","getLaporanMasterProduksiPipa","getListKaryawanLaporan","getSummaryProduksiPipa","ProduksiPipa","banding","setBanding","visibleSummary","setVisibleSummary","dataSummary","refetchSummary","loadingLaporan","refetchLaporan","shift","tipeMesin","ukuran","dis","pin","hasilProduksi","BS","jumlahProduksi","jumlahBanding","tidakCapaiTarget","getLaporanMasterMixerPipa","getSummaryMixerPipa","MixerPipa","dataDetail","setDataDetail","totalHasil","targetMixer","pernahBanding","bahanDigunakan","keteranganBanding","getLaporanMasterQualityControl","getSummaryQualityControlPipa","QualityControl","merk","totalReject","totalProduksi","getLaporanMasterStokistPipa","getSummaryStokistPipa","jumlahBaik","jumlahBS","getLaporanMasterArmada","getSummaryArmada","idNota","armada","stokist","supir","penerima","jumlahPengantaran","getLaporanMasterCatTegel","getListMerkCatTegel","CatTegel","setMerk","loadingMerk","dataMerk","refetchMerk","hLaporanCatTegel","jenisProduk","merkProduk","warna","dataMerkKu","getLaporanMasterHollow","getSummaryHollow","Hollow","hLaporanHollow","ketebalan","berat","noCoil","getLaporanMasterSpandek","getSummarySpandek","Spandek","hLaporanSpandek","namaPemesan","panjang","Number","jumlahProduksiFloat","toFixed","jumlahBSFloat","getLaporanMasterSekuriti","getGudang","Sekuriti","gudang","setGudang","loadingGudang","dataGudang","refetchGudang","penyerah","dataGudangKu","getLaporanMasterSales","getSummarySales","Sales","laporanKejadian","getDLaporanSales","DetailSales","namaToko","keteranganKejadian","feedbackKaryawan","getDLaporanSekuriti","DetailSekuriti","dLaporanDinasSekuriti","namaPelapor","noHT","dLaporanInventarisSekuriti","namaBarang","jumlahBarang","kondisi","dLaporanMutasiSekuriti","jamLaporan","uraian","getDLaporanKetuaArmada","DetailArmada","merkBarang","tipeBarang","ukuranBarang","satuanBarang","idArmada","idStokist","idSupir","kernet","idKernet","getDLaporanStokistPipa","DetailStokistPipa","laporanStokStokistPipa","panjangPipa","beratPipa","jumlahPipa","totalBaik","totalBS","getDLaporanQualityControlPipa","DetailQualityControlPipa","HLaporanQualityControlPipaId","diameter","diameterLuar","diameterDalam","getDLaporanProduksiPipa","DetailProduksiPipa","dataUraian","setDataUraian","HLaporanProduksiPipaId","targetProduksi","uLaporan","jumlahBahan","totalBahan","namaUraian","nilaiUraian","getULaporanCatTegel","DetailCatTegel","namaBahan","satuanBahan","jumlahProduk","satuanProduk","RegisterKaryawanDirektur","getListPermintaanPromosiMaster","updateStatusPermintaanPromosi","DaftarPermintaanPromosi","doAction","pelapor","kenaikan","openModal","keteranganDirektur","Reports","ReportsOne","ReportsTwo","ReportsThree","DynamicRoute","authenticated","to","guest","logout","SidebarData","title","path","icon","iconClosed","iconOpened","subNav","cName","SidebarDataDirektur","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","SubMenu","subnav","setSubnav","Nav","div","NavIcon","SidebarNav","nav","sidebar","SidebarWrap","SideMenuBtn","Sidebar","setSidebar","textDecoration","App","exact","Dashboard","RegisterGudang","RegisterAbsensi","RegisterJamKerja","RegisterKuisioner","RegisterPertanyaan","DaftarTanggapan","TambahPenilaian","DetailPembayaranGaji","StokistPipa","Armada","MasterKaryawanDirektur","DetailKaryawanDirektur","MasterGajiDirektur","MasterIuranDirektur","MasterKontrakDirektur","DetailKontrakDirektur","MasterPembayaranGajiDirektur","DetailPembayaranGajiDirektur","PermintaanPinjamanDirektur","DetailPinjamanDirektur","DaftarAbsensiDirektur","DaftarTanggapanDirektur","MasterKuisionerDirektur","DetailKuisionerDirektur","DetailDistribusiDirektur","MasterIndexDirektur","DaftarPenilaianDirektur","MasterNilaiDirektur","MasterIzinDirektur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6d0c317.chunk.js","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache, ApolloProvider as Provider, ApolloLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n});\r\n//const uploadLink = createUploadLink({ uri: 'http://localhost:4000/graphql' });\r\nconst uploadLink = createUploadLink({ uri: 'http://api.hjmbtest.online' });\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\nconst client = new ApolloClient({\r\n  link: ApolloLink.from([authLink, uploadLink]),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default function ApolloProvider(props){\r\n    return <Provider client={client} {...props}/>\r\n}","import React,{createContext, useReducer, useContext}  from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst AuthStateContext = createContext()\r\nconst AuthDispatchContext = createContext()\r\n\r\nconst token = localStorage.getItem('token');\r\nvar user = null;\r\nif(token){\r\n    const decodedToken = jwtDecode(token);\r\n    const expiredAt = new Date(decodedToken.exp * 1000);\r\n    if(new Date() > expiredAt){\r\n        localStorage.removeItem('token');\r\n    }else{\r\n        user = decodedToken\r\n    }\r\n}else console.log('No Token Found')\r\n\r\nconst authReducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            localStorage.setItem('divisi', action.payload.userDivisi);\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'LOGOUT':\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                user: null\r\n            }\r\n        default:\r\n            throw new Error(`Unknown action type: ${action.type}`)\r\n    }\r\n}\r\nexport const AuthProvider = ({children}) => {\r\n    const [state,dispatch] = useReducer(authReducer, {user})\r\n    return (\r\n        <AuthDispatchContext.Provider value={dispatch}>\r\n            <AuthStateContext.Provider value={state}>\r\n                {children}\r\n            </AuthStateContext.Provider>\r\n        </AuthDispatchContext.Provider>\r\n    )\r\n};\r\nexport const useAuthState = () => useContext(AuthStateContext)\r\nexport const useAuthDispatch = () => useContext(AuthDispatchContext)","import React, {useState} from 'react'\r\nimport { gql, useLazyQuery} from '@apollo/client';\r\nimport {useAuthDispatch} from '../context/auth';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CImage,\r\n  CAlert,\r\n} from '@coreui/react'\r\nimport { freeSet } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst loginWebsite = gql`\r\n  query loginWebsite(\r\n    $username: String!\r\n    $password: String!\r\n  ) {\r\n    loginWebsite(\r\n      username: $username\r\n      password: $password\r\n    ) {\r\n      username\r\n      token\r\n      userDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Login(props) {\r\n    const[variables, setVariables] = useState({\r\n      username: '',\r\n      password: '',\r\n    });\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const dispatch = useAuthDispatch();\r\n\r\n    let showError\r\n    if(errors){\r\n        console.log(errors);\r\n        showError = \r\n          <div className=\"mt-2\">\r\n            {\r\n              Object.keys(errors).map(i => (\r\n                <CAlert color=\"danger\">{errors[i]}</CAlert>\r\n              ))\r\n            }\r\n          </div>\r\n    }\r\n\r\n    const [loginUser, {loading}] = useLazyQuery(loginWebsite,{\r\n      onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\r\n      onCompleted(data){\r\n        dispatch({type:'LOGIN', payload: data.loginWebsite})\r\n      }\r\n    })\r\n    const submitLoginForm = () =>{\r\n      loginUser({variables});\r\n    }\r\n    return (\r\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\r\n        <CContainer>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={8}>\r\n              <CCardGroup>\r\n                <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\r\n                  <CCardBody className=\"text-center\">\r\n                      <CImage\r\n                        src=\"/logo.png\"\r\n                        block\r\n                        class=\"mb-2\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                  </CCardBody>\r\n                </CCard>\r\n                <CCard className=\"p-4\">\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-medium-emphasis\">Masukkan Username Dan Password</p>\r\n                      {showError}\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                          <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput placeholder=\"Username\" autoComplete=\"username\" onChange={e => setVariables({...variables, username: e.target.value})}/>\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupText>\r\n                          <CIcon content={freeSet.cilLockLocked} />\r\n                        </CInputGroupText>\r\n                        <CFormInput\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          autoComplete=\"current-password\"\r\n                          onChange={e => setVariables({...variables, password: e.target.value})}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs={6}>\r\n                          <CButton color=\"primary\" className=\"px-4\" onClick={() => submitLoginForm()}>\r\n                            Login\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CFormSelect,\r\n  CFormLabel,\r\n  CImage,\r\n  CAlert,\r\n} from '@coreui/react'\r\nimport { freeSet } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\n\r\nconst getJabatan = gql`\r\n  query getJabatan{\r\n    getJabatan{\r\n      id\r\n      namaJabatan\r\n      tingkatJabatan\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerKaryawan = gql`\r\n    mutation registerKaryawan(\r\n      $id: Int \r\n      $nama: String\r\n      $nik: String\r\n      $noTelp: String \r\n      $tanggalMasuk: MyDate\r\n      $tempatLahir: String\r\n      $tanggalLahir: MyDate\r\n      $alamat: String\r\n      $agama: String\r\n      $pendidikan: String\r\n      $file: Upload\r\n      $idJabatan: Int!\r\n  ) {\r\n    registerKaryawan(\r\n      id: $id\r\n      nama: $nama\r\n      nik: $nik\r\n      noTelp: $noTelp\r\n      tanggalMasuk: $tanggalMasuk\r\n      tempatLahir: $tempatLahir\r\n      tanggalLahir: $tanggalLahir\r\n      alamat: $alamat\r\n      agama: $agama\r\n      pendidikan: $pendidikan\r\n      file: $file\r\n      idJabatan: $idJabatan\r\n    ) {\r\n      id\r\n      nama\r\n      username\r\n      passwordRaw\r\n    }\r\n  }\r\n`;\r\nexport default function Register(props) {\r\n    const[variables,setVariables] = useState({\r\n        id: 0,\r\n        username:'',\r\n        idJabatan: 0,\r\n        nik: '',\r\n        noTelp: '',\r\n        tanggalMasuk: '',\r\n        tempatLahir: '',\r\n        tanggalLahir: '',\r\n        alamat: '',\r\n        agama: '',\r\n        pendidikan: '',\r\n        foto: '',\r\n    })\r\n    const [file, setFile] = useState();\r\n    const [imageURI, setImageURI] = useState();\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    const { loading, data } = useQuery(getJabatan);\r\n\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(!data || loading){\r\n        usersMarkUp = <p>Loading...</p>\r\n    }else if(data.getJabatan.length === 0){\r\n        usersMarkUp = <p>Tidak Ada Daftar Jabatan</p>\r\n    }else if(data.getJabatan.length > 0 && !counter){\r\n        usersMarkUp = data.getJabatan.map(jabatan =>(\r\n            <option key={jabatan.id} value={jabatan.id}>\r\n                {jabatan.tingkatJabatan === 2? 'Ketua ' : null}\r\n                {jabatan.tingkatJabatan === 4? 'Ketua ' : null}\r\n                {jabatan.namaJabatan}\r\n            </option>\r\n        ))\r\n        counter = true;\r\n    }\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n    }\r\n\r\n    if(errors){\r\n        console.log(errors);\r\n        showError = \r\n          <div className=\"mt-2\">\r\n            {\r\n              Object.keys(errors).map(i => (\r\n                <CAlert color=\"danger\">{errors[i]}</CAlert>\r\n              ))\r\n            }\r\n          </div>\r\n    }\r\n\r\n    const [registerKaryawanku] = useMutation(registerKaryawan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                username: `Username: ${data.registerKaryawan.username}`,\r\n                password: `Password: ${data.registerKaryawan.passwordRaw}`\r\n            })\r\n        }\r\n    })\r\n    const register = () =>{\r\n        console.log(variables.idJabatan);\r\n        registerKaryawanku({variables:{\r\n            id: parseInt(variables.id),\r\n            nama: variables.username,\r\n            nik: variables.nik,\r\n            noTelp: variables.noTelp,\r\n            tanggalMasuk: variables.tanggalMasuk,\r\n            tempatLahir:  variables.tempatLahir,\r\n            tanggalLahir: variables.tanggalLahir,\r\n            alamat: variables.alamat,\r\n            agama: variables.agama,\r\n            pendidikan: variables.pendidikan,\r\n            file: file,\r\n            idJabatan: parseInt(variables.idJabatan),\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n    const handleFileChange = e =>{\r\n        const file = e.target.files[0]\r\n        if(!file) return\r\n        setFile(e.target.files[0]);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n            if(reader.readyState === 2){\r\n                setImageURI(reader.result);\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <h1>Tambah Karyawan</h1>\r\n                    <p className=\"text-medium-emphasis\">Masukkan Data-data Karyawan</p>\r\n                    {showUser}\r\n                    {showError}\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"ID\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, id: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Nama Lengkap\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, username: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NIK\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, nik: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NO.Telpon\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, noTelp: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdBadge />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, idJabatan: parseInt(e.target.value)})\r\n                            }>\r\n                            <option value=\"0\">Pilih Jabatan</option>\r\n                            {usersMarkUp}\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Masuk: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalMasuk} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalMasuk: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilBuilding} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Tempat Lahir\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, tempatLahir: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Lahir: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalLahir} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalLahir: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaAddressCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Alamat\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, alamat: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaPlaceOfWorship />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, agama: e.target.value})\r\n                            }>\r\n                            <option value=\"Islam\">Islam</option>\r\n                            <option value=\"Kristen\">Kristen</option>\r\n                            <option value=\"Katolik\">Katolik</option>\r\n                            <option value=\"Buddha\">Buddha</option>\r\n                            <option value=\"Hindu\">Hindu</option>\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilEducation} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, pendidikan: e.target.value})\r\n                            }>\r\n                            <option value=\"SMP\">SMP</option>\r\n                            <option value=\"SMA\">SMA</option>\r\n                            <option value=\"Sarjana\">Sarjana</option>\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                        <CCol xs={6}>\r\n                            <CButton color=\"primary\" className=\"px-4\" onClick={() => register()}>\r\n                                Tambahkan\r\n                            </CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CForm>\r\n            </CCol>\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <CImage src={!imageURI ? \"/default.png\": imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </CForm>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        /*<Fragment>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Daftar Karyawan</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.nama && 'text-danger'}>{errors.nama ?? 'Nama'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {variables.username}\r\n                                onChange={e => \r\n                                    setVariables({...variables, username : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.nik && 'text-danger'}>{errors.nik ?? 'No. NIK'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.nik} \r\n                                onChange={e => \r\n                                    setVariables({...variables, nik: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Jabatan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={variables.idJabatan}\r\n                                onChange={e => \r\n                                    setVariables({...variables, idJabatan: parseInt(e.target.value)})\r\n                            }>\r\n                                {usersMarkUp}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tanggalMasuk && 'text-danger'}>{errors.tanggalMasuk ?? 'Tanggal Masuk'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                value={variables.tanggalMasuk} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tanggalMasuk: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tempatLahir && 'text-danger'}>{errors.tempatLahir ?? 'Tempat Lahir'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.tempatLahir} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tempatLahir: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tanggalLahir && 'text-danger'}>{errors.tanggalLahir ?? 'Tanggal Lahir'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                value={variables.tanggalLahir} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tanggalLahir: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.alamat && 'text-danger'}>{errors.alamat ?? 'Alamat'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.alamat} \r\n                                onChange={e => \r\n                                    setVariables({...variables, alamat: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.agama && 'text-danger'}>{errors.agama ?? 'Agama'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.agama} \r\n                                onChange={e => \r\n                                    setVariables({...variables, agama: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.pendidikan && 'text-danger'}>{errors.pendidikan ?? 'Pendidikan'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.pendidikan} \r\n                                onChange={e => \r\n                                    setVariables({...variables, pendidikan: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                            {loading? 'loading..':'Daftarkan'}\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs lg=\"2\" className=\"justify-content-center\">\r\n                    <img src={imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"175\" height=\"200\"/>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </Col>\r\n            </Row>\r\n        </Fragment>*/\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CContainer } from '@coreui/react';\r\n\r\nconst getPermintaanDataDiri = gql`\r\n    query getPermintaanDataDiri{\r\n        getPermintaanDataDiri{\r\n            namaKaryawan id idKaryawan bagianData dataSeharusnya\r\n        }\r\n    }\r\n`;\r\n\r\nconst getListKaryawanMaster = gql`\r\n    query getListKaryawanMaster(\r\n        $page: Int \r\n        $limit: Int \r\n    ){\r\n        getListKaryawanMaster(\r\n            page: $page\r\n            limit: $limit\r\n        ){\r\n            count rows{\r\n                id nama nik noTelp tanggalMasuk tempatLahir tanggalLahir alamat agama pendidikan foto jabatan{\r\n                    namaJabatan tingkatJabatan\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function MasterKaryawan(props) {\r\n    let history = useHistory();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(null);\r\n    const [selectedDateAkhir, setSelectedDateAkhir] = useState(null);\r\n    const { \r\n        loading: loadingPermintaan, \r\n        data: dataPermintaan ,\r\n        refetch: refetchPermintaan,\r\n    }= useQuery(getPermintaanDataDiri);\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan ,\r\n        refetch: refetchKaryawan,\r\n    }= useQuery(getListKaryawanMaster,{\r\n        variables: {\r\n            page: pageNumber,\r\n            limit: limit,\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan, laporanPermintaan) =>{\r\n        history.push({\r\n            pathname: '/karyawan/detail karyawan',\r\n            state: { \r\n                laporan: laporan,\r\n                laporanPermintaan: laporanPermintaan\r\n            }\r\n        });\r\n    }\r\n\r\n    const breakPoints = [\r\n        {width: 500, itemsToShow: 1},\r\n        {width: 768, itemsToShow: 2},\r\n        {width: 1200, itemsToShow: 3},\r\n        {width: 1500, itemsToShow: 4},\r\n    ]\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(dataPermintaan === undefined || loadingPermintaan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(dataPermintaan.getPermintaanDataDiri.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Data Permintaan Perubahan Data Diri</p>)\r\n    }else if(dataPermintaan.getPermintaanDataDiri.length > 0 && !counter){\r\n        dataKu.push(\r\n            <Carousel\r\n                breakPoints={breakPoints}>\r\n                {\r\n                    dataPermintaan.getPermintaanDataDiri.map((laporan,index) =>(\r\n                        <div className=\"cardKu\" key={index}>\r\n                            <div className=\"parent\">\r\n                                <p className=\"childLeft\">Id</p>\r\n                                    <p className=\"childRight\">: {laporan.idKaryawan}</p>\r\n                                <p className=\"childLeft\">Nama Karyawan</p>\r\n                                    <p className=\"childRight\">: {laporan.namaKaryawan}</p>\r\n                                <p className=\"childLeft\">Field Yang Salah</p>\r\n                                    <p className=\"childRight\">: {laporan.bagianData}</p>\r\n                                <p className=\"childLeft\">Isi Seharusnya</p>\r\n                                    <p className=\"childRight\">: {laporan.dataSeharusnya}</p>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <Button variant=\"primary\" onClick={() => goToDetail(null, laporan)}>Perbarui Data</Button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </Carousel>)\r\n        counter = true;\r\n    }\r\n    \r\n    let dataKaryawanKu= [];\r\n    let counterKaryawanKu = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(dataKaryawan){\r\n        console.log(dataKaryawan);\r\n    }\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.count && !counterPage){\r\n      var jml = Math.ceil(dataKaryawan.getListKaryawanMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n        dataKaryawanKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.rows.length === 0){\r\n        dataKaryawanKu.push(<p key={1}>Tidak Ada Data Absensi</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.rows.length > 0 && !counterKaryawanKu){\r\n        dataKaryawanKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\">Id</TableCell>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">NIK</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Masuk</TableCell>\r\n                            <TableCell align=\"center\">Tempat Lahir</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Lahir</TableCell>\r\n                            <TableCell align=\"center\">Alamat</TableCell>\r\n                            <TableCell align=\"center\">Agama</TableCell>\r\n                            <TableCell align=\"center\">Pendidikan</TableCell>\r\n                            <TableCell align=\"center\">Nama Jabatan</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataKaryawan.getListKaryawanMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"right\">{laporan.id}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.nik}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalMasuk).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.tempatLahir}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalLahir).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.alamat}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.agama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pendidikan}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {laporan.jabatan.tingkatJabatan === 2? \r\n                                            \"Ketua\"\r\n                                            :laporan.jabatan.tingkatJabatan === 4?\r\n                                                \"Ketua\":\r\n                                                    \"Anggota\"} {laporan.jabatan.namaJabatan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan, null, null)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterKaryawanKu = true;\r\n    }\r\n    useEffect(() => {\r\n        refetchKaryawan()\r\n    }, [pageNumber])\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchPermintaan()\r\n                refetchKaryawan()\r\n            }\r\n        }\r\n    }, [])         \r\n\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Karyawan</h1>\r\n                    {dataKu}\r\n                    {dataKaryawanKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </CContainer>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CFormSelect,\r\n  CFormLabel,\r\n  CImage,\r\n} from '@coreui/react'\r\nimport { freeSet } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nconst getKaryawanKu = gql`\r\nquery getKaryawanKu(\r\n    $id: Int \r\n){\r\n    getKaryawanKu(\r\n        id: $id\r\n    ){\r\n        id nama nik noTelp tanggalMasuk tempatLahir tanggalLahir alamat agama pendidikan foto jabatan{\r\n            namaJabatan tingkatJabatan\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst updateKaryawan = gql`\r\n    mutation updateKaryawan(\r\n      $id: Int \r\n      $idPermintaan: Int \r\n      $nama: String\r\n      $nik: String\r\n      $noTelp: String \r\n      $tanggalMasuk: MyDate\r\n      $tempatLahir: String\r\n      $tanggalLahir: MyDate\r\n      $alamat: String\r\n      $agama: String\r\n      $pendidikan: String\r\n      $file: Upload\r\n  ) {\r\n    updateKaryawan(\r\n      id: $id\r\n      idPermintaan: $idPermintaan\r\n      nama: $nama\r\n      nik: $nik\r\n      noTelp: $noTelp\r\n      tanggalMasuk: $tanggalMasuk\r\n      tempatLahir: $tempatLahir\r\n      tanggalLahir: $tanggalLahir\r\n      alamat: $alamat\r\n      agama: $agama\r\n      pendidikan: $pendidikan\r\n      file: $file\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function DetailKaryawan(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [id, setId] = useState(0);\r\n    const[variables,setVariables] = useState({\r\n        id: 0,\r\n        username:'',\r\n        namaJabatan: '',\r\n        nik: '',\r\n        noTelp: '',\r\n        tanggalMasuk: '',\r\n        tempatLahir: '',\r\n        tanggalLahir: '',\r\n        alamat: '',\r\n        agama: '',\r\n        pendidikan: '',\r\n        foto: '',\r\n    })\r\n    const [file, setFile] = useState();\r\n    const [imageURI, setImageURI] = useState();\r\n    const [getKaryawan, { loading, data }] = useLazyQuery(getKaryawanKu);\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    const [dataKu, setDataKu] = useState([]);\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n\r\n\r\n\r\n    \r\n    let dataPermintaan=[];\r\n    useEffect(() => {\r\n        console.log(location);\r\n        if(location.state !== undefined){\r\n            if(location.state?.laporan !== null){\r\n                var tingkatJabatan = location.state?.laporan.jabatan.tingkatJabatan;\r\n                var jabatan = tingkatJabatan === 2? \"Ketua \": \r\n                                tingkatJabatan === 4? \"Ketua \":\r\n                                    \"Anggota \"\r\n                setVariables({\r\n                    id: location.state?.laporan.id,\r\n                    username: location.state?.laporan.nama,\r\n                    nik: location.state?.laporan.nik,\r\n                    noTelp: location.state?.laporan.noTelp,\r\n                    tanggalMasuk: dayjs(location.state?.laporan.tanggalMasuk).format('YYYY-MM-DD'),\r\n                    tempatLahir: location.state?.laporan.tempatLahir,\r\n                    tanggalLahir: dayjs(location.state?.laporan.tanggalLahir).format('YYYY-MM-DD'),\r\n                    alamat: location.state?.laporan.alamat,\r\n                    agama: location.state?.laporan.agama,\r\n                    pendidikan: location.state?.laporan.pendidikan,\r\n                    foto: location.state?.laporan.foto,\r\n                    namaJabatan: jabatan + location.state?.laporan.jabatan.namaJabatan,\r\n                })\r\n                setImageURI(location.state?.laporan.foto)\r\n            }else if(location.state?.laporanPermintaan !== null){\r\n                var laporan = location.state.laporanPermintaan;\r\n                setDataKu(\r\n                    <div key={0}>\r\n                        <p>Bagian Data Yang Salah: {laporan.bagianData}</p>\r\n                        <p>Data Seharusnya: {laporan.dataSeharusnya}</p>\r\n                    </div>\r\n                )\r\n                getKaryawan({\r\n                    variables: {\r\n                        id: laporan.idKaryawan\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if(data){\r\n            console.log(data);\r\n        }\r\n        if(!data || loading){\r\n\r\n        }else if(data.getKaryawanKu !== null){\r\n            var laporan = data.getKaryawanKu\r\n            var tingkatJabatan = laporan.jabatan.tingkatJabatan;\r\n            var jabatan = tingkatJabatan === 2? \"Ketua \": \r\n                            tingkatJabatan === 4? \"Ketua \":\r\n                                \"Anggota \"\r\n            setVariables({\r\n                id: laporan.id,\r\n                username: laporan.nama,\r\n                nik: laporan.nik,\r\n                noTelp: laporan.noTelp,\r\n                tanggalMasuk: dayjs(laporan.tanggalMasuk).format('YYYY-MM-DD'),\r\n                tempatLahir: laporan.tempatLahir,\r\n                tanggalLahir: dayjs(laporan.tanggalLahir).format('YYYY-MM-DD'),\r\n                alamat: laporan.alamat,\r\n                agama: laporan.agama,\r\n                pendidikan: laporan.pendidikan,\r\n                foto: laporan.foto,\r\n                namaJabatan: jabatan + laporan.jabatan.namaJabatan,\r\n            })\r\n            setImageURI(laporan.foto)\r\n        }\r\n    }, [data])\r\n\r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n            \r\n    }\r\n\r\n    const [updateKaryawanKu] = useMutation(updateKaryawan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            console.log(\"suksess\")\r\n            history.push({\r\n                pathname: '/karyawan/master karyawan',\r\n            });\r\n        }\r\n    })\r\n    const register = () =>{\r\n        console.log(location.state.laporanPermintaan)\r\n        var idPermintaan = location.state.laporanPermintaan === null? -1: location.state.laporanPermintaan.id;\r\n        updateKaryawanKu({variables:{\r\n            id: variables.id,\r\n            idPermintaan: idPermintaan,\r\n            nama: variables.username,\r\n            nik: variables.nik,\r\n            noTelp: variables.noTelp,\r\n            tanggalMasuk: variables.tanggalMasuk,\r\n            tempatLahir:  variables.tempatLahir,\r\n            tanggalLahir: variables.tanggalLahir,\r\n            alamat: variables.alamat,\r\n            agama: variables.agama,\r\n            pendidikan: variables.pendidikan,\r\n            file: file,\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n    const handleFileChange = e =>{\r\n        const file = e.target.files[0]\r\n        if(!file) return\r\n        setFile(file);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n            if(reader.readyState === 2){\r\n                console.log(reader.result);\r\n                setImageURI(reader.result);\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <h1>Perbarui Karyawan</h1>\r\n                    <p className=\"text-medium-emphasis\">Masukkan Data-data Karyawan Yang Baru</p>\r\n                    {showUser}\r\n                    {showError}\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"ID\" \r\n                            autoComplete=\"id\" \r\n                            value={variables.id}\r\n                            disabled={true}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Nama Jabatan\" \r\n                            autoComplete=\"namaJabatan\" \r\n                            value={variables.namaJabatan}\r\n                            disabled={true}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Nama Lengkap\" \r\n                            autoComplete=\"nama\" \r\n                            value={variables.username}\r\n                            onChange={e => setVariables({...variables, username: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NIK\" \r\n                            autoComplete=\"nama\" \r\n                            value={variables.nik}\r\n                            onChange={e => setVariables({...variables, nik: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NO.Telp\" \r\n                            autoComplete=\"nama\" \r\n                            value={variables.noTelp}\r\n                            onChange={e => setVariables({...variables, noTelp: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Masuk: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalMasuk} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalMasuk: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilBuilding} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Tempat Lahir\" \r\n                            autoComplete=\"nama\" \r\n                            value={variables.tempatLahir}\r\n                            onChange={e => setVariables({...variables, tempatLahir: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Lahir: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalMasuk} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalMasuk: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaAddressCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Alamat\" \r\n                            autoComplete=\"nama\" \r\n                            value={variables.alamat}\r\n                            onChange={e => setVariables({...variables, alamat: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaPlaceOfWorship />\r\n                        </CInputGroupText>\r\n                        <CFormSelect \r\n                            className=\"col-xl-10\" \r\n                            aria-label=\"Large select example\"\r\n                            value={variables.agama}\r\n                            onChange={e => \r\n                                setVariables({...variables, agama: parseInt(e.target.value)})\r\n                            }>\r\n                            <option value=\"Islam\">Islam</option>\r\n                            <option value=\"Kristen\">Kristen</option>\r\n                            <option value=\"Katolik\">Katolik</option>\r\n                            <option value=\"Buddha\">Buddha</option>\r\n                            <option value=\"Hindu\">Hindu</option>\r\n                        </CFormSelect>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilEducation} />\r\n                        </CInputGroupText>\r\n                        <CFormSelect \r\n                            className=\"col-xl-10\" \r\n                            aria-label=\"Large select example\"\r\n                            value={variables.pendidikan}\r\n                            onChange={e => \r\n                                setVariables({...variables, pendidikan: parseInt(e.target.value)})\r\n                            }>\r\n                            <option value=\"SMP\">SMP</option>\r\n                            <option value=\"SMA\">SMA</option>\r\n                            <option value=\"Sarjana\">Sarjana</option>\r\n                        </CFormSelect>\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                        <CCol xs={6}>\r\n                            <CButton color=\"primary\" className=\"px-4\" onClick={() => register()}>\r\n                                Perbarui\r\n                            </CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CForm>\r\n            </CCol>\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <CImage src={!imageURI ? \"/default.png\": imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </CForm>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useState } from 'react';\r\n\r\n\r\nconst getPermintaansMaster = gql`\r\nquery getPermintaansMaster(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getPermintaansMaster(\r\n    page: $page\r\n    limit: $limit \r\n    orderBy: $orderBy\r\n    karyawan: $karyawan\r\n    bulan: $bulan\r\n    status: $status\r\n  ){\r\n    count rows{\r\n        id peminta{nama} status tanggalMulai tanggalBerakhir totalHari keterangan upload ketua{nama} \r\n        hrd{nama} izin{\r\n            namaIzin totalIzin\r\n        }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Permintaan(props) {\r\n    let history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const { loading, data, refetch } = useQuery(getPermintaansMaster,{\r\n        variables: {\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        history.push({\r\n            pathname: '/permintaan/detail permintaan',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n    let pageKu = [];\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getPermintaansMaster.count){\r\n      var jml = Math.ceil(data.getPermintaansMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getPermintaansMaster.rows.length === 0){\r\n        dataKu.push(<p className=\"badgeStatusNonText\">Tidak Ada Permintaan Dari Karyawan</p>)\r\n    }else if(data.getPermintaansMaster.rows.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Izin</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Mulai</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Berakhir</TableCell>\r\n                            <TableCell align=\"center\">Total</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getPermintaansMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.peminta?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.izin?.namaIzin}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalMulai).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalBerakhir).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.totalHari} Hari</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi Ketua</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</div>:\r\n                                                laporan.status === 3?\r\n                                                <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Permintaan Karyawan</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"1\">Menunggu Persetujuan Ketua</option>\r\n                        <option value=\"2\">Menunggu Persetujuan HRD</option>\r\n                        <option value=\"3\">Di Terima</option>\r\n                        <option value=\"0\">Di Tolak</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Permintaan Terbaru\">Permintaan Terbaru</option>\r\n                            <option value=\"Permintaan Terlama\">Permintaan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useMutation} from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nconst updateStatusPermintaan = gql`\r\n    mutation updateStatusPermintaan(\r\n      $id: Int\r\n      $status: Int\r\n      $alasan: String\r\n  ) {\r\n    updateStatusPermintaan(\r\n      id: $id\r\n      status: $status\r\n      alasan: $alasan\r\n    ){\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\nexport default function DetailPermintaan(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [alasan, setAlasan] = useState(\"\");\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n    \r\n    const [updateStatusPermintaanKu] = useMutation(updateStatusPermintaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n          console.log(err);\r\n        },\r\n        onCompleted(data){\r\n            console.log(data);\r\n            props.history.push('/permintaan/permintaan izin');\r\n        }\r\n      })\r\n\r\n    const actionPermintaan = (status) => {\r\n        console.log(alasan);\r\n        updateStatusPermintaanKu({variables:{\r\n          id: dataLaporan.id,\r\n          status: status,\r\n          alasan: alasan,\r\n        }\r\n        });\r\n      }\r\n    return (\r\n      <Container className=\"containerKu\">\r\n        <Row>\r\n            <Col>\r\n                <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col className=\"col-md-6\">\r\n            <h1 className=\"text-center\">Detail Permintaan</h1>\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div className=\"parent\">\r\n                      <p className=\"childLeft\">Nama Karyawan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.peminta?.nama}</p>\r\n                      <p className=\"childLeft\">Izin</p>\r\n                        <p className=\"childRight\">: {dataLaporan.izin?.namaIzin}</p>\r\n                      <p className=\"childLeft\">Maks Izin</p>\r\n                        <p className=\"childRight\">: {dataLaporan.izin?.totalIzin} Hari</p>\r\n                      {\r\n                        dataLaporan.ketua === null? null:\r\n                        <>\r\n                          <p className=\"childLeft\">Nama Ketua</p>\r\n                            <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                        </>\r\n                      }\r\n                      <p className=\"childLeft\">Tanggal Mulai</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalMulai).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Tanggal Berakhir</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalBerakhir).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Total Hari</p>\r\n                        <p className=\"childRight\">: {dataLaporan.totalHari} Hari</p>\r\n                      <p className=\"childLeft\">Keterangan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                    </div>\r\n                    <p className=\"text-center statusKu\">Status:\r\n                      {dataLaporan.status === 1? \r\n                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi Ketua</div>:\r\n                          dataLaporan.status === 2? \r\n                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</div>:\r\n                              dataLaporan.status === 3?\r\n                                <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                <div className=\"badgeStatusNon\">Di Tolak</div>}\r\n                    </p>\r\n                    {dataLaporan.upload === \"-\" ? null : <img src={dataLaporan.upload} alt=\"\" id=\"img\" className=\"img\" width=\"200\" height=\"150\"/> }\r\n                    {\r\n                      dataLaporan.status !== 2? null:\r\n                      <div>\r\n                        <br></br>\r\n                        <Form.Label className=\"childLeft\">Alasan Tolak: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            value={alasan} \r\n                            onChange={e => \r\n                                setAlasan(e.target.value)\r\n                            }\r\n                        />\r\n                        <br></br>\r\n                        <div className=\"buttonsSideBySide\">\r\n                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => actionPermintaan(3)}>\r\n                              Terima\r\n                            </Button>\r\n                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => actionPermintaan(0)}>\r\n                              Tolak\r\n                            </Button>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container, Form} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CContainer } from '@coreui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport DatePicker from 'react-datepicker'\r\n\r\nconst getPermintaanPinjamanDiri = gql`\r\n    query getPermintaanPinjamanDiri{\r\n        getPermintaanPinjamanDiri{\r\n            id karyawan{nama} jumlahPinjam keteranganPinjam lunas cicilan status\r\n        }\r\n    }\r\n`;\r\n\r\nconst getListPinjaman = gql`\r\n    query getListPinjaman(\r\n        $page: Int \r\n        $limit: Int \r\n        $orderBy: String \r\n        $karyawan: Int \r\n        $bulan: MyDate\r\n        $status: Int \r\n    ){\r\n        getListPinjaman(\r\n            page: $page\r\n            limit: $limit\r\n            orderBy: $orderBy\r\n            karyawan: $karyawan\r\n            bulan: $bulan\r\n            status: $status\r\n        ){\r\n            count rows{\r\n                id karyawan{nama} hrd{nama} keuangan{nama}  jumlahPinjam keteranganPinjam lunas cicilan status\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function PermintaanPinjaman(props) {\r\n    let history = useHistory();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    /*const { \r\n        loading: loadingPermintaan, \r\n        data: dataPermintaan ,\r\n        refetch: refetchPermintaan,\r\n    }= useQuery(getPermintaanPinjamanDiri);*/\r\n    const { \r\n        loading: loadingPinjaman, \r\n        data: dataPinjaman ,\r\n        refetch: refetchPinjaman,\r\n    }= useQuery(getListPinjaman,{\r\n        variables: {\r\n            page: pageNumber,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) =>{\r\n        history.push({\r\n            pathname: '/permintaan/detail pinjaman',\r\n            state: { \r\n                laporan: laporan,\r\n            }\r\n        });\r\n    }\r\n\r\n    /*const breakPoints = [\r\n        {width: 500, itemsToShow: 1},\r\n        {width: 768, itemsToShow: 2},\r\n        {width: 1200, itemsToShow: 3},\r\n        {width: 1500, itemsToShow: 4},\r\n    ]\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(dataPermintaan){\r\n        console.log(dataPermintaan)\r\n    }\r\n    if(dataPermintaan === undefined || loadingPermintaan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(dataPermintaan.getPermintaanPinjamanDiri.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Data Permintaan Pinjaman</p>)\r\n    }else if(dataPermintaan.getPermintaanPinjamanDiri.length > 0 && !counter){\r\n        dataKu.push(\r\n            <Carousel\r\n                breakPoints={breakPoints}>\r\n                {\r\n                    dataPermintaan.getPermintaanPinjamanDiri.map((laporan,index) =>(\r\n                        <div className=\"cardKu\">\r\n                            <p>Nama Karyawan: {laporan.karyawan.nama}</p>\r\n                            <p>Jumlah Cicilan: {laporan.cicilan}</p>\r\n                            <p>Jumlah Pinjaman: <CurrencyFormat displayType={'text'} value={laporan.jumlahPinjam} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                            <p>Keterangan Pinjaman: {laporan.keteranganPinjam}</p>\r\n                            <Button variant=\"info\" onClick={() => goToDetail(laporan)}>Detail</Button>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </Carousel>)\r\n        counter = true;\r\n    }*/\r\n    \r\n    let dataUtangKu= [];\r\n    let counterUtangKu = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(dataPinjaman){\r\n        console.log(dataPinjaman);\r\n    }\r\n    if(dataPinjaman === undefined || loadingPinjaman){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPinjaman.getListPinjaman.count && !counterPage){\r\n      var jml = Math.ceil(dataPinjaman.getListPinjaman.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(dataPinjaman === undefined || loadingPinjaman){\r\n        dataUtangKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPinjaman.getListPinjaman.rows.length === 0){\r\n        dataUtangKu.push(<p key={1}>Tidak Ada Data Absensi</p>)\r\n    }else if(dataPinjaman.getListPinjaman.rows.length > 0 && !counterUtangKu){\r\n        dataUtangKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Jumlah Pinjaman</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Pinjaman</TableCell>\r\n                            <TableCell align=\"center\">Lunas</TableCell>\r\n                            <TableCell align=\"center\">Cicilan</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPinjaman.getListPinjaman.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.jumlahPinjam} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keteranganPinjam}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.lunas === true? \r\n                                        <div className=\"badgeStatusAktif\">Lunas</div>:\r\n                                        <div className=\"badgeStatusNon\">Belum</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.cicilan}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        laporan.status === 0?\r\n                                            <div className=\"badgeStatusWaiting\">Menunggu HRD</div>:\r\n                                            laporan.status === 1?\r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Uang Diserahkan</div>:\r\n                                                laporan.status === 2?\r\n                                                    <div className=\"badgeStatusAktif\">Selesai</div>:\r\n                                                    laporan.status === 4?\r\n                                                    <div className=\"badgeStatusNon\">Menunggu Verifikasi Penerima</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Tolak</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterUtangKu = true;\r\n    }\r\n    useEffect(() => {\r\n        refetchPinjaman()\r\n    }, [pageNumber])\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                //refetchPermintaan()\r\n                refetchPinjaman()\r\n            }\r\n        }\r\n    }, [])         \r\n\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Pinjaman</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Verifikasi HRD</option>\r\n                        <option value=\"1\">Menunggu Pembayaran Gaji</option>\r\n                        <option value=\"2\">Selesai</option>\r\n                        <option value=\"3\">Dibatalkan</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Slip Terbaru\">Slip Terbaru</option>\r\n                            <option value=\"Slip Terlama\">Slip Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    {dataUtangKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </CContainer>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button, Form} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\n\r\nconst getDetailPinjaman = gql`\r\nquery getDetailPinjaman(\r\n    $id: String  \r\n){\r\n    getDetailPinjaman(\r\n        id: $id\r\n    ){\r\n        totalPembayaran pembayaranKe lunas\r\n  }\r\n}\r\n`;\r\n\r\nconst updateHPinjaman = gql`\r\n    mutation updateHPinjaman(\r\n      $id: String \r\n      $status: Boolean\r\n      $keterangan: String\r\n  ) {\r\n    updateHPinjaman(\r\n      id: $id\r\n      status: $status\r\n      keterangan: $keterangan\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailPinjaman(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailPinjaman,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataKu= [];\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailPinjaman === null){\r\n        dataKu.push(<p key={0}>Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getDetailPinjaman !== null){\r\n        dataKu.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    <h3 className=\"text-center\">Detail Gaji:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">No Pembayaran</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Pembayaran</TableCell>\r\n                                <TableCell align=\"center\">Lunas</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailPinjaman.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align=\"center\">{laporan.pembayaranKe}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <CurrencyFormat displayType={'text'} value={laporan.totalPembayaran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{\r\n                                            laporan.lunas === true?\r\n                                                <div className=\"badgeStatusAktifText\">Lunas</div>:\r\n                                                <div className=\"badgeStatusNonText\">Belum</div>\r\n                                        }</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const [updatePinjamanKu] = useMutation(updateHPinjaman,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/permintaan/permintaan pinjaman'\r\n            });\r\n        }\r\n    })\r\n    \r\n    const updatePinjaman = (status) => {\r\n        updatePinjamanKu({\r\n            variables: {\r\n                id: dataLaporan.id,\r\n                status: status,\r\n                keterangan: keterangan\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col>\r\n                    <Card className=\"mx-auto\" style={{width: '50%', textAlign: 'center'}}>\r\n                        <Card.Header>Detail Pinjaman Karyawan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <p>Nama Karyawan: {dataLaporan.karyawan?.nama}</p>\r\n                                <p>Jumlah Pinjam: <CurrencyFormat displayType={'text'} value={dataLaporan.jumlahPinjam} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                <p>Cicilan: {dataLaporan.cicilan}</p>\r\n                                <p>Status Pembayaran: {dataLaporan.lunas === true?\r\n                                                <div className=\"badgeStatusAktifText\">Lunas</div>:\r\n                                                <div className=\"badgeStatusNonText\">Belum</div>}</p>\r\n                                <p>Status: \r\n                                    {\r\n                                        dataLaporan.status === 0?\r\n                                            <div className=\"badgeStatusWaiting\">Menunggu HRD</div>:\r\n                                            dataLaporan.status === 1?\r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Uang Diserahkan</div>:\r\n                                                dataLaporan.status === 2?\r\n                                                    <div className=\"badgeStatusNon\">Selesai</div>:\r\n                                                    dataLaporan.status === 4?\r\n                                                    <div className=\"badgeStatusNon\">Menunggu Verifikasi Penerima</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Tolak</div>\r\n                                    }\r\n                                </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n            {\r\n                dataLaporan.status === 0?\r\n                    <Row className=\"justify-content-center text-center\" style={{marginTop:10}}>\r\n                        <Col className=\"col-md-4\">\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>Keterangan</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"textarea\" \r\n                                    name=\"nama\"\r\n                                    value= {keterangan}\r\n                                    onChange={e => \r\n                                        setKeterangan(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"buttonsSideBySide\">\r\n                                <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updatePinjaman(true)}>\r\n                                    Terima\r\n                                </Button>\r\n                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updatePinjaman(false)}>\r\n                                    Tolak\r\n                                </Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                :null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useState } from 'react';\r\n\r\n\r\nconst getListSuratMaster = gql`\r\nquery getListSuratMaster(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getListSuratMaster(\r\n    page: $page\r\n    limit: $limit \r\n    orderBy: $orderBy\r\n    karyawan: $karyawan\r\n    bulan: $bulan\r\n    status: $status\r\n  ){\r\n    count rows{\r\n        id jenisSurat hrd{nama} karyawan{nama} tanggalKerja file keterangan keteranganHRD status createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function PermintaanSurat(props) {\r\n    let history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const { loading, data, refetch } = useQuery(getListSuratMaster,{\r\n        variables: {\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        history.push({\r\n            pathname: '/surat/detail surat',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n    let pageKu = [];\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getListSuratMaster.count){\r\n      var jml = Math.ceil(data.getListSuratMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getListSuratMaster.rows.length === 0){\r\n        dataKu.push(<p className=\"badgeStatusNonText\">Tidak Ada Permintaan Surat Dari Karyawan</p>)\r\n    }else if(data.getListSuratMaster.rows.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Permintaan</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Keterangan</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getListSuratMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalKerja).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 0? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 1? \r\n                                            <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Permintaan Surat</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Verifikasi</option>\r\n                        <option value=\"1\">Di Terima</option>\r\n                        <option value=\"2\">Di Tolak</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Permintaan Terbaru\">Permintaan Terbaru</option>\r\n                            <option value=\"Permintaan Terlama\">Permintaan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useMutation} from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { saveAs } from 'file-saver';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst updateStatusSurat = gql`\r\n    mutation updateStatusSurat(\r\n      $id: String\r\n      $status: Int\r\n      $keteranganHRD: String\r\n  ) {\r\n    updateStatusSurat(\r\n      id: $id\r\n      status: $status\r\n      keteranganHRD: $keteranganHRD\r\n    ){\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\nexport default function DetailSurat(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n    \r\n    const [updateStatusPermintaanKu, {loading}] = useMutation(updateStatusSurat,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n          console.log(err);\r\n        },\r\n        onCompleted(data){\r\n            console.log(data);\r\n            props.history.push('/surat/daftar surat keterangan');\r\n        }\r\n      })\r\n\r\n    const actionPermintaan = (status) => {\r\n        updateStatusPermintaanKu({variables:{\r\n          id: dataLaporan.id,\r\n          status: status,\r\n          keteranganHRD: keterangan,\r\n        }\r\n        });\r\n      }\r\n\r\n      const downloadFile = () => {\r\n        console.log(dataLaporan.file)\r\n        var FileSaver = require('file-saver');\r\n        FileSaver.saveAs(dataLaporan.file, dataLaporan.id+\".pdf\");\r\n      }\r\n    return (\r\n      <Container className=\"containerKu\">\r\n        <Row>\r\n            <Col>\r\n                <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col className=\"col-md-6\">\r\n            <h1 className=\"text-center\">Detail Permintaan</h1>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col className=\"col-md-2\">\r\n                    <ClipLoader color=\"#000000\" loading={loading} className=\"loadingKu\" size={150} />\r\n                </Col>\r\n            </Row>\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div className=\"parent\">\r\n                      <p className=\"childLeft\">Nama Karyawan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                      <p className=\"childLeft\">Nama HRD</p>\r\n                        <p className=\"childRight\">: {dataLaporan.hrd?.nama}</p>\r\n                      <p className=\"childLeft\">Surat</p>\r\n                        <p className=\"childRight\">: {dataLaporan.jenisSurat}</p>\r\n                      <p className=\"childLeft\">Tanggal Permintaan</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalKerja).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Tanggal Laporan</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalLaporan).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Keterangan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                      {\r\n                        dataLaporan.keteranganHRD === \"\"? null:\r\n                        <>\r\n                          <p className=\"childLeft\">Keterangan HRD</p>\r\n                            <p className=\"childRight\">: {dataLaporan.keteranganHRD}</p>\r\n                        </>\r\n                      }\r\n                    </div>\r\n                    <p className=\"text-center statusKu\">Status:\r\n                      {dataLaporan.status === 0? \r\n                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                          dataLaporan.status === 1? \r\n                            <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                <div className=\"badgeStatusNon\">Di Tolak</div>}\r\n                    </p>\r\n                    {\r\n                      dataLaporan.status !== 1? null:\r\n                        <Button variant=\"primary\" onClick={() => downloadFile()}>\r\n                          Download File\r\n                        </Button>\r\n                    }\r\n                    {\r\n                      dataLaporan.status !== 0? null:\r\n                      <div>\r\n                        <br></br>\r\n                        <Form.Label className=\"childLeft\">Keterangan HRD: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            value={keterangan} \r\n                            onChange={e => \r\n                              setKeterangan(e.target.value)\r\n                            }\r\n                        />\r\n                        <br></br>\r\n                        <div className=\"buttonsSideBySide\">\r\n                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => actionPermintaan(1)}>\r\n                              Terima\r\n                            </Button>\r\n                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => actionPermintaan(2)}>\r\n                              Tolak\r\n                            </Button>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { useState } from 'react';\r\n\r\n\r\nconst getListSuratPerintahMaster = gql`\r\nquery getListSuratPerintahMaster(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getListSuratPerintahMaster(\r\n    page: $page\r\n    limit: $limit \r\n    orderBy: $orderBy\r\n    karyawan: $karyawan\r\n    bulan: $bulan\r\n    status: $status\r\n  ){\r\n    count rows{\r\n        id karyawan{nama} hrd{nama} dinas tanggalMulai tanggalAkhir status\r\n        keterangan keteranganKaryawan file createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DaftarSuratPerintah(props) {\r\n    let history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const { loading, data, refetch } = useQuery(getListSuratPerintahMaster,{\r\n        variables: {\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        history.push({\r\n            pathname: '/surat/detail surat perintah',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n    let pageKu = [];\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getListSuratPerintahMaster.count){\r\n      var jml = Math.ceil(data.getListSuratPerintahMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getListSuratPerintahMaster.rows.length === 0){\r\n        dataKu.push(<p className=\"badgeStatusNonText\">Tidak Ada Permintaan Surat Dari Karyawan</p>)\r\n    }else if(data.getListSuratPerintahMaster.rows.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Dinas</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Mulai</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Akhir</TableCell>\r\n                            <TableCell align=\"center\">Keterangan</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getListSuratPerintahMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.dinas}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalMulai).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalAkhir).format('DD-MM-YYYY HH:mm:ss')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 0? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Persetujuan</div>:\r\n                                            laporan.status === 1? \r\n                                            <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                                laporan.status === 2? \r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                                <div className=\"badgeStatusNon\">Di Batalkan</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refetch();\r\n    }, [])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Permintaan Surat Perintah</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Verifikasi</option>\r\n                        <option value=\"1\">Di Terima</option>\r\n                        <option value=\"2\">Di Tolak</option>\r\n                        <option value=\"3\">Di Batalkan</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Permintaan Terbaru\">Permintaan Terbaru</option>\r\n                            <option value=\"Permintaan Terlama\">Permintaan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useMutation} from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { saveAs } from 'file-saver';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst updateStatusSuratPerintahMaster = gql`\r\n    mutation updateStatusSuratPerintahMaster(\r\n      $id: String\r\n      $status: Int\r\n  ) {\r\n    updateStatusSuratPerintahMaster(\r\n      id: $id\r\n      status: $status\r\n    ){\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\nexport default function DetailSuratPerintah(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n    \r\n    const [updateStatusPermintaanKu] = useMutation(updateStatusSuratPerintahMaster,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n          console.log(err);\r\n        },\r\n        onCompleted(data){\r\n            console.log(data);\r\n            props.history.push('/surat/daftar surat perintah');\r\n        }\r\n      })\r\n\r\n    const actionPermintaan = (status) => {\r\n        updateStatusPermintaanKu({variables:{\r\n          id: dataLaporan.id,\r\n          status: status,\r\n        }\r\n        });\r\n      }\r\n\r\n      const downloadFile = () => {\r\n        console.log()\r\n        var FileSaver = require('file-saver');\r\n        FileSaver.saveAs(dataLaporan.file, dataLaporan.id+\".pdf\");\r\n      }\r\n    return (\r\n      <Container className=\"containerKu\">\r\n        <Row>\r\n            <Col>\r\n                <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col className=\"col-md-6\">\r\n            <h1 className=\"text-center\">Detail Permintaan</h1>\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <div className=\"parent\">\r\n                      <p className=\"childLeft\">Nama Karyawan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                      <p className=\"childLeft\">Nama HRD</p>\r\n                        <p className=\"childRight\">: {dataLaporan.hrd?.nama}</p>\r\n                      <p className=\"childLeft\">Dinas</p>\r\n                        <p className=\"childRight\">: {dataLaporan.dinas}</p>\r\n                      <p className=\"childLeft\">Tanggal Mulai</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalMulai).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Tanggal Akhir</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalAkhir).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Tanggal Laporan</p>\r\n                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalLaporan).format('DD-MM-YYYY')}</p>\r\n                      <p className=\"childLeft\">Keterangan</p>\r\n                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                      {\r\n                        dataLaporan.keteranganKaryawan === \"\"? null:\r\n                        <>\r\n                          <p className=\"childLeft\">Keterangan Karyawan</p>\r\n                            <p className=\"childRight\">: {dataLaporan.keteranganKaryawan}</p>\r\n                        </>\r\n                      }\r\n                    </div>\r\n                    <p className=\"text-center statusKu\">Status:\r\n                      {dataLaporan.status === 0? \r\n                        <div className=\"badgeStatusWaiting\">Menunggu Persetujuan</div>:\r\n                          dataLaporan.status === 1? \r\n                            <div className=\"badgeStatusAktif\">Di Terima</div>:\r\n                                dataLaporan.status === 2? \r\n                                <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                <div className=\"badgeStatusNon\">Di Batalkan</div>}\r\n                    </p>\r\n                    {\r\n                      dataLaporan.status !== 0? \r\n                        <Button variant=\"primary\" onClick={() => downloadFile()}>\r\n                          Download File\r\n                        </Button>:\r\n                        <div className=\"buttonsSideBySide\">\r\n                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => downloadFile()}>\r\n                              Download File\r\n                            </Button>\r\n                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => actionPermintaan(3)}>\r\n                              Batalkan\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                  </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst Overview = () => {\r\n  return (\r\n    <div className='home'>\r\n      <h1>Overview</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Card, Button} from 'react-bootstrap';\r\nimport { gql, useMutation, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs';\r\nimport { CImage } from '@coreui/react';\r\n\r\nconst getKaryawan = gql`\r\nquery getKaryawan{\r\n  getKaryawan{\r\n    nama nik noTelp tanggalMasuk tempatLahir tanggalLahir alamat agama pendidikan namaJabatan foto jabatan{\r\n        namaJabatan\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Profil(props) {\r\n    const { loading, data, refetch } = useQuery(getKaryawan);\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(!data || loading){\r\n        usersMarkUp = <p className=\"badgeStatusWaitingText\">Loading...</p>\r\n    }else if(data.getKaryawan === null){\r\n        usersMarkUp = <p className=\"badgeStatusNonText\">Tidak Ada Data User</p>\r\n    }else if(data.getKaryawan !== null && !counter){\r\n        var karyawan = data.getKaryawan;\r\n        usersMarkUp = \r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <CImage src={!karyawan.foto ? \"/default.png\": karyawan.foto} alt=\"\" id=\"img\" className=\"tinyLogo\" width=\"150\" height=\"150\"/>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        <div className=\"parent\">\r\n                            <p className=\"childLeft\">Nama</p>\r\n                                <p className=\"childRight\">: {karyawan.nama}</p>\r\n                            <p className=\"childLeft\">Jabatan</p>\r\n                                <p className=\"childRight\">: {karyawan.jabatan?.namaJabatan}</p>\r\n                            <p className=\"childLeft\">NIK</p>\r\n                                <p className=\"childRight\">: {karyawan.nik}</p>\r\n                            <p className=\"childLeft\">NO.Telpon</p>\r\n                                <p className=\"childRight\">: {karyawan.noTelp}</p>\r\n                            <p className=\"childLeft\">Tanggal Masuk</p>\r\n                                <p className=\"childRight\">: {dayjs(karyawan.tanggalMasuk).format('DD-MM-YYYY')}</p>\r\n                            <p className=\"childLeft\">Tempat Lahir</p>\r\n                                <p className=\"childRight\">: {karyawan.tempatLahir}</p>\r\n                            <p className=\"childLeft\">Tanggal Lahir</p>\r\n                                <p className=\"childRight\">: {dayjs(karyawan.tanggalLahir).format('DD-MM-YYYY')}</p>\r\n                            <p className=\"childLeft\">Alamat</p>\r\n                                <p className=\"childRight\">: {karyawan.alamat}</p>\r\n                            <p className=\"childLeft\">Agama</p>\r\n                                <p className=\"childRight\">: {karyawan.agama}</p>\r\n                            <p className=\"childLeft\">Pendidikan</p>\r\n                                <p className=\"childRight\">: {karyawan.pendidikan}</p>\r\n                        </div>\r\n                        <Button variant=\"success\" onClick={() => {\r\n                            props.history.push('/ubah password')}\r\n                        }>Change Password</Button>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        counter = true;\r\n    }\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetch()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    return (\r\n        <Row className=\"bg-white py-5 justify-content-center\">\r\n            <Col sm={8} md={6} lg={4}>\r\n                {usersMarkUp}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useMutation} from '@apollo/client';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst changePassword = gql`\r\n    mutation changePassword(\r\n        $passwordLama: String\r\n        $passwordBaru: String\r\n        $passwordConfirm: String\r\n    ){\r\n        changePassword(\r\n            passwordLama: $passwordLama\r\n            passwordBaru: $passwordBaru\r\n            passwordConfirm: $passwordConfirm\r\n        ){\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function UbahPassword(props) {\r\n  let history = useHistory();\r\n    const[variables, setVariables] = useState({\r\n      passwordLama: '',\r\n      passwordBaru: '',\r\n      passwordConfirm: '',\r\n    });\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState('')\r\n\r\n\r\n    /*const [loginUser, {loading}] = useLazyQuery(loginWebsite,{\r\n      onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\r\n      onCompleted(data){\r\n        dispatch({type:'LOGIN', payload: data.loginWebsite})\r\n        props.history.push('/dashboard');\r\n      }\r\n    })*/\r\n    const [changePasswordKu, {loading}] = useMutation(changePassword,{\r\n        onError: (err) => {\r\n          setErrors(err.graphQLErrors[0].extensions.errors)\r\n          console.log(err.graphQLErrors[0].extensions.errors)\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess('Suksess Ganti Password')\r\n        }\r\n    })\r\n    const submitChangePasswordForm = async e =>{\r\n      e.preventDefault();\r\n      changePasswordKu({variables});\r\n    }\r\n\r\n    let pesan;\r\n    if(success){\r\n        pesan = \r\n            <Alert variant='success'>\r\n                {success}\r\n            </Alert>\r\n    }\r\n    return (\r\n      <Container className=\"containerKu\">\r\n        <Row>\r\n            <Col>\r\n                <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"bg-white py-5 justify-content-center\">\r\n            <Col sm={8} md={6} lg={4}>\r\n              <h1 className=\"text-center\">Ubah Password</h1>\r\n              {pesan}\r\n              <Form onSubmit={submitChangePasswordForm}>\r\n                  <Form.Group>\r\n                  <Form.Label className={errors.passwordLama && 'text-danger'}>{errors.passwordLama ?? 'Password Lama'}</Form.Label>\r\n                  <Form.Control \r\n                      type=\"password\" \r\n                      value={variables.passwordLama} \r\n                      onChange={e => \r\n                        setVariables({...variables, passwordLama: e.target.value})\r\n                      }\r\n                  />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Form.Label className={errors.passwordBaru && 'text-danger'}>{errors.passwordBaru ?? 'Password Baru'}</Form.Label>\r\n                  <Form.Control \r\n                      type=\"password\"\r\n                      value={variables.passwordBaru} \r\n                      onChange={e => \r\n                        setVariables({...variables, passwordBaru: e.target.value})\r\n                      }\r\n                  />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                  <Form.Label className={errors.passwordConfirm && 'text-danger'}>{errors.passwordConfirm ?? 'Confirm Password'}</Form.Label>\r\n                  <Form.Control \r\n                      type=\"password\"\r\n                      value={variables.passwordConfirm} \r\n                      onChange={e => \r\n                        setVariables({...variables, passwordConfirm: e.target.value})\r\n                      }\r\n                  />\r\n                  </Form.Group>\r\n                  <div className='text-center'>\r\n                    <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                        {loading? 'loading..':'Login'}\r\n                    </Button>\r\n                  </div>\r\n              </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport DatePicker from 'react-datepicker'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nconst registerPermintaanSuratPerintah = gql`\r\n    mutation registerPermintaanSuratPerintah(\r\n        $idKaryawan: Int \r\n        $dinas: String \r\n        $tanggalMulai: MyDate\r\n        $tanggalAkhir: MyDate\r\n        $keterangan: String \r\n  ) {\r\n    registerPermintaanSuratPerintah(\r\n        idKaryawan: $idKaryawan \r\n        dinas: $dinas\r\n        tanggalMulai: $tanggalMulai\r\n        tanggalAkhir: $tanggalAkhir\r\n        keterangan: $keterangan\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function TambahSuratPerintah(props) {\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [dinas, setDinas] = useState(\"\");\r\n    const [tanggalMulai, setTanggalMulai] = useState(new Date())\r\n    const [tanggalAkhir, setTanggalAkhir] = useState(new Date())\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const [registerKuisionerKu, {loading}] = useMutation(registerPermintaanSuratPerintah,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess Tambah Surat Perintah`,\r\n            })\r\n        }\r\n    })\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        registerKuisionerKu({variables:{\r\n            idKaryawan: parseInt(karyawan),\r\n            dinas: dinas,\r\n            tanggalMulai: tanggalMulai,\r\n            tanggalAkhir: tanggalAkhir,\r\n            keterangan: keterangan\r\n        }\r\n        });\r\n    }\r\n\r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisi\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Surat Perintah Kerja</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-md-7\">\r\n                    <Form onSubmit={register}>\r\n                    <Row className=\"bg-white justify-content-center\">\r\n                        <Col className=\"col-md-2\">\r\n                            <ClipLoader color=\"#000000\" loading={loading} className=\"loadingKu\" size={150} />\r\n                        </Col>\r\n                    </Row>\r\n                        {showError}\r\n                        {showUser}\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisi} \r\n                            onChange={e => \r\n                                setDivisi(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Dinas</Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            name=\"nama\"\r\n                            value= {dinas}\r\n                            onChange={e => \r\n                                setDinas(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Keterangan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            name=\"nama\"\r\n                            value= {keterangan}\r\n                            onChange={e => \r\n                                setKeterangan(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Row className=\"justify-content-center text-center\">\r\n                        <div className=\"col-md-4\">\r\n                            <Form.Label>Tanggal Mulai:</Form.Label>\r\n                            <DatePicker\r\n                                selected={tanggalMulai}\r\n                                onChange={date => setTanggalMulai(date)}\r\n                                dateFormat='dd-MM-yyyy'\r\n                                maxDate={tanggalAkhir}\r\n                                showYearDropdown\r\n                                scrollableMonthYearDropdown\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <Form.Label>Tanggal Akhir:</Form.Label>\r\n                            <DatePicker\r\n                                selected={tanggalAkhir}\r\n                                onChange={date => setTanggalAkhir(date)}\r\n                                dateFormat='dd-MM-yyyy'\r\n                                showYearDropdown\r\n                                scrollableMonthYearDropdown\r\n                            />\r\n                        </div>\r\n                    </Row>\r\n                    <div className='text-center' style={{marginTop: 10}}>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Tambahkan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst registerGudang = gql`\r\n    mutation registerGudang(\r\n        $namaGudang: String \r\n        $alamatGudang: String \r\n  ) {\r\n    registerGudang(\r\n      namaGudang: $namaGudang\r\n      alamatGudang: $alamatGudang\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateStatusGudang = gql`\r\n    mutation updateStatusGudang(\r\n        $status: Boolean\r\n        $id: Int \r\n  ) {\r\n    updateStatusGudang(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateGudang = gql`\r\n    mutation updateGudang(\r\n        $id: Int \r\n        $namaGudang: String\r\n        $alamatGudang: String\r\n    ) {\r\n        updateGudang(\r\n            id: $id\r\n            namaGudang: $namaGudang\r\n            alamatGudang: $alamatGudang\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst getListGudang = gql`\r\nquery getListGudang{\r\n    getListGudang{\r\n    id namaGudang alamatGudang status\r\n  }\r\n}\r\n`;\r\nexport default function Register(props) {\r\n    const [id, setId] = useState(-1);\r\n    const[variables,setVariables] = useState({\r\n        namaGudang:'',\r\n        alamatGudang: '',\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n            \r\n    }\r\n\r\n    const [registerGudangku] = useMutation(registerGudang,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah gudang`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n    const register = () =>{\r\n        registerGudangku({variables:{\r\n            namaGudang: variables.namaGudang,\r\n            alamatGudang: variables.alamatGudang,\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n\r\n    const [updateStatusIndexKu] = useMutation(updateStatusGudang,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const { loading, data, refetch } = useQuery(getListGudang);\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getListGudang.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Daftar Gudang</p>)\r\n    }else if(data.getListGudang.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Gudang</TableCell>\r\n                            <TableCell align=\"center\">Alamat</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getListGudang.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaGudang}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.alamatGudang}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === 1? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            {\r\n                                                laporan.status === 1?\r\n                                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                    Non Aktifkan\r\n                                                </Button>:\r\n                                                <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                    Aktifkan\r\n                                                </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    const editIndex = (laporan) => {\r\n        setId(laporan.id);\r\n        setVariables({\r\n            namaGudang: laporan.namaGudang,\r\n            alamatGudang: laporan.alamatGudang\r\n        })\r\n    }\r\n\r\n    const [updateIndexKu] = useMutation(updateGudang,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setSuccess({\r\n                Sukses: `Suksess Perbarui Gudang`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateIndex = (status) =>{\r\n        if(status === true){\r\n            updateIndexKu({\r\n                variables: {\r\n                    id: id,\r\n                    namaGudang: variables.namaGudang,\r\n                    alamatGudang: variables.alamatGudang,\r\n                }\r\n            })\r\n        }else if(status === false){\r\n            setId(-1);\r\n            setVariables({\r\n                namaGudang: \"\",\r\n                alamatGudang: \"\",\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Gudang</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaGudang && 'text-danger'}>{errors.namaGudang ?? 'Nama Gudang'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {variables.namaGudang}\r\n                                onChange={e => \r\n                                    setVariables({...variables, namaGudang : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.alamatGudang && 'text-danger'}>{errors.alamatGudang ?? 'Alamat Gudang'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.alamatGudang} \r\n                                onChange={e => \r\n                                    setVariables({...variables, alamatGudang: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className='text-center'>\r\n                        {\r\n                            id === -1?\r\n                                <Button variant=\"primary\" onClick={() => register()}>\r\n                                    Tambah Gudang\r\n                                </Button>:\r\n                                <div className=\"buttonsSideBySide\">\r\n                                    <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateIndex(true)}>\r\n                                        Update Gudang\r\n                                    </Button>\r\n                                    <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateIndex(false)}>\r\n                                        Batal\r\n                                    </Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className='text-center'>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-md-10\">\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\n\r\nconst registerMesin = gql`\r\n    mutation registerMesin(\r\n        $id: Int \r\n        $namaMesin: String \r\n  ) {\r\n    registerMesin(\r\n        id: $id \r\n        namaMesin: $namaMesin\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n    id namaDivisi\r\n  }\r\n}\r\n`;\r\nexport default function RegisterMesin(props) {\r\n    const[variables,setVariables] = useState({\r\n        id: 0,\r\n        namaMesin:'',\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n            \r\n    }\r\n    const { loading, data } = useQuery(getListDivisi);\r\n\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListDivisi.length === 0){\r\n        \r\n    }else if(data.getListDivisi.length > 0 && !counter){\r\n        usersMarkUp = data.getListDivisi.map((divisi,index) =>(\r\n            <option key={divisi.id} value={divisi.id}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        ))\r\n        counter = true;\r\n    }\r\n\r\n    const [registerMesinku] = useMutation(registerMesin,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah mesin`,\r\n            })\r\n        }\r\n    })\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        console.log(variables.id)\r\n        registerMesinku({variables:{\r\n            id: variables.id,\r\n            namaMesin: variables.namaMesin,\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Daftar Mesin</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Divisi</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={variables.id}\r\n                                onChange={e => \r\n                                    setVariables({...variables, id: parseInt(e.target.value)})\r\n                            }>\r\n                                {usersMarkUp}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaMesin && 'text-danger'}>{errors.namaMesin ?? 'Nama Mesin'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {variables.namaMesin}\r\n                                onChange={e => \r\n                                    setVariables({...variables, namaMesin : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Tambahkan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\n\r\nconst updatePembagianDivisi = gql`\r\n    mutation updateIndexGaji(\r\n        $id: Int \r\n        $jumlahGroup: Int \r\n    ) {\r\n        updatePembagianDivisi(\r\n            id: $id\r\n            jumlahGroup: $jumlahGroup\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        id namaDivisi jumlahGroup\r\n  }\r\n}\r\n`;\r\nexport default function TambahGroup(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [namaDivisi, setNamaDivisi] = useState(\"\");\r\n    const [jumlah, setJumlah] = useState(0);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const [updatePembagianDivisiKu] = useMutation(updatePembagianDivisi,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setVisible(false)   \r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setVisible(false)\r\n        }\r\n    })\r\n\r\n    const updateIndex = () =>{\r\n        updatePembagianDivisiKu({\r\n            variables: {\r\n                id: parseInt(id),\r\n                jumlahGroup: parseInt(jumlah),\r\n            }\r\n        })\r\n    }\r\n\r\n    const editIndex = (laporan) => {\r\n        setVisible(true)\r\n        setId(laporan.id);\r\n        setNamaDivisi(laporan.namaDivisi);\r\n        setJumlah(laporan.jumlahGroup);\r\n    }\r\n    \r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/penambahan/detail pembagian group',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getListDivisi);\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListDivisi.length === 0){\r\n\r\n    }else if(data.getListDivisi.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Divisi</TableCell>\r\n                            <TableCell align=\"right\">Jumlah Group</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getListDivisi.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaDivisi}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">{laporan.jumlahGroup}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            <Button className=\"buttonSideBySide\" variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                                Detail\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Pembagian Group</h1></Col>\r\n                </Row>\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col className=\"col-md-8\">\r\n                        {dataKu}\r\n                    </Col>\r\n                </Row>\r\n                <Modal show={visible} onHide={() => setVisible(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Pembagian Group {namaDivisi}</Modal.Title>\r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>Jumlah Group</Form.Label>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    name=\"nama\"\r\n                                    value= {jumlah}\r\n                                    onChange={e => \r\n                                        setJumlah(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setVisible(false)}>\r\n                            Tutup\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => updateIndex()}>\r\n                            Perbarui\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getMasterListPembagianAnggota = gql`\r\nquery getMasterListPembagianAnggota(\r\n    $divisi: String \r\n){\r\n    getMasterListPembagianAnggota(\r\n      divisi: $divisi\r\n  ){\r\n    id groupKaryawan ketua karyawan{\r\n      nama\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default function DetailPembagianGroup(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getMasterListPembagianAnggota,{\r\n        variables: {\r\n            divisi: dataLaporan.namaDivisi\r\n        }\r\n    });\r\n\r\n    if(data){\r\n        console.log(data.getMasterListPembagianAnggota);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Pembagian Group {dataLaporan?.namaDivisi}</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                {    \r\n                    [...Array(dataLaporan?.jumlahGroup)].map((x,i) =>\r\n                        <Col className=\"col-md-4\">\r\n                            <h3>Group {i+1}</h3>\r\n                            <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">Nama</TableCell>\r\n                                        <TableCell align=\"center\">Group</TableCell>\r\n                                        <TableCell align=\"center\">Jabatan</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {\r\n                                    data?.getMasterListPembagianAnggota.map((laporan,index) =>(\r\n                                            laporan.groupKaryawan !== (i+1) ? (\r\n                                                null\r\n                                            ):\r\n                                            <TableRow key={index}>\r\n                                                {console.log(laporan)}\r\n                                                <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.karyawan?.nama}</TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.groupKaryawan}</TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                                    {\r\n                                                        laporan.ketua === true?\r\n                                                            <p className=\"badgeStatusAktif\">Ketua</p>:\r\n                                                            <p className=\"badgeStatusWaiting\">Anggota</p>\r\n                                                    }\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                    ))\r\n                                }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Col>\r\n                    )}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst Overview = () => {\r\n  return (\r\n    <div className='home'>\r\n      <h1>Overview</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport * as XLSX from 'xlsx'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\n\r\nconst registerAbsensi = gql`\r\n    mutation registerAbsensi(\r\n        $status: String \r\n        $absensiInput: [absensiInput]\r\n  ) {\r\n    registerAbsensi(\r\n        status: $status\r\n        absensiInput: $absensiInput\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function Register(props) {\r\n    const[variables,setVariables] = useState({\r\n        status: ''\r\n    })\r\n    const [absensi, setAbsensi] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n            \r\n    }\r\n\r\n    const [registerAbsensiKu] = useMutation(registerAbsensi,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah gudang`,\r\n            })\r\n        }\r\n    })\r\n    const readExcel = (file) =>{\r\n        const promise = new Promise((resolve, reject) =>{\r\n            const fileReader = new FileReader()\r\n            fileReader.readAsArrayBuffer(file)\r\n\r\n            fileReader.onload=(e) =>{\r\n                const bufferArray = e.target.result;\r\n                \r\n                const wb = XLSX.read(bufferArray,{type:'buffer'});\r\n                const wsname = wb.SheetNames[0];\r\n\r\n                const ws = wb.Sheets[wsname];\r\n\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n                resolve(data)\r\n            }\r\n\r\n            fileReader.onerror=((error)=>{\r\n                reject(error);\r\n            })\r\n        })\r\n        promise.then((d) => {\r\n            setAbsensi(d);\r\n        })\r\n    }\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        var counterAbsensi=[];\r\n        var absensiKu = {};\r\n        var ctrTgl;\r\n        var tglKu;\r\n        absensi.map(element => {\r\n            absensiKu={};\r\n            absensiKu.id = parseInt(element[\"No. ID\"])\r\n            ctrTgl= element[\"Tanggal\"].toString().split(\"/\")\r\n            tglKu = ctrTgl[1] + \"/\" + ctrTgl[0] + \"/\" + ctrTgl[2];\r\n            absensiKu.tanggal = tglKu\r\n            absensiKu.jamKerja = element[\"Jam Kerja\"]\r\n            absensiKu.scanMasuk = element[\"Scan Masuk\"]\r\n            absensiKu.scanPulang = element[\"Scan Pulang\"]\r\n            absensiKu.terlambat = element[\"Terlambat\"]\r\n            absensiKu.jamBolos = element[\"Plg. Cepat\"]\r\n            absensiKu.absen = !!element[\"Absent\"]\r\n            absensiKu.lembur = element[\"Lembur\"];\r\n            console.log(absensiKu);\r\n            counterAbsensi.push(absensiKu)\r\n        })\r\n        console.log(counterAbsensi)\r\n        registerAbsensiKu({variables:{\r\n            status: variables.status,\r\n            absensiInput: counterAbsensi\r\n        }\r\n        });\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Absensi</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <Col>\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Col xs lg=\"2\" className=\"justify-content-center\">\r\n                            <input type=\"file\" onChange={(e)=>{\r\n                                const file = e.target.files[0];\r\n                                readExcel(file);\r\n                            }} />\r\n                        </Col>\r\n                        <TableContainer component={Paper} key={0}>\r\n                            <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Nama Karyawan</TableCell>\r\n                                        <TableCell align=\"right\">Tanggal</TableCell>\r\n                                        <TableCell align=\"right\">Shift</TableCell>\r\n                                        <TableCell align=\"right\">Jam Masuk</TableCell>\r\n                                        <TableCell align=\"right\">Jam Keluar</TableCell>\r\n                                        <TableCell align=\"right\">Scan Masuk</TableCell>\r\n                                        <TableCell align=\"right\">Scan Pulang</TableCell>\r\n                                        <TableCell align=\"right\">Terlambat</TableCell>\r\n                                        <TableCell align=\"right\">Pulang Cepat</TableCell>\r\n                                        <TableCell align=\"right\">Absen</TableCell>\r\n                                        <TableCell align=\"right\">Lembur</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        absensi.map((laporan,index) =>(\r\n                                            index >= 10 ? null:\r\n                                            <TableRow key={index}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {laporan.Nama}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{dayjs(laporan.tanggal).format('DD-MM-YYYY')}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Jam Kerja\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Jam Masuk\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Jam Pulang\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Scan Masuk\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Scan Pulang\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Terlambat\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan[\"Plg. Cepat\"]}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan.Absent === true? \"Bolos\": \"\"}</TableCell>\r\n                                                <TableCell align=\"right\">{laporan.Lembur}</TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <div className='text-center' style={{marginTop: 10, marginBottom: 10}}>\r\n                            <Button variant=\"success\" type=\"submit\" style={{borderRadius: 5}}>\r\n                                Tambahkan\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\n\r\nconst getAbsensi = gql`\r\n    query getAbsensi(\r\n        $page: Int \r\n        $limit: Int \r\n        $tglAwal: MyDate\r\n        $tglAkhir: MyDate\r\n    ){\r\n        getAbsensi(\r\n            page: $page \r\n            limit: $limit\r\n            tglAwal: $tglAwal\r\n            tglAkhir: $tglAkhir\r\n        ){\r\n            count rows{\r\n                namaKaryawan tanggal scanMasuk scanPulang terlambat jamBolos absen lembur jamKerja{\r\n                    namaShift jamMasuk jamKeluar\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function DaftarAbsensi(props) {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(null);\r\n    const [selectedDateAkhir, setSelectedDateAkhir] = useState(null);\r\n    const [getAbsensiKu, { loading, data }] = useLazyQuery(getAbsensi);\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getAbsensi.count && !counterPage){\r\n      var jml = Math.ceil(data.getAbsensi.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getAbsensi.rows.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Data Absensi</p>)\r\n    }else if(data.getAbsensi.rows.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Tanggal</TableCell>\r\n                            <TableCell align=\"right\">Shift</TableCell>\r\n                            <TableCell align=\"right\">Jam Masuk</TableCell>\r\n                            <TableCell align=\"right\">Jam Keluar</TableCell>\r\n                            <TableCell align=\"right\">Scan Masuk</TableCell>\r\n                            <TableCell align=\"right\">Scan Pulang</TableCell>\r\n                            <TableCell align=\"right\">Terlambat</TableCell>\r\n                            <TableCell align=\"right\">Pulang Cepat</TableCell>\r\n                            <TableCell align=\"right\">Absen</TableCell>\r\n                            <TableCell align=\"right\">Lembur</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getAbsensi.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.namaKaryawan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{dayjs(laporan.tanggal).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.namaShift}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.jamMasuk}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.jamKeluar}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.scanMasuk}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.scanPulang}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.terlambat}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamBolos}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.absen === true? <div className=\"badgeStatusNon\">Bolos</div>: \"\"}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.lembur}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    useEffect(() => {\r\n        getAbsensiKu({\r\n            variables: {\r\n                page: pageNumber,\r\n                limit: limit,\r\n                tglAwal: selectedDateAwal,\r\n                tglAkhir: selectedDateAkhir,\r\n            }\r\n        })\r\n    }, [pageNumber])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Absensi</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-left\">\r\n                <Col className=\"col-md-4\">\r\n                    <p>Tanggal Awal:</p>\r\n                    <DatePicker\r\n                        selected={selectedDateAwal}\r\n                        onChange={date => setSelectedDateAwal(date)}\r\n                        dateFormat='dd-MM-yyyy'\r\n                        maxDate={new Date()}\r\n                        showYearDropdown\r\n                        scrollableMonthYearDropdown\r\n                    />\r\n                    <p>Tanggal Akhir:</p>\r\n                    <DatePicker\r\n                        selected={selectedDateAkhir}\r\n                        onChange={date => setSelectedDateAkhir(date)}\r\n                        dateFormat='dd-MM-yyyy'\r\n                        maxDate={new Date()}\r\n                        showYearDropdown\r\n                        scrollableMonthYearDropdown\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10, marginBottom: 10}}>\r\n                <Col>\r\n                    <Button variant=\"success\" type=\"submit\" onClick={() => getAbsensiKu({\r\n                        variables: {\r\n                            page: 0,\r\n                            limit: limit,\r\n                            tglAwal: selectedDateAwal,\r\n                            tglAkhir: selectedDateAkhir,\r\n                        }\r\n                    })}>\r\n                        Cari\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\n\r\nconst registerJamKerja = gql`\r\n    mutation registerJamKerja(\r\n        $namaShift: String \r\n        $jamMasuk: String \r\n        $jamKeluar: String \r\n  ) {\r\n    registerJamKerja(\r\n        namaShift: $namaShift\r\n        jamMasuk: $jamMasuk \r\n        jamKeluar: $jamKeluar\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function Register(props) {\r\n    const[variables,setVariables] = useState({\r\n        namaShift: '',\r\n        jamMasuk: '',\r\n        jamKeluar: '',\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n            \r\n    }\r\n\r\n    const [registerJamKerjaKu] = useMutation(registerJamKerja,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            console.log(\"suksess\")\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Jam Kerja`,\r\n            })\r\n        }\r\n    })\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        registerJamKerjaKu({variables:{\r\n            namaShift: variables.namaShift,\r\n            jamMasuk: variables.jamMasuk,\r\n            jamKeluar: variables.jamKeluar\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Daftar Jam Kerja</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaShift && 'text-danger'}>{errors.namaShift ?? 'Nama Shift'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"namaShift\"\r\n                                value= {variables.namaShift}\r\n                                onChange={e => \r\n                                    setVariables({...variables, namaShift : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.jamMasuk && 'text-danger'}>{errors.jamMasuk ?? 'Jam Masuk'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"jamMasuk\"\r\n                                value= {variables.jamMasuk}\r\n                                onChange={e => \r\n                                    setVariables({...variables, jamMasuk : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.jamKeluar && 'text-danger'}>{errors.jamKeluar ?? 'Jam Keluar'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"jamKeluar\"\r\n                                value= {variables.jamKeluar}\r\n                                onChange={e => \r\n                                    setVariables({...variables, jamKeluar : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Tambahkan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\n\r\nconst getListDivisi = gql`\r\n  query getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerKuisioner = gql`\r\n    mutation registerKuisioner(\r\n        $divisi: String \r\n        $namaKuisioner: String \r\n        $deskripsiKuisioner: String \r\n        $jenisKuisioner: String\r\n  ) {\r\n    registerKuisioner(\r\n        divisi: $divisi \r\n        namaKuisioner: $namaKuisioner\r\n        deskripsiKuisioner: $deskripsiKuisioner\r\n        jenisKuisioner: $jenisKuisioner\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function TambahKuisioner(props) {\r\n    const [divisi, setDivisi] = useState(\"Semuanya\");\r\n    const [nama, setNama] = useState(\"\")\r\n    const [deskripsi, setDeskripsi] = useState(\"\");\r\n    const [jenis, setJenis] = useState(\"Penilaian\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const { loading, data } = useQuery(getListDivisi);\r\n\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListDivisi.length === 0){\r\n        \r\n    }else if(data.getListDivisi.length > 0 && !counter){\r\n        usersMarkUp = data.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        ))\r\n        counter = true;\r\n    }\r\n\r\n    const [registerKuisionerKu] = useMutation(registerKuisioner,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Kuisioner`,\r\n            })\r\n        }\r\n    })\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        registerKuisionerKu({variables:{\r\n            divisi: divisi,\r\n            namaKuisioner: nama,\r\n            deskripsiKuisioner: deskripsi,\r\n            jenisKuisioner: jenis\r\n        }\r\n        });\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Kuisioner</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Divisi</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={divisi}\r\n                                onChange={e => \r\n                                    setDivisi(e.target.value)\r\n                            }>\r\n                                <option value=\"Semuanya\">Semuanya</option>\r\n                                {usersMarkUp}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaKuisioner && 'text-danger'}>{errors.namaKuisioner ?? 'Nama Kuisioner'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nama}\r\n                                onChange={e => \r\n                                    setNama(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.deskripsiKuisioner && 'text-danger'}>{errors.deskripsiKuisioner ?? 'Deskripsi Kuisioner'}</Form.Label>\r\n                            <Form.Control \r\n                                as=\"textarea\" \r\n                                value={deskripsi} \r\n                                onChange={e => \r\n                                    setDeskripsi(e.target.value)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Jenis Kuisioner</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenis}\r\n                                onChange={e => \r\n                                    setJenis(e.target.value)\r\n                            }>\r\n                                <option value=\"Penilaian\">Penilaian</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Tambahkan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst getKuisioner = gql`\r\n  query getKuisioner{\r\n    getKuisioner{\r\n        id namaKuisioner\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerPertanyaan = gql`\r\n    mutation registerPertanyaan(\r\n        $KuisionerId: Int\r\n        $teskPertanyaan: String\r\n        $jenisPertanyaan: String \r\n        $teskJawaban: String \r\n        $jawabanRadio: [String] \r\n  ) {\r\n    registerPertanyaan(\r\n        KuisionerId: $KuisionerId\r\n        teskPertanyaan: $teskPertanyaan\r\n        jenisPertanyaan: $jenisPertanyaan\r\n        teskJawaban: $teskJawaban\r\n        jawabanRadio: $jawabanRadio\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function TambahPertanyaan(props) {\r\n    const [kuisioner, setKuisioner] = useState(\"\");\r\n    const [pertanyaan, setPertanyaan] = useState(\"\");\r\n    const [jenisPertanyaan, setJenisPertanyaan] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [jawabanRadio, setJawabanRadio] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const { loading, data } = useQuery(getKuisioner);\r\n\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getKuisioner.length === 0){\r\n\r\n    }else if(data.getKuisioner.length > 0 && !counter){\r\n        usersMarkUp = data.getKuisioner.map((kuisioner,index) =>(\r\n            <option key={index} value={parseInt(kuisioner.id)}>\r\n                {console.log(\"Id: \" + kuisioner.id)}\r\n                {kuisioner.namaKuisioner}\r\n            </option>\r\n        ))\r\n        counter = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"kuisioner: \" + kuisioner)\r\n    }, [kuisioner])\r\n\r\n    const [registerPertanyaanKu] = useMutation(registerPertanyaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Pertanyaan`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const tambahPilihan = () =>{\r\n        setJawabanRadio(oldArray => [...oldArray, jawaban]);\r\n    }\r\n\r\n    const hapusRadio = (index) =>{\r\n        setJawabanRadio(prevActions => (\r\n            prevActions.filter((value, i) => i !== index)\r\n        ));\r\n    }\r\n\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        console.log(\"masuk\");\r\n        console.log(kuisioner);\r\n        registerPertanyaanKu({variables:{\r\n            KuisionerId: parseInt(kuisioner),\r\n            teskPertanyaan: pertanyaan,\r\n            jenisPertanyaan: jenisPertanyaan,\r\n            teskJawaban: jawaban,\r\n            jawabanRadio: jawabanRadio,\r\n        }\r\n        });\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Pertanyaan</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label className={errors.KuisionerId && 'text-danger'}>{errors.KuisionerId ?? 'Kuisioner'}</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\"\r\n                                value={kuisioner}\r\n                                onChange={e => \r\n                                    setKuisioner(e.target.value)\r\n                            }>\r\n                                <option value=\"\"></option>\r\n                                {usersMarkUp}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.teskPertanyaan && 'text-danger'}>{errors.teskPertanyaan ?? 'Tesk Pertanyaan'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {pertanyaan}\r\n                                onChange={e => \r\n                                    setPertanyaan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.jenisPertanyaan && 'text-danger'}>{errors.jenisPertanyaan ?? 'Jenis Pertanyaan'}</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenisPertanyaan} \r\n                                onChange={e => \r\n                                    setJenisPertanyaan(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Tesk\">Tesk</option>\r\n                                <option value=\"Pilih Karyawan\">Pilih Karyawan</option>\r\n                                <option value=\"Rating\">Rating</option>\r\n                                <option value=\"Pilih Opsi\">Pilihan Opsi</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                            jenisPertanyaan === \"Pilih Karyawan\"? (\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label className={errors.teskJawaban && 'text-danger'}>{errors.teskJawaban ?? 'Pilih Karyawan'}</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        value={jawaban} \r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Semua Divisi\">Semua Divisi</option>\r\n                                        <option value=\"Atasan\">Atasan</option>\r\n                                        <option value=\"Bawahan\">Bawahan</option>\r\n                                        <option value=\"Diri Sendiri\">Diri Sendiri</option>\r\n                                        <option value=\"Rekan Sekerja\">Rekan Sekerja</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            ):\r\n                            (\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>{jenisPertanyaan === \"Pilih Opsi\"? \"Tesk Opsi\": \"Jawaban\"}</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        value={jawaban}\r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                    }/>\r\n                                </Form.Group>\r\n                            )\r\n                        }\r\n                        {\r\n                            jenisPertanyaan !== \"Pilih Opsi\"? null:\r\n                            (\r\n                                <div style={{marginBottom: 10}}>\r\n                                    <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                        <Button variant=\"info\" onClick={() => tambahPilihan()}>Tambah Pilihan</Button>\r\n                                    </div>\r\n                                    <TableContainer component={Paper} key={0}>\r\n                                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Opsi Pilihan</TableCell>\r\n                                                    <TableCell align=\"right\">Action</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    jawabanRadio.map((laporan,index) =>(\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">{laporan}</TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                                                    <Button variant=\"danger\" onClick={() => hapusRadio(index)}>Hapus Opsi</Button>\r\n                                                                </div>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Tambah Pertanyaan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\n\r\nconst getKuisioner = gql`\r\nquery getKuisioner{\r\n  getKuisioner{\r\n    id namaKuisioner deskripsiKuisioner\r\n  }\r\n}\r\n`;\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n  getListDivisi{\r\n    namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawan= gql`\r\nquery getListKaryawan(\r\n  $divisi: String \r\n){\r\n  getListKaryawan(\r\n    divisi: $divisi\r\n  ){\r\n    id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getTanggapanWeb = gql`\r\nquery getTanggapanWeb(\r\n    $KuisionerId: Int \r\n    $idKaryawan: Int \r\n    $tanggal: MyDate\r\n){\r\n    getTanggapanWeb(\r\n        KuisionerId: $KuisionerId\r\n        idKaryawan: $idKaryawan\r\n        tanggal: $tanggal\r\n    ){\r\n        id teskPertanyaan jenisPertanyaan listTanggapan{\r\n            teskTanggapan\r\n        } listJawaban{\r\n            teskJawaban \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default function DaftarAbsensi(props) {\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(new Date())\r\n    const [kuisioner, setKuisioner] = useState(\"\");\r\n    const [divisi, setDivisi] = useState(\"\")\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [listDivisi, setListDivisi] = React.useState({});\r\n    const [listKaryawan, setListKaryawan] = React.useState({});\r\n    const { \r\n        loading: loadingKuisioner\r\n        , data : dataKuisioner\r\n    } = useQuery(getKuisioner);\r\n    const { \r\n        loading: loadingDivisi\r\n        , data : dataDivisi\r\n    } = useQuery(getListDivisi);\r\n    const [getListKaryawanKu, { \r\n      loading: loadingKaryawan,\r\n      data: dataKaryawan,\r\n    }] = useLazyQuery(getListKaryawan);\r\n    const [getTanggapanWebKu, { \r\n      loading: loadingTanggapan,\r\n      data: dataTanggapan,\r\n    }] = useLazyQuery(getTanggapanWeb);\r\n\r\n    let dataKuisionerKu= [];\r\n    let counter = false;\r\n    if(dataKuisioner === undefined || loadingKuisioner){\r\n\r\n    }else if(dataKuisioner.getKuisioner.length === 0){\r\n\r\n    }else if(dataKuisioner.getKuisioner.length > 0 && !counter){\r\n        \r\n        dataKuisionerKu.push(dataKuisioner.getKuisioner.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.namaKuisioner}</option>\r\n        )))\r\n        counter = true;\r\n    }\r\n\r\n    let dataDivisiKu= [];\r\n    let counterDivisi = false;\r\n    if(dataDivisi === undefined || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n\r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.namaDivisi}</option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    let dataKaryawanKu= [];\r\n    let counterKaryawan = false;\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawan.length > 0 && !counterKaryawan){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawan.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.nama}</option>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    let dataTanggapanKu = [];\r\n    let counterTanggapan = false;\r\n    if(dataTanggapan === undefined || loadingTanggapan){\r\n        if(kuisioner !== \"\"){\r\n            dataTanggapanKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n        }\r\n    }else if(dataTanggapan.getTanggapanWeb.length === 0){\r\n        if(kuisioner !== \"\"){\r\n            dataTanggapanKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Tanggapan Karyawan</p>)\r\n        }\r\n    }else if(dataTanggapan.getTanggapanWeb.length > 0 && !counterTanggapan){\r\n        dataTanggapanKu.push(dataTanggapan.getTanggapanWeb.map((element, index)=>(\r\n            <CCard style={{marginBottom: 5}}>\r\n                <CCardBody>\r\n                    <p>Pertanyaan: {element.teskPertanyaan}</p>\r\n                    <p style={{backgroundColor: 'greenyellow'}}>Jawaban: {element.listTanggapan[0].teskTanggapan}</p>\r\n                </CCardBody>\r\n            </CCard>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(!dataDivisi){\r\n\r\n      }else if(dataDivisi.getListDivisi.length > 0){\r\n        setListDivisi(dataDivisi.getListDivisi);\r\n      }\r\n    }, [dataDivisi])\r\n\r\n    useEffect(() => {\r\n\r\n      if(!dataKaryawan){\r\n\r\n      }else if(dataKaryawan.getListKaryawan.length > 0){\r\n        setListKaryawan(dataKaryawan.getListKaryawan);\r\n      }\r\n    }, [dataKaryawan])  \r\n\r\n\r\n    useEffect(() => {\r\n      if(divisi !== \"\"){\r\n        getListKaryawanKu({variables: {\r\n          divisi: divisi\r\n        }})\r\n      }\r\n    }, [divisi])\r\n\r\n    const cariData = e =>{\r\n        e.preventDefault();\r\n        console.log(kuisioner + \" - \"+ karyawan)\r\n        getTanggapanWebKu({\r\n            variables: {\r\n                KuisionerId: parseInt(kuisioner),\r\n                idKaryawan: parseInt(karyawan),\r\n                tanggal: selectedDateAwal,\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <CCard className=\"col-md-5\">\r\n                    <CCardBody>\r\n                        <h1 className=\"text-center\">Form Data Tanggapan</h1>\r\n                        <Form onSubmit={cariData}>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Kuisioner</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={kuisioner}\r\n                                    onChange={e => \r\n                                        setKuisioner(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataKuisionerKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Bulan</Form.Label>\r\n                            <DatePicker\r\n                                selected={selectedDateAwal}\r\n                                onChange={date => setSelectedDateAwal(date)}\r\n                                dateFormat='MM-yyyy'\r\n                                maxDate={new Date()}\r\n                                showMonthYearPicker\r\n                            />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Divisi</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={divisi}\r\n                                    onChange={e => \r\n                                        setDivisi(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataDivisiKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Karyawan</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={karyawan}\r\n                                    onChange={e => \r\n                                        setKaryawan(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataKaryawanKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"text-center\">\r\n                                <Button variant=\"success\" type=\"submit\" >\r\n                                    Cari\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </Row>\r\n            <Row className=\"justify-content-center\" style={{marginTop: 10}}>\r\n                <Col className=\"col-md-8\">\r\n                    <h2 className=\"text-center\">Data Tanggapan</h2>\r\n                    {dataTanggapanKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery, useMutation} from '@apollo/client';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst getKuisioner = gql`\r\nquery getKuisioner{\r\n  getKuisioner{\r\n    id namaKuisioner deskripsiKuisioner jenisKuisioner divisi status\r\n  }\r\n}\r\n`;\r\n\r\nconst updateStatusKuisioner = gql`\r\n    mutation updateStatusKuisioner(\r\n        $id: Int \r\n        $status: Boolean\r\n  ) {\r\n    updateStatusKuisioner(\r\n        id: $id\r\n        status: $status\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MasterKuisioner(props) {\r\n    let history = useHistory();\r\n    const { loading, data, refetch } = useQuery(getKuisioner);\r\n\r\n    const goToDetail = (laporan) =>{\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/kuisioner/detail kuisionerku',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const goToDistribusi = (laporan) =>{\r\n        history.push({\r\n            pathname: '/kuisioner/detail distribusi',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const [updateStatusKuisionerKu] = useMutation(updateStatusKuisioner,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusKuisionerKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getKuisioner.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Kuisioner Tersedia</p>)\r\n    }else if(data.getKuisioner.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Divisi</TableCell>\r\n                            <TableCell align=\"center\">Deskripsi Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action 1</TableCell>\r\n                            <TableCell align=\"center\">Action 2</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getKuisioner.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.namaKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.divisi}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.deskripsiKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jenisKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === true? \r\n                                        <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                        <div className=\"badgeStatusNon\">Non-Aktif</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                                Detail\r\n                                            </Button>\r\n                                            <Button className=\"buttonSideBySide\" variant=\"info\" onClick={() => goToDistribusi(laporan)}>\r\n                                                Distribusi\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {\r\n                                            laporan.status === true?\r\n                                            <Button variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                Non Aktifkan\r\n                                            </Button>:\r\n                                            <Button variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                Aktifkan\r\n                                            </Button>\r\n                                        }\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Kuisioner</h1>\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nconst getListDivisi = gql`\r\n  query getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nconst getPertanyaan = gql`\r\nquery getPertanyaan(\r\n  $KuisionerId: Int \r\n){\r\n  getPertanyaan(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id ListKuisionerId teskPertanyaan jenisPertanyaan status listJawaban{\r\n      id teskJawaban\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst updateKuisioner = gql`\r\n    mutation updateKuisioner(\r\n        $id: Int \r\n        $divisi: String \r\n        $namaKuisioner: String \r\n        $deskripsiKuisioner: String \r\n        $jenisKuisioner: String\r\n  ) {\r\n    updateKuisioner(\r\n        id: $id\r\n        divisi: $divisi \r\n        namaKuisioner: $namaKuisioner\r\n        deskripsiKuisioner: $deskripsiKuisioner\r\n        jenisKuisioner: $jenisKuisioner\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateStatusPertanyaan = gql`\r\n    mutation updateStatusPertanyaan(\r\n        $id: Int \r\n        $status: Boolean\r\n  ) {\r\n    updateStatusPertanyaan(\r\n        id: $id\r\n        status: $status\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerPertanyaan = gql`\r\n    mutation registerPertanyaan(\r\n        $KuisionerId: Int\r\n        $teskPertanyaan: String\r\n        $jenisPertanyaan: String \r\n        $teskJawaban: String \r\n        $jawabanRadio: [String] \r\n  ) {\r\n    registerPertanyaan(\r\n        KuisionerId: $KuisionerId\r\n        teskPertanyaan: $teskPertanyaan\r\n        jenisPertanyaan: $jenisPertanyaan\r\n        teskJawaban: $teskJawaban\r\n        jawabanRadio: $jawabanRadio\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailKuisioner(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [id, setId] = useState(0);\r\n    const [divisi, setDivisi] = useState(\"Semuanya\");\r\n    const [nama, setNama] = useState(\"\")\r\n    const [deskripsi, setDeskripsi] = useState(\"\");\r\n    const [jenis, setJenis] = useState(\"Penilaian\");\r\n    const [visible, setVisible] = useState(false);\r\n    const [pertanyaan, setPertanyaan] = useState(\"\");\r\n    const [jenisPertanyaan, setJenisPertanyaan] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [jawabanRadio, setJawabanRadio] = useState([]);\r\n    const {\r\n        loading: loadingPertanyaan,\r\n        data: dataPertanyaan,\r\n        refetch\r\n    } = useQuery(getPertanyaan,{\r\n        variables: {\r\n            KuisionerId: id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setId(location.state?.laporan.id)\r\n        setDivisi(location.state?.laporan.divisi)\r\n        setNama(location.state?.laporan.namaKuisioner)\r\n        setDeskripsi(location.state?.laporan.deskripsiKuisioner)\r\n        setJenis(location.state?.laporan.jenisKuisioner)\r\n    }, [location]);\r\n\r\n    const { loading, data } = useQuery(getListDivisi);\r\n\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListDivisi.length === 0){\r\n        \r\n    }else if(data.getListDivisi.length > 0 && !counter){\r\n        dataKu.push(data.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counter = true;\r\n    }\r\n\r\n    const goToDetail = (laporan) =>{\r\n        history.push({\r\n            pathname: '/kuisioner/detail pertanyaan',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const [updateStatusPertanyaanKu] = useMutation(updateStatusPertanyaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            counterPertanyaan = false;\r\n            console.log(\"suksess\")\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusPertanyaanKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    let dataPertanyaanKu = []\r\n    let counterPertanyaan = false;\r\n    if(!dataPertanyaan || loadingPertanyaan){\r\n        dataPertanyaanKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length === 0){\r\n        dataPertanyaanKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Pertanyaan</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length > 0 && !counterPertanyaan){\r\n        dataPertanyaanKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Tesk Pertanyaan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Pertanyaan</TableCell>\r\n                            <TableCell align=\"center\">Jawaban</TableCell>\r\n                            <TableCell align=\"center\">status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPertanyaan.getPertanyaan.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan)}\r\n                                    <TableCell>{laporan.teskPertanyaan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jenisPertanyaan}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                    {\r\n                                        laporan.jenisPertanyaan === \"Pilih Opsi\"?\r\n                                        <>\r\n                                            <ul>\r\n                                            {\r\n                                                laporan.listJawaban.map((jawaban, index1)=>(\r\n                                                    <li>{jawaban.teskJawaban}</li>\r\n                                                ))\r\n                                            }\r\n                                            </ul>\r\n                                        </>\r\n                                        :\r\n                                        laporan.listJawaban[0]?.teskJawaban\r\n                                    }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {\r\n                                            laporan.status === true?\r\n                                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                Non Aktifkan\r\n                                            </Button>:\r\n                                            <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                Aktifkan\r\n                                            </Button>\r\n                                        }\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterPertanyaan = true;\r\n    }\r\n\r\n    const [updateKuisionerKu] = useMutation(updateKuisioner,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/kuisioner/master kuisioner'\r\n            });\r\n        }\r\n    })\r\n\r\n    const updateKuisionerFunction = e =>{\r\n        e.preventDefault();\r\n        updateKuisionerKu({\r\n            variables: {\r\n                id: id,\r\n                divisi: divisi,\r\n                namaKuisioner: nama,\r\n                deskripsiKuisioner: deskripsi,\r\n                jenisKuisioner: jenis\r\n            }\r\n        })\r\n    }\r\n\r\n    const TambahPertanyaan = e =>{\r\n        e.preventDefault();\r\n        history.push({\r\n            pathname: '/kuisioner/tambah pertanyaan baru',\r\n            state: { id: location.state.laporan.id }\r\n        });\r\n    }\r\n\r\n    const [registerPertanyaanKu] = useMutation(registerPertanyaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            alert(err)\r\n        },\r\n        onCompleted(data){\r\n            setVisible(false)\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updatePertanyaanFunction = e =>{\r\n        e.preventDefault();\r\n        registerPertanyaanKu({variables:{\r\n            KuisionerId: parseInt(id),\r\n            teskPertanyaan: pertanyaan,\r\n            jenisPertanyaan: jenisPertanyaan,\r\n            teskJawaban: jawaban,\r\n            jawabanRadio: jawabanRadio,\r\n        }\r\n        });\r\n    }\r\n\r\n    const tambahPilihan = () =>{\r\n        setJawabanRadio(oldArray => [...oldArray, jawaban]);\r\n    }\r\n\r\n    const hapusRadio = (index) =>{\r\n        setJawabanRadio(prevActions => (\r\n            prevActions.filter((value, i) => i !== index)\r\n        ));\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                dataPertanyaanKu = [];\r\n                refetch()\r\n            }\r\n        }\r\n    }, [])    \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <h1 className=\"text-center\">Detail Kuisioner</h1>\r\n                    <Form onSubmit={updateKuisionerFunction} style={{marginTop: 10}}>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Divisi</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={divisi}\r\n                                onChange={e => \r\n                                    setDivisi(e.target.value)\r\n                            }>\r\n                                <option value=\"Semuanya\">Semuanya</option>\r\n                                {dataKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Nama Kuisioner</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nama}\r\n                                onChange={e => \r\n                                    setNama(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Deskripsi Kuisioner</Form.Label>\r\n                            <Form.Control \r\n                                as=\"textarea\" \r\n                                value={deskripsi} \r\n                                onChange={e => \r\n                                    setDeskripsi(e.target.value)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Jenis Kuisioner</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenis}\r\n                                onChange={e => \r\n                                    setJenis(e.target.value)\r\n                            }>\r\n                                <option value=\"Penilaian\">Penilaian</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Perbarui\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h2 className=\"text-center\">Detail Pertanyaan</h2>\r\n                    {dataPertanyaanKu}\r\n                    <div className='text-center' style={{marginTop: 10}}>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={() => setVisible(true)}>\r\n                            Tambah Pertanyaan\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <CModal fullscreen=\"md\" visible={visible} onClose={() => setVisible(false)}>\r\n                <CModalHeader>\r\n                    <CModalTitle>Tambah Pertanyaan Baru</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody className=\"justify-content-center\">\r\n                    <Form onSubmit={updatePertanyaanFunction}>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Tesk Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {pertanyaan}\r\n                                onChange={e => \r\n                                    setPertanyaan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Jenis Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenisPertanyaan} \r\n                                onChange={e => \r\n                                    setJenisPertanyaan(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Tesk\">Tesk</option>\r\n                                <option value=\"Pilih Karyawan\">Pilih Karyawan</option>\r\n                                <option value=\"Rating\">Rating</option>\r\n                                <option value=\"Pilih Opsi\">Pilihan Opsi</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                            jenisPertanyaan === \"Pilih Karyawan\"? (\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Pilih Karyawan</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        value={jawaban} \r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Semua Divisi\">Semua Divisi</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            ):\r\n                            (\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>{jenisPertanyaan === \"Pilih Opsi\"? \"Tesk Opsi\": \"Jawaban\"}</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        value={jawaban}\r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                    }/>\r\n                                </Form.Group>\r\n                            )\r\n                        }\r\n                        {\r\n                            jenisPertanyaan !== \"Pilih Opsi\"? null:\r\n                            (\r\n                                <div style={{marginBottom: 10}}>\r\n                                    <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                        <Button variant=\"info\" onClick={() => tambahPilihan()}>Tambah Pilihan</Button>\r\n                                    </div>\r\n                                    <TableContainer component={Paper} key={0}>\r\n                                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Opsi Pilihan</TableCell>\r\n                                                    <TableCell align=\"right\">Action</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    jawabanRadio.map((radio,index) =>(\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">{radio}</TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                                                    <Button variant=\"danger\" onClick={() => hapusRadio(radio.id)}>Hapus Opsi</Button>\r\n                                                                </div>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    <div className='text-center'>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Tambah Pertanyaan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </CModalBody>\r\n            </CModal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst getListDivisi = gql`\r\n  query getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nconst getPertanyaan = gql`\r\nquery getPertanyaan(\r\n  $KuisionerId: Int \r\n){\r\n  getPertanyaan(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id teskPertanyaan jenisPertanyaan listJawaban{\r\n      id teskJawaban\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst updatePertanyaan = gql`\r\n    mutation updatePertanyaan(\r\n        $idJawaban: Int \r\n        $teskJawaban: String \r\n        $jawabanRadio: [String] \r\n  ) {\r\n    updatePertanyaan(\r\n        idJawaban: $idJawaban\r\n        teskJawaban: $teskJawaban\r\n        jawabanRadio: $jawabanRadio\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailPertanyaan(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [id, setId] = useState(0);\r\n    const [idJawaban, setIdJawaban] = useState(0);\r\n    const [pertanyaan, setPertanyaan] = useState(\"\");\r\n    const [jenisPertanyaan, setJenisPertanyaan] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [jawabanRadio, setJawabanRadio] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setId(location.state.laporan.id)\r\n        setIdJawaban(location.state.laporan.listJawaban[0].id)\r\n        setPertanyaan(location.state.laporan.teskPertanyaan)\r\n        setJenisPertanyaan(location.state.laporan.jenisPertanyaan)\r\n        setJawaban(location.state.laporan.listJawaban[0].teskJawaban)\r\n        if(location.state.laporan.jenisPertanyaan === \"Pilih Opsi\"){\r\n            setJawabanRadio(location.state.laporan.listJawaban)\r\n        }\r\n    }, [location]);\r\n\r\n    const [updatePertanyaanKu] = useMutation(updatePertanyaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/kuisioner/master kuisioner'\r\n            });\r\n        }\r\n    })\r\n\r\n    const updatePertanyaanFunction = e =>{\r\n        e.preventDefault();\r\n        updatePertanyaanKu({\r\n            variables: {\r\n                id: parseInt(id),\r\n                idJawaban: parseInt(idJawaban),\r\n                teskJawaban: jawaban,\r\n                jawabanRadio: jawabanRadio,\r\n            }\r\n        })\r\n    }\r\n\r\n    const tambahPilihan = () =>{\r\n        setJawabanRadio(oldArray => [...oldArray, jawaban]);\r\n    }\r\n\r\n    const hapusRadio = (index) =>{\r\n        setJawabanRadio(prevActions => (\r\n            prevActions.filter((value, i) => i !== index)\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Detail Kuisioner</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col>\r\n                    <Form onSubmit={updatePertanyaanFunction}>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Tesk Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {pertanyaan}\r\n                                onChange={e => \r\n                                    setPertanyaan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Jenis Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenisPertanyaan} \r\n                                onChange={e => \r\n                                    setJenisPertanyaan(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Tesk\">Tesk</option>\r\n                                <option value=\"Pilih Karyawan\">Pilih Karyawan</option>\r\n                                <option value=\"Rating\">Rating</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                            jenisPertanyaan === \"Pilih Karyawan\"? (\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Pilih Karyawan</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        value={jawaban} \r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Semua Divisi\">Semua Divisi</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            ):\r\n                            (\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>{jenisPertanyaan === \"Pilih Opsi\"? \"Tesk Opsi\": \"Jawaban\"}</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        value={jawaban}\r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                    }/>\r\n                                </Form.Group>\r\n                            )\r\n                        }\r\n                        {\r\n                            jenisPertanyaan !== \"Pilih Opsi\"? null:\r\n                            (\r\n                                <div style={{marginBottom: 10}}>\r\n                                    <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                        <Button variant=\"info\" onClick={() => tambahPilihan()}>Tambah Pilihan</Button>\r\n                                    </div>\r\n                                    <TableContainer component={Paper} key={0}>\r\n                                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Opsi Pilihan</TableCell>\r\n                                                    <TableCell align=\"right\">Action</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    jawabanRadio.map((radio,index) =>(\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">{radio.teskJawaban}</TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                                                    <Button variant=\"danger\" onClick={() => hapusRadio(radio.id)}>Hapus Opsi</Button>\r\n                                                                </div>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Update Jawaban\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\nconst registerPertanyaan = gql`\r\n    mutation registerPertanyaan(\r\n        $KuisionerId: Int\r\n        $teskPertanyaan: String\r\n        $jenisPertanyaan: String \r\n        $teskJawaban: String \r\n        $jawabanRadio: [String] \r\n  ) {\r\n    registerPertanyaan(\r\n        KuisionerId: $KuisionerId\r\n        teskPertanyaan: $teskPertanyaan\r\n        jenisPertanyaan: $jenisPertanyaan\r\n        teskJawaban: $teskJawaban\r\n        jawabanRadio: $jawabanRadio\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function TambahPertanyaanBaru(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [id, setId] = useState(0);\r\n    const [pertanyaan, setPertanyaan] = useState(\"\");\r\n    const [jenisPertanyaan, setJenisPertanyaan] = useState(\"\");\r\n    const [jawaban, setJawaban] = useState(\"\");\r\n    const [jawabanRadio, setJawabanRadio] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setId(location.state?.id)\r\n    }, [location]);\r\n\r\n    const [registerPertanyaanKu] = useMutation(registerPertanyaan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/kuisioner/master kuisioner'\r\n            });\r\n        }\r\n    })\r\n\r\n    const updatePertanyaanFunction = e =>{\r\n        e.preventDefault();\r\n        registerPertanyaanKu({variables:{\r\n            KuisionerId: parseInt(id),\r\n            teskPertanyaan: pertanyaan,\r\n            jenisPertanyaan: jenisPertanyaan,\r\n            teskJawaban: jawaban,\r\n            jawabanRadio: jawabanRadio,\r\n        }\r\n        });\r\n    }\r\n\r\n    const tambahPilihan = () =>{\r\n        setJawabanRadio(oldArray => [...oldArray, jawaban]);\r\n    }\r\n\r\n    const hapusRadio = (index) =>{\r\n        setJawabanRadio(prevActions => (\r\n            prevActions.filter((value, i) => i !== index)\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Pertanyaan Baru</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form onSubmit={updatePertanyaanFunction}>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Tesk Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {pertanyaan}\r\n                                onChange={e => \r\n                                    setPertanyaan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Jenis Pertanyaan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenisPertanyaan} \r\n                                onChange={e => \r\n                                    setJenisPertanyaan(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Tesk\">Tesk</option>\r\n                                <option value=\"Pilih Karyawan\">Pilih Karyawan</option>\r\n                                <option value=\"Rating\">Rating</option>\r\n                                <option value=\"Pilih Opsi\">Pilihan Opsi</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                            jenisPertanyaan === \"Pilih Karyawan\"? (\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Pilih Karyawan</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        value={jawaban} \r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"Semua Divisi\">Semua Divisi</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            ):\r\n                            (\r\n                                <Form.Group as={Col}>\r\n                                <Form.Label>{jenisPertanyaan === \"Pilih Opsi\"? \"Tesk Opsi\": \"Jawaban\"}</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        value={jawaban}\r\n                                        onChange={e => \r\n                                            setJawaban(e.target.value)\r\n                                    }/>\r\n                                </Form.Group>\r\n                            )\r\n                        }\r\n                        {\r\n                            jenisPertanyaan !== \"Pilih Opsi\"? null:\r\n                            (\r\n                                <div style={{marginBottom: 10}}>\r\n                                    <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                        <Button variant=\"info\" onClick={() => tambahPilihan()}>Tambah Pilihan</Button>\r\n                                    </div>\r\n                                    <TableContainer component={Paper} key={0}>\r\n                                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Opsi Pilihan</TableCell>\r\n                                                    <TableCell align=\"right\">Action</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    jawabanRadio.map((radio,index) =>(\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">{radio.teskJawaban}</TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <div style={{marginBottom: 10, marginLeft: 15}}>\r\n                                                                    <Button variant=\"danger\" onClick={() => hapusRadio(radio.id)}>Hapus Opsi</Button>\r\n                                                                </div>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Tambah Pertanyaan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nconst getListJabatan = gql`\r\n  query getListJabatan{\r\n    getListJabatan{\r\n        tingkatJabatan jabatanKu\r\n    }\r\n  }\r\n`;\r\n\r\nconst getDistribusi = gql`\r\nquery getDistribusi(\r\n  $KuisionerId: Int \r\n){\r\n  getDistribusi(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id namaJabatan TingkatJabatan persentaseNilai status\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst updateStatusDistribusi = gql`\r\n    mutation updateStatusDistribusi(\r\n        $id: Int \r\n        $status: Boolean\r\n  ) {\r\n    updateStatusDistribusi(\r\n        id: $id\r\n        status: $status\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerDistribusi = gql`\r\n    mutation registerDistribusi(\r\n        $ListKuisionerId: Int \r\n        $TingkatJabatan: Int \r\n        $persentaseNilai: Int \r\n  ) {\r\n    registerDistribusi(\r\n        ListKuisionerId: $ListKuisionerId\r\n        TingkatJabatan: $TingkatJabatan\r\n        persentaseNilai: $persentaseNilai\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailDistribusi(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [jabatan, setJabatan] = useState(\"\");\r\n    const [nilai, setNilai] = useState(0);\r\n    const {\r\n        loading: loadingPertanyaan,\r\n        data: dataPertanyaan,\r\n        refetch\r\n    } = useQuery(getDistribusi,{\r\n        variables: {\r\n            KuisionerId: location.state?.laporan.id\r\n        }\r\n    });\r\n\r\n    const { loading, data } = useQuery(getListJabatan);\r\n\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListJabatan.length === 0){\r\n        \r\n    }else if(data.getListJabatan.length > 0 && !counter){\r\n        console.log(data.getListJabatan)\r\n        dataKu.push(data.getListJabatan.map((jabatan,index) =>(\r\n            <option key={index} value={jabatan.tingkatJabatan}>\r\n                {jabatan.jabatanKu}\r\n            </option>\r\n        )))\r\n        counter = true;\r\n    }\r\n\r\n    const [updateStatusDistribusiKu] = useMutation(updateStatusDistribusi,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            counterDistribusi = false;\r\n            console.log(\"suksess\")\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusDistribusiKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    let dataDistribusiKu = []\r\n    let counterDistribusi = false;\r\n    if(!dataPertanyaan || loadingPertanyaan){\r\n        dataDistribusiKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(dataPertanyaan.getDistribusi.length === 0){\r\n        dataDistribusiKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Distribusi</p>)\r\n    }else if(dataPertanyaan.getDistribusi.length > 0){\r\n        console.log(\"masuk\")\r\n        dataDistribusiKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Jabatan</TableCell>\r\n                            <TableCell>Persentase Nilai</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPertanyaan.getDistribusi.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan)}\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.namaJabatan}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.persentaseNilai}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.status === true? \"Aktif\": \"Non-Aktif\"}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\r\n                                            laporan.status === true?\r\n                                            <Button variant=\"primary\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                Non Aktifkan\r\n                                            </Button>:\r\n                                            <Button variant=\"primary\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                Aktifkan\r\n                                            </Button>\r\n                                        }\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    const [registerDistribusiKu] = useMutation(registerDistribusi,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            alert(\"Suksess Tambah Distribusi\")\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const tambahDistribusiFunction = e =>{\r\n        e.preventDefault();\r\n        console.log(jabatan)\r\n        registerDistribusiKu({\r\n            variables: {\r\n                ListKuisionerId: location.state?.laporan.id,\r\n                TingkatJabatan: parseInt(jabatan),\r\n                persentaseNilai: parseInt(nilai),\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetch()\r\n            }\r\n        }\r\n    }, [])    \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Distribusi Kuisioner {location.state?.laporan.namaKuisioner}</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form onSubmit={tambahDistribusiFunction} style={{marginTop: 10}}>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Jabatan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\"\r\n                                value={jabatan}\r\n                                onChange={e => \r\n                                    setJabatan(e.target.value)\r\n                            }>\r\n                                <option value=\"\"></option>\r\n                                {dataKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Persentase Nilai</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nilai}\r\n                                onChange={e => \r\n                                    setNilai(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Tambahkan\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataDistribusiKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport { Slider } from '@material-ui/core';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\nconst getKuisionerMobile = gql`\r\nquery getKuisionerMobile{\r\n  getKuisionerMobile{\r\n    id namaKuisioner deskripsiKuisioner\r\n  }\r\n}\r\n`;\r\n\r\nconst getPertanyaan = gql`\r\nquery getPertanyaan(\r\n  $KuisionerId: Int \r\n){\r\n  getPertanyaan(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id teskPertanyaan jenisPertanyaan listJawaban{\r\n      id teskJawaban\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n  getListDivisi{\r\n    namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanKuisioner= gql`\r\nquery getListKaryawanKuisioner(\r\n  $divisi: String \r\n  $status: String \r\n){\r\n  getListKaryawanKuisioner(\r\n    divisi: $divisi\r\n    status: $status\r\n  ){\r\n    id nama jabatan{\r\n        namaJabatan tingkatJabatan\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst tambahTanggapanKuisioner = gql`\r\n    mutation tambahTanggapanKuisioner(\r\n      $KuisionerId: Int\r\n      $answerText: [AnswerInput]\r\n      $answerRadio: [AnswerIntInput]\r\n      $answerPilihan: [AnswerIntInput]\r\n      $answerOpsi: [AnswerInput]\r\n    ){\r\n      tambahTanggapanKuisioner(\r\n        KuisionerId: $KuisionerId\r\n        answerText: $answerText\r\n        answerRadio: $answerRadio\r\n        answerPilihan: $answerPilihan\r\n        answerOpsi: $answerOpsi\r\n        ){\r\n            id\r\n        }\r\n    }\r\n`;\r\nexport default function IsiKuisioner(props) {\r\n    const [kuisioner, setKuisioner] = useState(0);\r\n    const [answerText, setAnswerText] = useState([]);\r\n    const [answerRadio, setAnswerRadio] = useState([]);\r\n    const [answerPilihan, setAnswerPilihan] = useState([]);\r\n    const [answerOpsi, setAnswerOpsi] = useState([]);\r\n    const [listDivisi, setListDivisi] = useState({});\r\n    const [listKaryawan, setListKaryawan] = useState({});\r\n    const [listRadio, setListRadio] = useState({});\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [karyawan, setKaryawan] = useState(0);\r\n    const [value, setValue] = useState(\"1\");\r\n    const [jenisKaryawan, setJenisKaryawan] = useState(\"\");\r\n    const { \r\n        loading: loadingKuisioner, \r\n        data: dataKuisioner, \r\n        refetch: refetchKuisioner\r\n    } = useQuery(getKuisionerMobile);\r\n    const { \r\n        loading: loadingDivisi, \r\n        data: dataDivisi, \r\n        refetch: refetchDivisi\r\n    } = useQuery(getListDivisi);\r\n    const { \r\n        loading: loadingPertanyaan,\r\n        data: dataPertanyaan,\r\n        refetch: refetchPertanyaan\r\n    } = useQuery(getPertanyaan,{\r\n        variables: {\r\n        KuisionerId: parseInt(kuisioner)\r\n        }\r\n    });\r\n    const { \r\n        loading: loadingKaryawan,\r\n        data: dataKaryawan,\r\n        refetch: refetchKaryawan,\r\n    } = useQuery(getListKaryawanKuisioner,{\r\n        variables:{\r\n        divisi: divisi,\r\n        status: jenisKaryawan\r\n        }\r\n    });\r\n\r\n    const pushText = (text, id) => {\r\n        setAnswerText(answerText.map((item) => \r\n            item.id === id? \r\n            {...item, \r\n            text: text, }: \r\n            item))\r\n        console.log(text + \" - \" + id)\r\n    }\r\n    \r\n    const pushRating = (text, id) => {\r\n        console.log(answerRadio)\r\n        setAnswerRadio(answerRadio.map((item) => \r\n            item.id === id? \r\n            {...item, \r\n            text: text, }: \r\n            item))\r\n        console.log(text + \" - \"+ id)\r\n    }\r\n\r\n    const pushPilihan = (text, id) =>{\r\n        setAnswerPilihan(answerPilihan.map((item) => \r\n            item.id === id? \r\n            {...item, \r\n            text: parseInt(text), }: \r\n            item))\r\n        console.log(text+ \" - \" + id);\r\n    }\r\n\r\n    const pushOpsi = (text, id) =>{\r\n        setAnswerOpsi(answerOpsi.map((item) => \r\n            item.id === id? \r\n            {...item, \r\n            text: text, }: \r\n            item))\r\n        console.log(text+ \" - \" + id);\r\n    }\r\n\r\n    let dataKuisionerKu = [];\r\n    let dataPertanyaanKu = [];\r\n    if(!dataKuisioner || loadingKuisioner){\r\n\r\n    }else if(dataKuisioner.getKuisionerMobile.length === 0){\r\n\r\n    }else if(dataKuisioner.getKuisionerMobile.length > 0){\r\n        dataKuisionerKu.push(dataKuisioner.getKuisionerMobile.map((laporan,index) =>(\r\n            <option value={laporan.id} key={index}>{laporan.namaKuisioner}</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!dataPertanyaan || loadingPertanyaan){\r\n\r\n        }else if(dataPertanyaan.getPertanyaan.length > 0){\r\n        dataPertanyaan.getPertanyaan.map((laporan,index) =>{\r\n            if(laporan.jenisPertanyaan === \"Pilih Karyawan\"){\r\n                setJenisKaryawan(laporan.listJawaban[0].teskJawaban)\r\n            }\r\n        })\r\n        }\r\n    }, [dataPertanyaan])\r\n\r\n    if(!dataPertanyaan || loadingPertanyaan){\r\n        dataPertanyaanKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length === 0){\r\n        dataPertanyaanKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Pertanyaan</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length > 0){\r\n        dataPertanyaanKu.push(dataPertanyaan.getPertanyaan.map((laporan,index) =>(\r\n            <CCard style={{marginBottom: 5}}>\r\n                <CCardBody>\r\n                    {laporan.jenisPertanyaan === \"Tesk\"? \r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>{laporan.teskPertanyaan}</Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            name=\"nama\"\r\n                            onChange={e => \r\n                                pushText(e.target.value, laporan.id)}\r\n                        />\r\n                    </Form.Group>:\r\n                    laporan.jenisPertanyaan === \"Rating\"?\r\n                        <div>\r\n                            <Form.Label>{laporan.teskPertanyaan}</Form.Label>\r\n                            <Slider\r\n                                defaultValue={1}\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={laporan.listJawaban[0].teskJawaban}\r\n                                onChange={(event, value) => pushRating(value,laporan.id)}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        laporan.jenisPertanyaan === \"Pilih Karyawan\"? \r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>{laporan.teskPertanyaan}</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    onChange={e => \r\n                                        pushPilihan(e.target.value, laporan.id)\r\n                                    }\r\n                                >\r\n                                    <option value=\"\">Pilih Karyawan</option>\r\n                                    {\r\n                                        listKaryawan.length === undefined ? null:\r\n                                        listKaryawan.map((element,index1) => (\r\n                                            <option value={element.id} key={index1}>{element.nama} (Ketua {element.jabatan.namaJabatan})</option>\r\n                                        ))\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>:\r\n                            laporan.jenisPertanyaan === \"Pilih Opsi\"?<Form.Group as={Col}>\r\n                                <Form.Label>{laporan.teskPertanyaan}</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        onChange={e => \r\n                                            pushOpsi(e.target.value, laporan.id)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\">Pilih Opsi</option>\r\n                                        {laporan.listJawaban.map((jawaban, index1) => (\r\n                                            <option value={jawaban.teskJawaban} key={index1}>{jawaban.teskJawaban}</option>\r\n                                        ))}\r\n                            </Form.Control>\r\n                        </Form.Group> \r\n                        :null}\r\n                    </CCardBody>\r\n                </CCard>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setListKaryawan({});\r\n        console.log(\"masuk ko\")\r\n        refetchPertanyaan()\r\n    }, [kuisioner])\r\n\r\n    useEffect(() => {\r\n    if(!dataDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length > 0){\r\n        setListDivisi(dataDivisi.getListDivisi);\r\n    }\r\n    }, [dataDivisi])\r\n    \r\n    useEffect(() => {\r\n    if(jenisKaryawan !== \"\"){\r\n        refetchKaryawan()\r\n    }\r\n    }, [jenisKaryawan])\r\n\r\n    useEffect(() => {\r\n    if(divisi !== \"\"){\r\n        refetchKaryawan()\r\n    }\r\n    }, [divisi])\r\n\r\n    useEffect(() => {\r\n    console.log(\"berubah\")\r\n    if(!dataKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanKuisioner.length > 0){\r\n        console.log(\"masuk1\")\r\n        console.log(dataKaryawan.getListKaryawanKuisioner)\r\n        setListKaryawan(dataKaryawan.getListKaryawanKuisioner);\r\n    }\r\n    }, [dataKaryawan])   \r\n\r\n    useEffect(() => {\r\n        if(!dataPertanyaan){\r\n\r\n        }else if(dataPertanyaan.getPertanyaan.length > 0){\r\n            dataPertanyaan.getPertanyaan.map((laporan) =>(\r\n                laporan.jenisPertanyaan === \"Tesk\"?\r\n                    setAnswerText(prevItems =>[...prevItems, {\r\n                    id: laporan.id,\r\n                    text: \"\",\r\n                    }]): \r\n                    laporan.jenisPertanyaan === \"Rating\"?\r\n                    setAnswerRadio(prevItems =>[...prevItems, {\r\n                        id: laporan.id,\r\n                        text: 1,\r\n                    }]):\r\n                    laporan.jenisPertanyaan === \"Pilih Karyawan\"?\r\n                        setAnswerPilihan(prevItems =>[...prevItems, {\r\n                        id: laporan.id,\r\n                        text: \"\",\r\n                        }]):\r\n                        laporan.jenisPertanyaan === \"Pilih Opsi\"?\r\n                        setAnswerOpsi(prevItems =>[...prevItems, {\r\n                        id: laporan.id,\r\n                        text: \"\",\r\n                        }]):null\r\n            ))\r\n        }\r\n    }, [dataPertanyaan])\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                setListKaryawan({});\r\n                refetchKuisioner()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n\r\n    const [tambahTanggapanKu] = useMutation(tambahTanggapanKuisioner,{\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            console.log(\"sukess\")\r\n            console.log(data);\r\n            Alert.alert(\r\n                \"Message\",\r\n                \"Suksess Tambah Tanggapan\",\r\n            )\r\n        }\r\n    })\r\n    const submitLaporan = e => {\r\n        e.preventDefault();\r\n        console.log(\"Pilihan\")\r\n        console.log(answerPilihan)\r\n        console.log(\"Text\")\r\n        console.log(answerText)\r\n        console.log(\"Radio\")\r\n        console.log(answerRadio)\r\n        console.log(\"Opsi\")\r\n        console.log(answerOpsi)\r\n        tambahTanggapanKu(\r\n            {variables:{\r\n                KuisionerId: parseInt(kuisioner),\r\n                answerText: answerText,\r\n                answerRadio: answerRadio,\r\n                answerPilihan: answerPilihan,\r\n                answerOpsi: answerOpsi,\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Isi Kuisioner</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"5\">\r\n                    <Form onSubmit={submitLaporan}>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Pilih Kuisioner</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={kuisioner} \r\n                                onChange={e => \r\n                                    setKuisioner(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataKuisionerKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {dataPertanyaanKu}\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getListDivisi = gql`\r\n  query getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nconst getListKaryawan= gql`\r\nquery getListKaryawan(\r\n  $divisi: String \r\n){\r\n  getListKaryawan(\r\n    divisi: $divisi\r\n  ){\r\n    id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getIndexPenilaian = gql`\r\nquery getIndexPenilaian{\r\n    getIndexPenilaian{\r\n    id namaIndex nilaiIndex keteranganIndex status\r\n  }\r\n}\r\n`;\r\n\r\nconst registerNilaiHRD = gql`\r\n    mutation registerNilaiHRD(\r\n        $idKaryawan: Int \r\n        $ListNilaiInput: [ListNilaiInput]\r\n  ) {\r\n    registerNilaiHRD(\r\n        idKaryawan: $idKaryawan\r\n        ListNilaiInput: $ListNilaiInput\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function TambahPertanyaan(props) {\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [karyawan, setKaryawan] = useState(0);\r\n    const [listKaryawan, setListKaryawan] = useState([]);\r\n    const [listDivisi, setListDivisi] = useState([]);\r\n    const [listNilai, setListNilai] = useState([]);\r\n    const [idKaryawan, setIdKaryawan] = useState(0);\r\n    const [nilaiKaryawan, setNilaiKaryawan] = useState(0);\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n\r\n    const { loading, data, refetch } = useQuery(getIndexPenilaian);\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const { \r\n        loading: loadingDivisi, \r\n        data: dataDivisi, \r\n        refetch: refetchDivisi\r\n      } = useQuery(getListDivisi);\r\n\r\n    const [getListKaryawanKu, { \r\n        loading: loadingKaryawan,\r\n        data: dataKaryawan,\r\n    }] = useLazyQuery(getListKaryawan);\r\n\r\n    useEffect(() => {\r\n        if(!dataDivisi){\r\n  \r\n        }else if(dataDivisi.getListDivisi.length > 0){\r\n          setListDivisi(dataDivisi.getListDivisi);\r\n        }\r\n      }, [dataDivisi])\r\n  \r\n      useEffect(() => {\r\n        if(divisi !== \"\"){\r\n          getListKaryawanKu({variables: {\r\n            divisi: divisi\r\n          }})\r\n        }\r\n      }, [divisi])\r\n\r\n      useEffect(() => {\r\n  \r\n        if(!dataKaryawan){\r\n  \r\n        }else if(dataKaryawan.getListKaryawan.length > 0){\r\n          setListKaryawan(dataKaryawan.getListKaryawan);\r\n        }\r\n      }, [dataKaryawan])  \r\n\r\n      useEffect(() => {\r\n        if(divisi !== \"\"){\r\n          getListKaryawanKu({variables: {\r\n            divisi: divisi\r\n          }})\r\n        }\r\n      }, [divisi])\r\n\r\n    const [registerNilaiKu] = useMutation(registerNilaiHRD,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Penilaian`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const register = e =>{\r\n        e.preventDefault();\r\n        console.log(\"masuk\");\r\n        console.log(listNilai);\r\n        registerNilaiKu({\r\n            variables: {\r\n                idKaryawan: parseInt(karyawan),\r\n                ListNilaiInput: listNilai\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateNilai = (nilai, id, persentase) =>{\r\n        var hasil = parseInt(nilai) * persentase / 100;\r\n        setListNilai(listNilai.map((item) => \r\n          item.id === id? \r\n          {...item, \r\n            hasil: parseFloat(hasil), }: \r\n          item))\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if(!data){\r\n  \r\n        }else if(data.getIndexPenilaian.length > 0){\r\n            data.getIndexPenilaian.map((laporan) =>{\r\n                setListNilai(prevItems =>[...prevItems, {\r\n                    id: laporan.id,\r\n                    hasil: parseFloat(0),\r\n                }])\r\n            })\r\n        }\r\n      }, [data])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Penilaian</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    {showError}\r\n                    {showUser}\r\n                    <Form.Group as={Col}>\r\n                    <Form.Label>Divisi</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\"\r\n                            value={divisi}\r\n                            onChange={e => \r\n                                setDivisi(e.target.value)\r\n                        }>\r\n                            <option value=\"\">Pilih Divisi</option>\r\n                            {\r\n                                listDivisi.map((element,index) => (\r\n                                    <option value={element.namaDivisi} key={index}>{element.namaDivisi}</option>\r\n                                ))\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                    <Form.Label className={errors.karyawan && 'text-danger'}>{errors.karyawan ?? 'Karyawan'}</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\"\r\n                            value={karyawan}\r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                        }>\r\n                            <option value={0}>Pilih Karyawan</option>\r\n                            {\r\n                                listKaryawan.length === undefined ? null:\r\n                                listKaryawan.map((element,index) => (\r\n                                    <option value={element.id} key={index}>{element.nama}</option>\r\n                                ))\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    <Form onSubmit={register}>\r\n                        <TableContainer component={Paper} key={0}>\r\n                            <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\">Nama Index</TableCell>\r\n                                        <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                                        <TableCell align=\"right\">Persentase Index</TableCell>\r\n                                        <TableCell align=\"right\">Nilai ( 0-100 )</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        data?.getIndexPenilaian.map((laporan,index) =>(\r\n                                            <TableRow key={index}>\r\n                                                <TableCell component=\"th\" align=\"center\">{laporan.namaIndex}</TableCell>\r\n                                                <TableCell component=\"th\" align=\"center\">{laporan.keteranganIndex}</TableCell>\r\n                                                <TableCell component=\"th\" align=\"right\">{laporan.nilaiIndex}</TableCell>\r\n                                                <TableCell component=\"th\" align=\"right\">\r\n                                                    <Form.Group as={Col} align=\"right\">\r\n                                                        <Form.Control \r\n                                                            type=\"text\" \r\n                                                            name=\"nama\"\r\n                                                            style={{width: '40%'}}\r\n                                                            onChange={e => \r\n                                                                updateNilai(e.target.value, laporan.id, laporan.nilaiIndex)}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <div className='text-center' style={{marginTop: 10}}>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Tambah Penilaian\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container, Form} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\n\r\nconst getNilaiKaryawan = gql`\r\n    query getNilaiKaryawan(\r\n        $page: Int \r\n        $limit: Int\r\n        $orderBy: String \r\n        $karyawan: Int \r\n        $bulan: MyDate\r\n        $divisi: String \r\n    ){\r\n        getNilaiKaryawan(\r\n            page: $page \r\n            limit: $limit\r\n            orderBy: $orderBy\r\n            karyawan: $karyawan\r\n            bulan: $bulan\r\n            divisi: $divisi\r\n        ){\r\n            count rows{\r\n                nama jabatan{\r\n                    namaJabatan tingkatJabatan\r\n                } hPenilaianHRD{\r\n                    totalNilai\r\n                } hPenilaianKuisioner{\r\n                    totalNilai\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DaftarPenilaian(props) {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(new Date());\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const { loading, data, refetch } = useQuery(getNilaiKaryawan,{\r\n        variables: {\r\n            page: parseInt(pageNumber),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            divisi: divisiKontrak,\r\n        }\r\n    });\r\n    \r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getNilaiKaryawan.count && !counterPage){\r\n      var jml = Math.ceil(data.getNilaiKaryawan.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          marginPagesDisplayed={2}\r\n          forcePage={pageNumber}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getNilaiKaryawan.rows.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Penilaian Yang Tersedia</p>)\r\n    }else if(data.getNilaiKaryawan.rows.length > 0 && !counter){\r\n        console.log(data.getNilaiKaryawan.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Karyawan</TableCell>\r\n                            <TableCell>Divisi Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Nilai HRD</TableCell>\r\n                            <TableCell align=\"right\">Nilai Kuisioner</TableCell>\r\n                            <TableCell align=\"right\">Total Nilai</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getNilaiKaryawan.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan.jabatan)}\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.nama}\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.jabatan.tingkatJabatan === 2? \"Ketua \":\r\n                                            laporan.jabatan.tingkatJabatan === 4? \"Ketua \": \"Anggota \"}\r\n                                            {laporan.jabatan.namaJabatan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{laporan.hPenilaianHRD === null? \"Belum Ada Penilaian\": laporan.hPenilaianHRD[0].totalNilai}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.hPenilaianKuisioner === null? \"Belum Ada Penilaian\": laporan.hPenilaianKuisioner[0].totalNilai}</TableCell>\r\n                                    <TableCell align=\"right\">{(laporan.hPenilaianHRD[0]?.totalNilai + laporan.hPenilaianKuisioner[0]?.totalNilai)}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Penilaian</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Nilai Tertinggi\">Nilai Tertinggi</option>\r\n                            <option value=\"Nilai Terendah\">Nilai Terendah</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst registerPengaruhNilai = gql`\r\n    mutation registerPengaruhNilai(\r\n        $nilaiMin: Float \r\n        $nilaiMax: Float \r\n        $hasilNilai: String \r\n        $pengurangan: Boolean\r\n        $nilaiUang: Int \r\n  ) {\r\n    registerPengaruhNilai(\r\n        nilaiMin: $nilaiMin\r\n        nilaiMax: $nilaiMax\r\n        hasilNilai: $hasilNilai\r\n        pengurangan: $pengurangan\r\n        nilaiUang: $nilaiUang\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updatePengaruhNilai = gql`\r\n    mutation updatePengaruhNilai(\r\n        $id: Int  \r\n        $nilaiMin: Float \r\n        $nilaiMax: Float \r\n        $hasilNilai: String \r\n        $pengurangan: Boolean\r\n        $nilaiUang: Int \r\n    ) {\r\n        updatePengaruhNilai(\r\n            id: $id\r\n            nilaiMin: $nilaiMin\r\n            nilaiMax: $nilaiMax\r\n            hasilNilai: $hasilNilai\r\n            pengurangan: $pengurangan\r\n            nilaiUang: $nilaiUang\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getPengaruhNilai = gql`\r\nquery getPengaruhNilai{\r\n    getPengaruhNilai{\r\n        id nilaiMin nilaiMax hasilNilai pengurangan nilaiUang\r\n  }\r\n}\r\n`;\r\nexport default function MasterNilai(props) {\r\n    const [id, setId] = useState(-1);\r\n    const [nilaiMin, setNilaiMin] = useState(0);\r\n    const [nilaiMax, setNilaiMax] = useState(0);\r\n    const [hasil, setHasil] = useState(\"\");\r\n    const [pengurangan, setPengurangan] = useState(false);\r\n    const [nilaiUang, setNilaiUang] = useState(0);\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const [registerNilaiKu] = useMutation(registerPengaruhNilai,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Nilai`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        console.log(\"masuk\");\r\n        registerNilaiKu({variables:{\r\n            nilaiMin: parseFloat(nilaiMin),\r\n            nilaiMax: parseFloat(nilaiMax),\r\n            hasilNilai: hasil,\r\n            pengurangan: pengurangan,\r\n            nilaiUang: parseInt(nilaiUang),\r\n        }\r\n        });\r\n    }\r\n\r\n    const editIndex = (laporan) => {\r\n        setId(laporan.id);\r\n        setNilaiMin(laporan.nilaiMin);\r\n        setNilaiMax(laporan.nilaiMax);\r\n        setHasil(laporan.hasilNilai)\r\n        console.log(pengurangan)\r\n        setPengurangan(laporan.pengurangan);\r\n        setNilaiUang(laporan.nilaiUang);\r\n    }\r\n\r\n    const [updateNilaiKu] = useMutation(updatePengaruhNilai,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setNilaiMin(0);\r\n            setNilaiMax(0);\r\n            setHasil(\"\")\r\n            setPengurangan(false);\r\n            setNilaiUang(0);\r\n            setSuccess({\r\n                Sukses: `Suksess Update Nilai`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateIndex = (status) =>{\r\n        if(status === true){\r\n            updateNilaiKu({\r\n                variables: {\r\n                    id: parseInt(id),\r\n                    nilaiMin: parseFloat(nilaiMin),\r\n                    nilaiMax: parseFloat(nilaiMax),\r\n                    hasilNilai: hasil,\r\n                    pengurangan: pengurangan,\r\n                    nilaiUang: parseInt(nilaiUang),\r\n                }\r\n            })\r\n        }else if(status === false){\r\n            setId(-1);\r\n            setNilaiMin(0);\r\n            setNilaiMax(0);\r\n            setHasil(\"\")\r\n            setPengurangan(false);\r\n            setNilaiUang(0);\r\n        }\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getPengaruhNilai);\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getPengaruhNilai.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Data Nilai</p>)\r\n    }else if(data.getPengaruhNilai.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nilai Bawah</TableCell>\r\n                            <TableCell align=\"center\">Nilai Atas</TableCell>\r\n                            <TableCell align=\"center\">Grade Nilai</TableCell>\r\n                            <TableCell align=\"center\">Pengaruh Ke Gaji</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getPengaruhNilai.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nilaiMin}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nilaiMax}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.hasilNilai}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className={laporan.pengurangan === true? \"badgeStatusNonText\": \"badgeStatusAktifText\"}>\r\n                                            {laporan.pengurangan === true?\"-\":\"+\"}<CurrencyFormat displayType={'text'} value={laporan.nilaiUang} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                        </div>\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    const handleCheckBox = (e) =>{\r\n        setPengurangan(e.target.checked)\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Nilai</h1></Col>\r\n                </Row>\r\n                <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                    <CCard className=\"col-md-5\">\r\n                        <CCardBody className=\"text-center\">\r\n                            <Form >\r\n                                {showError}\r\n                                {showUser}\r\n                                <div className=\"inputsRow\">\r\n                                    <Form.Group as={Col} className=\"col-md-4 inputRow\">\r\n                                        <Form.Label>Nilai Bawah</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"nama\"\r\n                                            className=\"inputCenter\"\r\n                                            value= {nilaiMin}\r\n                                            onChange={e => \r\n                                                setNilaiMin(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"col-md-4 inputRow\">\r\n                                        <Form.Label>Nilai Atas</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"nama\"\r\n                                            className=\"inputCenter\"\r\n                                            value= {nilaiMax}\r\n                                            onChange={e => \r\n                                                setNilaiMax(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <Form.Group as={Col} >\r\n                                    <Form.Label>Grade Nilai</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"nama\"\r\n                                        value= {hasil}\r\n                                        className=\"inputCenter\"\r\n                                        onChange={e => \r\n                                            setHasil(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Nilai Uang(Pengaruh Nilai Ke Gaji)</Form.Label>\r\n                                    <CurrencyFormat \r\n                                        defaultValue={0}\r\n                                        thousandSeparator={'.'} \r\n                                        decimalSeparator={','} \r\n                                        prefix={'Rp '}\r\n                                        className=\"inputCenter\"\r\n                                        value={nilaiUang}\r\n                                        style={{width: '50%', fontSize: 20}}\r\n                                        onValueChange={(value) => {\r\n                                                setNilaiUang(value.value)\r\n                                            }\r\n                                        } \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Check \r\n                                        inline\r\n                                        value={pengurangan}\r\n                                        checked={pengurangan}\r\n                                        type=\"checkbox\"\r\n                                        label=\"Centang ini jika ingin mengurangi gaji karyawan\"\r\n                                        onChange={handleCheckBox}\r\n                                    />\r\n                                </Form.Group>\r\n                            <div className='text-center'>\r\n                                {\r\n                                    id === -1?\r\n                                        <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                                            Tambah Index\r\n                                        </Button>:\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateIndex(true)}>\r\n                                                Update Index\r\n                                            </Button>\r\n                                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateIndex(false)}>\r\n                                                Batal\r\n                                            </Button>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            </Form>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {dataKu}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst registerIndexPenilaian = gql`\r\n    mutation registerIndexPenilaian(\r\n        $namaIndex: String\r\n        $nilaiIndex: Int \r\n        $keteranganIndex: String\r\n  ) {\r\n    registerIndexPenilaian(\r\n        namaIndex: $namaIndex\r\n        nilaiIndex: $nilaiIndex\r\n        keteranganIndex: $keteranganIndex\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateStatusIndexPenilaian = gql`\r\n    mutation updateStatusIndexPenilaian(\r\n        $status: Boolean\r\n        $id: Int \r\n  ) {\r\n    updateStatusIndexPenilaian(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateIndexPenilaian = gql`\r\n    mutation updateIndexPenilaian(\r\n        $id: Int \r\n        $namaIndex: String\r\n        $nilaiIndex: Int \r\n        $keteranganIndex: String\r\n    ) {\r\n        updateIndexPenilaian(\r\n            id: $id\r\n            namaIndex: $namaIndex\r\n            nilaiIndex: $nilaiIndex\r\n            keteranganIndex: $keteranganIndex\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getIndexPenilaian = gql`\r\nquery getIndexPenilaian{\r\n    getIndexPenilaian{\r\n    id namaIndex nilaiIndex keteranganIndex status\r\n  }\r\n}\r\n`;\r\nexport default function MasterIndex(props) {\r\n    const [id, setId] = useState(-1);\r\n    const [nama, setNama] = useState(\"\");\r\n    const [nilai, setNilai] = useState(0);\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    var counterJml = 0;\r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getIndexPenilaian);\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getIndexPenilaian.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Index Penilaian Yang Tersedia</p>)\r\n    }else if(data.getIndexPenilaian.length > 0 && !counter){\r\n        counterJml = 0;\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"right\">Persentase Index</TableCell>\r\n                            <TableCell align=\"right\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexPenilaian.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaIndex}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganIndex}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\" >{laporan.nilaiIndex}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                                    <div className=\"buttonsSideBySide\">\r\n                                        <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                            Edit\r\n                                        </Button>\r\n                                        {\r\n                                            laporan.status === true?\r\n                                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                Non Aktifkan\r\n                                            </Button>:\r\n                                            <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                Aktifkan\r\n                                            </Button>\r\n                                        }\r\n                                    </div>\r\n                                    </TableCell>\r\n                                    <p hidden>{counterJml += laporan.nilaiIndex}</p>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\"></TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{fontWeight: 'bold'}}>Total</TableCell>\r\n                            {\r\n                                counterJml < 80?\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{backgroundColor: 'red'}}>{counterJml}(Jumlah Kurang Dari 80)</TableCell>:\r\n                                    counterJml > 80?\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{backgroundColor: 'red'}}>{counterJml}(Jumlah Lebih Dari 80)</TableCell>:\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\">{counterJml}</TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    const [registerIndexKu] = useMutation(registerIndexPenilaian,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Index Penilaian`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        console.log(\"masuk\");\r\n        registerIndexKu({variables:{\r\n            namaIndex: nama,\r\n            nilaiIndex: parseInt(nilai),\r\n            keteranganIndex: keterangan,\r\n        }\r\n        });\r\n    }\r\n\r\n    const [updateStatusIndexKu] = useMutation(updateStatusIndexPenilaian,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const editIndex = (laporan) => {\r\n        setId(laporan.id);\r\n        setNama(laporan.namaIndex);\r\n        setNilai(laporan.nilaiIndex);\r\n        setKeterangan(laporan.keteranganIndex);\r\n    }\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    const [updateIndexKu] = useMutation(updateIndexPenilaian,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setSuccess({\r\n                Sukses: `Suksess Update Index Penilaian`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateIndex = (status) =>{\r\n        if(status === true){\r\n            updateIndexKu({\r\n                variables: {\r\n                    id: id,\r\n                    namaIndex: nama,\r\n                    nilaiIndex: parseInt(nilai),\r\n                    keteranganIndex: keterangan,\r\n                }\r\n            })\r\n        }else if(status === false){\r\n            setId(-1);\r\n            setNama(\"\");\r\n            setNilai(0);\r\n            setKeterangan(\"\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Index Penilaian</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-5\">\r\n                    <Form>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaIndex && 'text-danger'}>{errors.namaIndex ?? 'Nama Index'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nama}\r\n                                onChange={e => \r\n                                    setNama(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.nilaiIndex && 'text-danger'}>{errors.nilaiIndex ?? 'Nilai Index'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nilai\"\r\n                                value= {nilai}\r\n                                onChange={e => \r\n                                    setNilai(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.keterangan && 'text-danger'}>{errors.keterangan ?? 'Keterangan'}</Form.Label>\r\n                            <Form.Control \r\n                                as=\"textarea\" \r\n                                name=\"keterangan\"\r\n                                value= {keterangan}\r\n                                onChange={e => \r\n                                    setKeterangan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        {\r\n                            id === -1?\r\n                                <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                                    Tambah Index\r\n                                </Button>:\r\n                                <div className=\"buttonsSideBySide\">\r\n                                    <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateIndex(true)}>\r\n                                        Update Index\r\n                                    </Button>\r\n                                    <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateIndex(false)}>\r\n                                        Batal\r\n                                    </Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-10\">\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nconst getIzin = gql`\r\n  query getIzin{\r\n    getIzin{\r\n        id namaIzin totalIzin keterangan status batasanHari\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst updateStatusIzin = gql`\r\n    mutation updateStatusIzin(\r\n        $id: Int \r\n        $status: Boolean\r\n  ) {\r\n    updateStatusIzin(\r\n        id: $id\r\n        status: $status\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerIzin = gql`\r\n    mutation registerIzin(\r\n        $namaIzin: String \r\n        $totalIzin: Int \r\n        $keterangan: String \r\n        $batasanHari: Boolean\r\n  ) {\r\n    registerIzin(\r\n        namaIzin: $namaIzin\r\n        totalIzin: $totalIzin\r\n        keterangan: $keterangan\r\n        batasanHari: $batasanHari\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateIzin = gql`\r\n    mutation updateIzin(\r\n        $id: Int \r\n        $namaIzin: String \r\n        $totalIzin: Int \r\n        $keterangan: String \r\n        $batasanHari: Boolean\r\n  ) {\r\n    updateIzin(\r\n        id: $id\r\n        namaIzin: $namaIzin\r\n        totalIzin: $totalIzin\r\n        keterangan: $keterangan\r\n        batasanHari: $batasanHari\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MasterIzin(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [hari, setHari] = useState(0);\r\n    const [nama, setNama] = useState(\"\")\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [batasanHari, setBatasanHari] = useState(false);\r\n    const [edit, setEdit] = useState(-1);\r\n    const {loading, data, refetch} = useQuery(getIzin);\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n\r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const goToDetail = (laporan) =>{\r\n        history.push({\r\n            pathname: '/kuisioner/detail pertanyaan',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const [updateStatusIzinKu] = useMutation(updateStatusIzin,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            counterCuti = false;\r\n            console.log(\"suksess\")\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusIzinKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    let dataCuti = []\r\n    let counterCuti = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(!data || loading){\r\n        dataCuti.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIzin.length === 0){\r\n        dataCuti.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada List Izin</p>)\r\n    }else if(data.getIzin.length > 0 && !counterCuti){\r\n        dataCuti.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Izin</TableCell>\r\n                            <TableCell align=\"right\">Total Cuti</TableCell>\r\n                            <TableCell align=\"center\">Keterangan</TableCell>\r\n                            <TableCell align=\"center\">Batasan Hari</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIzin.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan)}\r\n                                    <TableCell align=\"center\">{laporan.namaIzin}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.totalIzin} Hari</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                            laporan.batasanHari === true? \r\n                                                <div className=\"badgeStatusNon\">Ada Batasan Hari</div>: \r\n                                                <div className=\"badgeStatusAktif\">Tidak Ada Batasan</div>\r\n                                    }</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" width=\"250\" align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIzin(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            {\r\n                                                laporan.status === true?\r\n                                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                    Non Aktifkan\r\n                                                </Button>:\r\n                                                <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                    Aktifkan\r\n                                                </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterCuti = true;\r\n    }\r\n\r\n    const [registerIzinKu] = useMutation(registerIzin,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Izin`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const updateCutiFunction = e =>{\r\n        e.preventDefault();\r\n        if(edit === -1){\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    const registerIzinFunction = () =>{\r\n        registerIzinKu({\r\n            variables: {\r\n                namaIzin: nama,\r\n                totalIzin: parseInt(hari),\r\n                keterangan: keterangan, \r\n                batasanHari: batasanHari,\r\n            }\r\n        })\r\n    }\r\n\r\n    const [updateIzinKu] = useMutation(updateIzin,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess Perbarui Izin`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const editIzin = (laporan) =>{\r\n        setNama(laporan.namaIzin);\r\n        setHari(laporan.totalIzin);\r\n        setKeterangan(laporan.keterangan);\r\n        setBatasanHari(laporan.batasanHari);\r\n        setEdit(laporan.id);\r\n    }\r\n\r\n    const updateIzinFunction = (status) =>{\r\n        if(status === true){\r\n            updateIzinKu({\r\n                variables: {\r\n                    id: parseInt(edit),\r\n                    namaIzin: nama,\r\n                    totalIzin: parseInt(hari),\r\n                    keterangan: keterangan, \r\n                    batasanHari: batasanHari,\r\n                }\r\n            })\r\n            setEdit(-1);\r\n        }else{\r\n            setEdit(-1);\r\n        }\r\n        setNama(\"\")\r\n        setHari(0)\r\n        setKeterangan(\"\")\r\n        setBatasanHari(false)\r\n    }\r\n\r\n    const handleCheckBox = (e) =>{\r\n        setBatasanHari(e.target.checked)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    {showError}\r\n                    {showUser}\r\n                    <h1 className=\"text-center\">Master Izin</h1>\r\n                    <Form onSubmit={updateCutiFunction} style={{marginTop: 10}}>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Nama Cuti</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nama}\r\n                                onChange={e => \r\n                                    setNama(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Total Hari</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={hari} \r\n                                onChange={e => \r\n                                    setHari(e.target.value)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Keterangan</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={keterangan} \r\n                                onChange={e => \r\n                                    setKeterangan(e.target.value)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Check \r\n                                inline\r\n                                value={batasanHari}\r\n                                type=\"checkbox\"\r\n                                label=\"Centang ini jika ingin memberikan batasan hari\"\r\n                                onChange={handleCheckBox}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className='text-center'>\r\n                        {\r\n                            edit === -1? \r\n                                <Button variant=\"primary\" onClick={() => registerIzinFunction()}>\r\n                                    Tambah\r\n                                </Button>:\r\n                                <div className=\"buttonsSideBySide\">\r\n                                    <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateIzinFunction(true)}>\r\n                                        Perbarui\r\n                                    </Button>\r\n                                    <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateIzinFunction(false)}>\r\n                                        Batal\r\n                                    </Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataCuti}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\nconst registerIndexGaji = gql`\r\n    mutation registerIndexGaji(\r\n        $namaGaji: String\r\n        $keteranganGaji: String\r\n  ) {\r\n    registerIndexGaji(\r\n        namaGaji: $namaGaji\r\n        keteranganGaji: $keteranganGaji\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateStatusIndexGaji = gql`\r\n    mutation updateStatusIndexGaji(\r\n        $status: Boolean\r\n        $id: Int \r\n  ) {\r\n    updateStatusIndexGaji(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateIndexGaji = gql`\r\n    mutation updateIndexGaji(\r\n        $id: Int \r\n        $namaGaji: String\r\n        $keteranganGaji: String\r\n    ) {\r\n        updateIndexGaji(\r\n            id: $id\r\n            namaGaji: $namaGaji\r\n            keteranganGaji: $keteranganGaji\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getIndexGaji = gql`\r\nquery getIndexGaji(\r\n    $status: Boolean\r\n){\r\n    getIndexGaji(\r\n        status: $status\r\n    ){\r\n    id namaGaji keteranganGaji status\r\n  }\r\n}\r\n`;\r\nexport default function MasterGaji(props) {\r\n    const [id, setId] = useState(-1);\r\n    const [nama, setNama] = useState(\"\");\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const [registerIndexGajiKu] = useMutation(registerIndexGaji,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Index Gaji`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        console.log(\"masuk\");\r\n        registerIndexGajiKu({variables:{\r\n            namaGaji: nama,\r\n            keteranganGaji: keterangan,\r\n        }\r\n        });\r\n    }\r\n\r\n    const [updateStatusIndexKu] = useMutation(updateStatusIndexGaji,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const editIndex = (laporan) => {\r\n        setId(laporan.id);\r\n        setNama(laporan.namaGaji);\r\n        setKeterangan(laporan.keteranganGaji);\r\n    }\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    const [updateIndexKu] = useMutation(updateIndexGaji,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setSuccess({\r\n                Sukses: `Suksess Update Index Penilaian`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateIndex = (status) =>{\r\n        if(status === true){\r\n            updateIndexKu({\r\n                variables: {\r\n                    id: id,\r\n                    namaGaji: nama,\r\n                    keteranganGaji: keterangan,\r\n                }\r\n            })\r\n        }else if(status === false){\r\n            setId(-1);\r\n            setNama(\"\");\r\n            setKeterangan(\"\");\r\n        }\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getIndexGaji,{\r\n        variables:{\r\n            status: false\r\n        }\r\n    });\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIndexGaji.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Index Gaji</p>)\r\n    }else if(data.getIndexGaji.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexGaji.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaGaji}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganGaji}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            {\r\n                                                laporan.status === true?\r\n                                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                    Non Aktifkan\r\n                                                </Button>:\r\n                                                <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                    Aktifkan\r\n                                                </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Index Gaji</h1></Col>\r\n                </Row>\r\n                <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                    <CCard className=\"col-md-5\">\r\n                        <CCardBody className=\"text-center\">\r\n                            <Form >\r\n                                {showError}\r\n                                {showUser}\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label className={errors.namaGaji && 'text-danger'}>{errors.namaGaji ?? 'Nama Gaji'}</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"nama\"\r\n                                        value= {nama}\r\n                                        onChange={e => \r\n                                            setNama(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label className={errors.keteranganGaji && 'text-danger'}>{errors.keteranganGaji ?? 'Keterangan Gaji'}</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"textarea\" \r\n                                        name=\"keterangan\"\r\n                                        value= {keterangan}\r\n                                        onChange={e => \r\n                                            setKeterangan(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            <div className='text-center'>\r\n                                {\r\n                                    id === -1?\r\n                                        <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                                            Tambah Index\r\n                                        </Button>:\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateIndex(true)}>\r\n                                                Update Index\r\n                                            </Button>\r\n                                            <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateIndex(false)}>\r\n                                                Batal\r\n                                            </Button>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            </Form>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {dataKu}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\n\r\nconst registerIndexIuran = gql`\r\n    mutation registerIndexIuran(\r\n        $namaIuran: String\r\n        $keteranganIuran: String\r\n  ) {\r\n    registerIndexIuran(\r\n        namaIuran: $namaIuran\r\n        keteranganIuran: $keteranganIuran\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateStatusIndexIuran = gql`\r\n    mutation updateStatusIndexIuran(\r\n        $status: Boolean\r\n        $id: Int \r\n  ) {\r\n    updateStatusIndexIuran(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateIndexIuran = gql`\r\n    mutation updateIndexIuran(\r\n        $id: Int \r\n        $namaIuran: String\r\n        $keteranganIuran: String\r\n    ) {\r\n        updateIndexIuran(\r\n            id: $id\r\n            namaIuran: $namaIuran\r\n            keteranganIuran: $keteranganIuran\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getIndexIuran = gql`\r\nquery getIndexIuran(\r\n    $status: Boolean\r\n){\r\n    getIndexIuran(\r\n        status: $status\r\n    ){\r\n    id namaIuran keteranganIuran status\r\n  }\r\n}\r\n`;\r\nexport default function MasterIuran(props) {\r\n    const [id, setId] = useState(-1);\r\n    const [nama, setNama] = useState(\"\");\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const [registerIndexIuranKu] = useMutation(registerIndexIuran,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess tambah Index Iuran`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        console.log(\"masuk\");\r\n        registerIndexIuranKu({variables:{\r\n            namaIuran: nama,\r\n            keteranganIuran: keterangan,\r\n        }\r\n        });\r\n    }\r\n\r\n    const [updateStatusIndexKu] = useMutation(updateStatusIndexIuran,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const editIndex = (laporan) => {\r\n        setId(laporan.id);\r\n        setNama(laporan.namaIuran);\r\n        setKeterangan(laporan.keteranganIuran);\r\n    }\r\n\r\n    const updateStatus = (status,id) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n\r\n    const [updateIndexKu] = useMutation(updateIndexIuran,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n        },\r\n        onCompleted(data){\r\n            refetch()\r\n            setId(-1);\r\n            setSuccess({\r\n                Sukses: `Suksess Update Index Iuran`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const updateIndex = (status) =>{\r\n        if(status === true){\r\n            updateIndexKu({\r\n                variables: {\r\n                    id: id,\r\n                    namaIuran: nama,\r\n                    keteranganIuran: keterangan,\r\n                }\r\n            })\r\n        }else if(status === false){\r\n            setId(-1);\r\n            setNama(\"\");\r\n            setKeterangan(\"\");\r\n        }\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getIndexIuran,{\r\n        variables:{\r\n            status: false\r\n        }\r\n    });\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIndexIuran.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Index Iuran</p>)\r\n    }else if(data.getIndexIuran.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexIuran.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaIuran}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganIuran}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => editIndex(laporan)}>\r\n                                                Edit\r\n                                            </Button>\r\n                                            {\r\n                                                laporan.status === true?\r\n                                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false, laporan.id)}>\r\n                                                    Non Aktifkan\r\n                                                </Button>:\r\n                                                <Button className=\"buttonSideBySide\" variant=\"success\" onClick={() => updateStatus(true, laporan.id)}>\r\n                                                    Aktifkan\r\n                                                </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Index Iuran</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <CCard className=\"col-md-5\">\r\n                    <CCardBody className=\"text-center\">\r\n                    <Form>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.namaIuran && 'text-danger'}>{errors.namaIuran ?? 'Nama Iuran'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {nama}\r\n                                onChange={e => \r\n                                    setNama(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.keteranganIuran && 'text-danger'}>{errors.keteranganIuran ?? 'Keterangan Iuran'}</Form.Label>\r\n                            <Form.Control \r\n                                as=\"textarea\" \r\n                                name=\"keterangan\"\r\n                                value= {keterangan}\r\n                                onChange={e => \r\n                                    setKeterangan(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        {\r\n                            id === -1?\r\n                                <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                                    Tambah Index\r\n                                </Button>:\r\n                                <div>\r\n                                    <Button variant=\"primary\" onClick={() => updateIndex(true)}>\r\n                                        Update Index\r\n                                    </Button>\r\n                                    <Button variant=\"danger\" onClick={() => updateIndex(false)}>\r\n                                        Batal\r\n                                    </Button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    </Form>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\n\r\n\r\nconst getKontrakKaryawan = gql`\r\nquery getKontrakKaryawan(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getKontrakKaryawan(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n    ){\r\n        count rows{\r\n            id jenisKontrak totalGaji totalIuran tanggalMulai tanggalBerakhir status karyawan{\r\n                id nama jabatan{\r\n                    tingkatJabatan namaJabatan\r\n                }\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function MasterKontrak(props) {\r\n    let history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n\r\n    const { loading, data, refetch } = useQuery(getKontrakKaryawan,{\r\n        variables: {\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/kontrak/detail kontrak',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getKontrakKaryawan.count){\r\n      var jml = Math.ceil(data.getKontrakKaryawan.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getKontrakKaryawan.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getKontrakKaryawan.rows.length > 0){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Id Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Total Gaji</TableCell>\r\n                            <TableCell align=\"center\">Total Iuran</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Mulai</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Berakhir</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"right\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getKontrakKaryawan.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.karyawan.id}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jenisKontrak}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalIuran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    {console.log(dayjs(laporan.tanggalBerakhir).diff(new Date(), 'day'))}\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{dayjs(laporan.tanggalMulai).format('DD-MM-YYYY')}</TableCell>\r\n                                    {\r\n                                        dayjs(laporan.tanggalBerakhir).diff(new Date(), 'day') < 9? \r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\" style={{backgroundColor: 'red'}}>\r\n                                                {dayjs(laporan.tanggalBerakhir).format('DD-MM-YYYY')}\r\n                                            </TableCell>:\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                                {dayjs(laporan.tanggalBerakhir).format('DD-MM-YYYY')}\r\n                                            </TableCell>\r\n                                    }\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 0? <div className=\"badgeStatusWaiting\">Menunggu Feedback</div>: \r\n                                                laporan.status === 1? <div className=\"badgeStatusAktif\">Di Setujui</div>:\r\n                                                    laporan.status === 2? <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Batalkan</div>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    \r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Kontrak Karyawan</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Feedback</option>\r\n                        <option value=\"1\">Disetujui</option>\r\n                        <option value=\"2\">Ditolak</option>\r\n                        <option value=\"3\">Dibatalkan</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Kontrak Terdekat\">Kontrak Habis Terdekat</option>\r\n                            <option value=\"Nama Asc\">Nama A-Z</option>\r\n                            <option value=\"Nama Desc\">Nama Z-A</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DatePicker from 'react-datepicker'\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst registerKontrakKaryawan = gql`\r\n    mutation registerKontrakKaryawan(\r\n        $jenisKontrak: String   \r\n        $gaji: [indexKontrakInput]\r\n        $iuran: [indexKontrakInput]\r\n        $tanggalMulai: MyDate\r\n        $tanggalBerakhir: MyDate\r\n        $idKaryawan: Int \r\n  ) {\r\n    registerKontrakKaryawan(\r\n        jenisKontrak: $jenisKontrak\r\n        gaji: $gaji \r\n        iuran: $iuran\r\n        tanggalMulai: $tanggalMulai\r\n        tanggalBerakhir: $tanggalBerakhir\r\n        idKaryawan: $idKaryawan\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawan = gql`\r\nquery getListKaryawan(\r\n    $divisi: String \r\n){\r\n    getListKaryawan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getIndexGaji = gql`\r\nquery getIndexGaji(\r\n    $status: Boolean\r\n){\r\n    getIndexGaji(\r\n        status: $status\r\n    ){\r\n    id namaGaji\r\n  }\r\n}\r\n`;\r\n\r\nconst getIndexIuran = gql`\r\nquery getIndexIuran(\r\n    $status: Boolean\r\n){\r\n    getIndexIuran(\r\n        status: $status\r\n    ){\r\n    id namaIuran\r\n  }\r\n}\r\n`;\r\n\r\nexport default function TambahKontrak(props) {\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [idKaryawan, setIdKaryawan] = useState(0);\r\n    const [jenisKontrak, setJenisKontrak] = useState(\"\");\r\n    const [tanggalMulai, setTanggalMulai] = useState(new Date());\r\n    const [tanggalBerakhir, setTanggalBerakhir] = useState(new Date());\r\n    const [gaji, setGaji] = useState([]);\r\n    const [iuran, setIuran] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n\r\n    const [registerKontrakKaryawanKu] = useMutation(registerKontrakKaryawan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            alert(err.graphQLErrors[0].extensions.errors)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess Tambah Kontrak Karyawan`,\r\n            })\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        registerKontrakKaryawanKu({variables:{\r\n            idKaryawan: parseInt(idKaryawan),\r\n            jenisKontrak: jenisKontrak,\r\n            gaji: gaji,\r\n            iuran: iuran,\r\n            tanggalMulai: dayjs(tanggalMulai).format('YYYY-MM-DD'),\r\n            tanggalBerakhir: dayjs(tanggalBerakhir).format('YYYY-MM-DD')\r\n        }\r\n        });\r\n    }\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getKaryawanKu({\r\n            variables: {\r\n                divisi: divisi\r\n            }\r\n        })\r\n    }, [divisi])\r\n    \r\n    const [getKaryawanKu,{ \r\n        loading: loadingKaryawan,\r\n        data: dataKaryawan \r\n    }] = useLazyQuery(getListKaryawan);\r\n\r\n    let dataKaryawanKu = [];\r\n    let counterKaryawan = false;\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawan.length === 0){\r\n        \r\n    }else if(dataKaryawan.getListKaryawan.length > 0 && !counterKaryawan){\r\n        console.log(dataKaryawan.getListKaryawan);\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawan.map((karyawan,index) =>(\r\n            <option key={index} value={karyawan.id}>\r\n                {karyawan.nama}\r\n            </option>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingGaji,\r\n        data: dataGaji \r\n    } = useQuery(getIndexGaji);\r\n\r\n    const { \r\n        loading: loadingIuran,\r\n        data: dataIuran \r\n    } = useQuery(getIndexIuran);\r\n\r\n    useEffect(() => {\r\n        if(!dataGaji || loadingGaji){\r\n\r\n        }else if(dataGaji.getIndexGaji.length > 0){\r\n            dataGaji.getIndexGaji.map((laporan) =>{\r\n                setGaji(prevItems =>[...prevItems, {\r\n                    id: laporan.id,\r\n                    total: 0,\r\n                }])\r\n            })\r\n        }\r\n    }, [dataGaji])\r\n\r\n    useEffect(() => {\r\n        if(!dataIuran || loadingIuran){\r\n\r\n        }else if(dataIuran.getIndexIuran.length > 0){\r\n            dataIuran.getIndexIuran.map((laporan) =>{\r\n                setIuran(prevItems =>[...prevItems, {\r\n                    id: laporan.id,\r\n                    total: 0,\r\n                }])\r\n            })\r\n        }\r\n    }, [dataIuran])\r\n\r\n    const updateNilai = (nilai, id, counter) =>{\r\n        if(counter === \"Gaji\"){\r\n            setGaji(gaji.map((item) =>\r\n                item.id === id?\r\n                {...item,\r\n                    total: parseInt(nilai.value), }:\r\n                item\r\n            ))\r\n        }\r\n        else{\r\n            console.log(nilai.value);\r\n            setIuran(iuran.map((item) =>\r\n                item.id === id?\r\n                {...item,\r\n                    total: parseInt(nilai.value), }:\r\n                item\r\n            ))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Tambah Kontrak Karyawan</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"col-md-7\">\r\n                    <Form>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Divisi Karyawan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={divisi} \r\n                                onChange={e => \r\n                                    setDivisi(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataDivisiKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Pilih Karyawan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                onChange={e => \r\n                                    setIdKaryawan(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataKaryawanKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Jenis Kontrak</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={jenisKontrak} \r\n                                onChange={e => \r\n                                    setJenisKontrak(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"Harian\">Harian</option>\r\n                                <option value=\"Bulanan\">Bulanan</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Row className=\"justify-content-center text-center\">\r\n                            <div className=\"col-md-4\">\r\n                                <Form.Label>Tanggal Mulai:</Form.Label>\r\n                                <DatePicker\r\n                                    selected={tanggalMulai}\r\n                                    onChange={date => setTanggalMulai(date)}\r\n                                    dateFormat='dd-MM-yyyy'\r\n                                    maxDate={tanggalBerakhir}\r\n                                    showYearDropdown\r\n                                    scrollableMonthYearDropdown\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <Form.Label>Tanggal Berakhir:</Form.Label>\r\n                                <DatePicker\r\n                                    selected={tanggalBerakhir}\r\n                                    onChange={date => setTanggalBerakhir(date)}\r\n                                    dateFormat='dd-MM-yyyy'\r\n                                    showYearDropdown\r\n                                    scrollableMonthYearDropdown\r\n                                />\r\n                            </div>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-6\">\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Iuran</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                dataIuran?.getIndexIuran.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" align=\"center\">{laporan.namaIuran}</TableCell>\r\n                                        <TableCell component=\"th\" align=\"center\">\r\n                                            <Form.Group as={Col} align=\"center\">\r\n                                                <CurrencyFormat \r\n                                                    thousandSeparator={'.'} \r\n                                                    decimalSeparator={','} \r\n                                                    prefix={'Rp '}\r\n                                                    style={{width: '50%'}}\r\n                                                    onValueChange={(value) => {\r\n                                                            updateNilai(value, laporan.id, \"Iuran\")\r\n                                                        }\r\n                                                    } \r\n                                                />\r\n                                            </Form.Group>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-md-6\">\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Gaji</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                dataGaji?.getIndexGaji.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" align=\"center\">{laporan.namaGaji}</TableCell>\r\n                                        <TableCell component=\"th\" align=\"center\">\r\n                                            <Form.Group as={Col} align=\"center\">\r\n                                                <CurrencyFormat \r\n                                                    defaultValue={0}\r\n                                                    thousandSeparator={'.'} \r\n                                                    decimalSeparator={','} \r\n                                                    prefix={'Rp '}\r\n                                                    style={{width: '50%'}}\r\n                                                    onValueChange={(value) => {\r\n                                                            updateNilai(value, laporan.id, \"Gaji\")\r\n                                                        }\r\n                                                    } \r\n                                                />\r\n                                            </Form.Group>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop:10}}>\r\n                <Col className=\"text-center\">\r\n                    <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                        Tambah Kontrak\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\n\r\nconst getDetailKontrak = gql`\r\nquery getDetailKontrak(\r\n    $id: String  \r\n){\r\n    getDetailKontrak(\r\n        id: $id\r\n    ){\r\n        dKontrakGaji{\r\n            total dKontrakIndexGaji{\r\n                namaGaji\r\n            }\r\n        }\r\n        dKontrakIuran{\r\n            total dKontrakIndexIuran{\r\n                namaIuran\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst updateStatusKontrakMaster = gql`\r\n    mutation updateStatusKontrakMaster(\r\n        $status: Boolean\r\n        $id: String \r\n  ) {\r\n    updateStatusKontrakMaster(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailKontrak(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailKontrak,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            console.log(location.state?.laporan)\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetailKontrak= [];\r\n    if(!data || loading){\r\n        dataDetailKontrak.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailKontrak === null){\r\n        dataDetailKontrak.push(<p key={0}>Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getDetailKontrak !== null){\r\n        dataDetailKontrak.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <h3 className=\"text-center\">Detail Gaji:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Gaji</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailKontrak.dKontrakGaji.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.dKontrakIndexGaji.namaGaji}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-md-4\">\r\n                    <h3 className=\"text-center\">Detail Iuran:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Iuran</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailKontrak.dKontrakIuran.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.dKontrakIndexIuran.namaIuran}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    const [updateStatusIndexKu] = useMutation(updateStatusKontrakMaster,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            alert(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/kontrak/master kontrak'\r\n            });\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: dataLaporan.id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Kontrak Karyawan</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Kontrak Karyawan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Karyawan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Jenis Kontrak</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jenisKontrak}</p>\r\n                                    <p className=\"childLeft\">Total Gaji</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Total Iuran</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalIuran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Tanggal Mulai</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalMulai).format('DD-MM-YYYY')}</p>\r\n                                    <p className=\"childLeft\">Tanggal Berakhir</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalBerakhir).format('DD-MM-YYYY')}</p>\r\n                                </div>\r\n                                <p className=\"text-center statusKu\">Status:\r\n                                    {\r\n                                        dataLaporan.status === 0? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Persetujuan</div>: \r\n                                            dataLaporan.status === 1? \r\n                                                <div className=\"badgeStatusAktif\">Di Setujui</div>: \r\n                                                dataLaporan.status === 2? \r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                                    <div className=\"badgeStatusNon\">Di Batalkan</div>\r\n                                    }\r\n                                </p>\r\n                                {\r\n                                    dataLaporan.status !== 0? null:\r\n                                    <div className=\"text-center\">\r\n                                        <Button className=\"text-center\" variant=\"danger\" onClick={() => updateStatus(false)}>\r\n                                            Batalkan Kontrak\r\n                                        </Button>\r\n                                    </div>\r\n                                }\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataDetailKontrak}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst registerPembayaranGaji = gql`\r\n    mutation registerPembayaranGaji(\r\n        $idKaryawan: Int \r\n        $jumlahLembur: Int\r\n  ) {\r\n    registerPembayaranGaji(\r\n        idKaryawan: $idKaryawan\r\n        jumlahLembur: $jumlahLembur\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst getPembayaranGaji = gql`\r\nquery getPembayaranGaji(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getPembayaranGaji(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n    ){\r\n        count rows{\r\n            id totalGaji tanggalPembayaran status createdAt karyawan{nama} keuangan{nama} hrd{nama} kontrak{\r\n                karyawan{nama} jenisKontrak tanggalMulai tanggalBerakhir totalGaji totalIuran\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanPembayaranGaji = gql`\r\nquery getListKaryawanPembayaranGaji(\r\n    $divisi: String \r\n){\r\n    getListKaryawanPembayaranGaji(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\nexport default function MasterPembayaranGaji(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [idKaryawan, setIdKaryawan] = useState(0);\r\n    const [lembur, setLembur] = useState(0);\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                <Alert variant='success'>\r\n                    {success[i]}\r\n                </Alert>\r\n            ))\r\n    }\r\n    if(errors.length !== undefined){\r\n        showError = \r\n            <Alert variant='danger'>\r\n                {errors}\r\n            </Alert>\r\n    }\r\n\r\n    const [registerPembayaranGajiKu] = useMutation(registerPembayaranGaji,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                Sukses: `Suksess Tambah Slip Pembayaran Gaji`,\r\n            })\r\n            refetch()\r\n        }\r\n    })\r\n\r\n    const registerIndex = () =>{\r\n        registerPembayaranGajiKu({variables:{\r\n            idKaryawan: parseInt(idKaryawan),\r\n            jumlahLembur: parseInt(lembur),\r\n        }\r\n        });\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        console.log(laporan)\r\n        history.push({\r\n            pathname: '/kontrak/detail pembayaran gaji',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getPembayaranGaji,{\r\n        variables:{\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    let counter = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n\r\n    }else if(data.getPembayaranGaji.count){\r\n      var jml = Math.ceil(data.getPembayaranGaji.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(data.getPembayaranGaji.rows.length === 0){\r\n        console.log(data.getPembayaranGaji.rows.length)\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Slip Pembayaran Gaji</p>)\r\n    }else if(data.getPembayaranGaji.rows.length > 0 && !counter){\r\n        console.log(data.getPembayaranGaji.rows.length)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Masa Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Total Gaji</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Pembayaran</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getPembayaranGaji.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.kontrak.karyawan?.nama}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.kontrak.jenisKontrak}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            dayjs(laporan.kontrak.tanggalMulai).format(\"DD-MM-YYYY\")\r\n                                        } - {\r\n                                            dayjs(laporan.kontrak.tanggalBerakhir).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.tanggalPembayaran.toString() === \"Invalid Date\"? \r\n                                                \"-\": \r\n                                                dayjs(laporan.tanggalPembayaran).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 0?\r\n                                                <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</p>:\r\n                                                laporan.status === 1?\r\n                                                    <p key={0} className=\"badgeStatusWaiting\">Menunggu Pembayaran</p>:\r\n                                                    laporan.status === 2?\r\n                                                    <p key={0} className=\"badgeStatusAktif\">Selesai</p>:\r\n                                                        laporan.status === 3?\r\n                                                        <p key={0} className=\"badgeStatusNon\">Dibatalkan</p>:\r\n                                                        <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi Penerimaan</p>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getKaryawanKu({\r\n            variables: {\r\n                divisi: divisi\r\n            }\r\n        })\r\n    }, [divisi])\r\n    \r\n    const [getKaryawanKu,{ \r\n        loading: loadingKaryawan,\r\n        data: dataKaryawan \r\n    }] = useLazyQuery(getListKaryawanPembayaranGaji);\r\n\r\n    let dataKaryawanKu = [];\r\n    let counterKaryawan = false;\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanPembayaranGaji.length === 0){\r\n        \r\n    }else if(dataKaryawan.getListKaryawanPembayaranGaji.length > 0 && !counterKaryawan){\r\n        console.log(dataKaryawan.getListKaryawanPembayaranGaji);\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanPembayaranGaji.map((karyawan,index) =>(\r\n            <option key={index} value={karyawan.id}>\r\n                {karyawan.nama}\r\n            </option>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Pembayaran Gaji</h1></Col>\r\n                </Row>\r\n                <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                    <CCard className=\"col-md-5\">\r\n                        <CCardBody className=\"text-center\">\r\n                            <Form >\r\n                                {showError}\r\n                                {showUser}\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Divisi Karyawan</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        value={divisi} \r\n                                        onChange={e => \r\n                                            setDivisi(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        {dataDivisiKu}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Pilih Karyawan</Form.Label>\r\n                                    <Form.Control \r\n                                        as=\"select\" \r\n                                        onChange={e => \r\n                                            setIdKaryawan(e.target.value)\r\n                                        }\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        {dataKaryawanKu}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Jumlah Lembur</Form.Label>\r\n                                    <Form.Control \r\n                                        type=\"text\" \r\n                                        name=\"nama\"\r\n                                        value= {lembur}\r\n                                        style={{width: '20%'}}\r\n                                        onChange={e => \r\n                                            setLembur(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            <div className='text-center'>\r\n                                <Button variant=\"primary\" onClick={() => registerIndex()}>\r\n                                    Generate Slip Gaji\r\n                                </Button>\r\n                            </div>\r\n                            </Form>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"col-md-4\">\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Divisi Karyawan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={divisiKontrak} \r\n                                onChange={e => \r\n                                    setDivisiKontrak(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataDivisiKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Karyawan: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={karyawanKontrak} \r\n                                onChange={e => \r\n                                    setKaryawanKontrak(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataKaryawanKontrakKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Status Laporan: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={status} \r\n                                onChange={e => \r\n                                    setStatus(e.target.value)\r\n                                }\r\n                            >\r\n                            <option value=\"-1\">Semuanya</option>\r\n                            <option value=\"0\">Menunggu Verifikasi HRD</option>\r\n                            <option value=\"1\">Menunggu Pembayaran Gaji</option>\r\n                            <option value=\"2\">Selesai</option>\r\n                            <option value=\"3\">Dibatalkan</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Bulan</Form.Label>\r\n                            <DatePicker\r\n                                selected={selectedDateAwal}\r\n                                onChange={date => setSelectedDateAwal(date)}\r\n                                dateFormat='MM-yyyy'\r\n                                maxDate={new Date()}\r\n                                showMonthYearPicker\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex flex-row-reverse\">\r\n                    <Col className=\"col-md-4\">\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={orderBy} \r\n                                onChange={e => \r\n                                    setOrderBy(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Slip Terbaru\">Slip Terbaru</option>\r\n                                <option value=\"Slip Terlama\">Slip Terlama</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {dataKu}\r\n                        <div className=\"pageContainerKu\">\r\n                            {pageKu}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst getDetailPembayaranGaji = gql`\r\nquery getDetailPembayaranGaji(\r\n    $id: String  \r\n){\r\n    getDetailPembayaranGaji(\r\n        id: $id\r\n    ){\r\n        nama total pengurangan keterangan\r\n  }\r\n}\r\n`;\r\n\r\nconst updateStatusPembayaranGaji = gql`\r\n    mutation updateStatusPembayaranGaji(\r\n        $status: Boolean\r\n        $id: String \r\n  ) {\r\n    updateStatusPembayaranGaji(\r\n        status: $status\r\n        id: $id\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailKontrak(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailPembayaranGaji,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            console.log(location.state?.laporan)\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetailKontrak= [];\r\n    if(data){\r\n        console.log(\"data\");\r\n        console.log(data);\r\n    }\r\n    if(!data || loading){\r\n        dataDetailKontrak.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailPembayaranGaji.length === 0){\r\n        dataDetailKontrak.push(<p key={0}>Tidak ada Slip Gaji Karyawan</p>)\r\n    }else if(data.getDetailPembayaranGaji.length > 0 ){\r\n        dataDetailKontrak.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    <h3 className=\"text-center\">Detail Slip:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailPembayaranGaji.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nama}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <div className={laporan.pengurangan === true? \"badgeStatusNon\": \"badgeStatusAktif\"}>\r\n                                                {laporan.pengurangan === true? \"-\":null} <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    const [updateStatusIndexKu] = useMutation(updateStatusPembayaranGaji,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            alert(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        onCompleted(data){\r\n            history.push({\r\n                pathname: '/kontrak/master pembayaran gaji'\r\n            });\r\n        }\r\n    })\r\n\r\n    const updateStatus = (status) =>{\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: dataLaporan.id,\r\n                status: status\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Pembayaran Gaji</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Slip Gaji</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Karyawan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.kontrak?.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Jenis Kontrak</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.kontrak?.jenisKontrak}</p>\r\n                                    <p className=\"childLeft\">Masa Kontrak\r\n                                    </p>\r\n                                        <p className=\"childRight\">: {\r\n                                            dayjs(dataLaporan.kontrak?.tanggalMulai).format(\"DD-MM-YYYY\")\r\n                                        } - {\r\n                                            dayjs(dataLaporan.kontrak?.tanggalBerakhir).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </p>\r\n                                    <p className=\"childLeft\">Total Gaji</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Tanggal Pembayaran</p>\r\n                                        <p className=\"childRight\">: {\r\n                                                dataLaporan.tanggalPembayaran?.toString() === \"Invalid Date\"? \r\n                                                    \"-\": \r\n                                                    dayjs(dataLaporan.tanggalPembayaran).format(\"DD-MM-YYYY\")\r\n                                            }\r\n                                        </p>\r\n                                    <p className=\"childLeft\">HRD</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.hrd?.nama}</p>\r\n                                    <p className=\"childLeft\">Keuangan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.keuangan?.nama}</p>\r\n                                </div>\r\n                                <p className=\"text-center statusKu\">Status:\r\n                                    {\r\n                                        dataLaporan.status === 0?\r\n                                            <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</p>:\r\n                                            dataLaporan.status === 1?\r\n                                                <p key={0} className=\"badgeStatusWaiting\">Menunggu Pembayaran</p>:\r\n                                                    dataLaporan.status === 2?\r\n                                                    <p key={0} className=\"badgeStatusAktif\">Selesai</p>:\r\n                                                    dataLaporan.status === 3?\r\n                                                        <p key={0} className=\"badgeStatusNon\">Dibatalkan</p>:\r\n                                                        <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi Penerimaan</p>\r\n                                    }\r\n                                </p>\r\n                                {\r\n                                    dataLaporan.status !== 0? null:\r\n                                        <div className='text-center'>\r\n                                            <div className=\"buttonsSideBySide\">\r\n                                                <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => updateStatus(true)}>\r\n                                                    Setujui\r\n                                                </Button>\r\n                                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => updateStatus(false)}>\r\n                                                    Batalkan\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataDetailKontrak}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { CImage } from '@coreui/react';\r\n\r\n\r\nconst getLaporanMasterProduksiPipa = gql`\r\nquery getLaporanMasterProduksiPipa(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterProduksiPipa(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id shift tipeMesin warna ukuran dis pin hasilProduksi jumlahBahan BS totalBahan createdAt\r\n            karyawan{\r\n                nama\r\n            }ketua{\r\n                nama\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryProduksiPipa = gql`\r\nquery getSummaryProduksiPipa{\r\n    getSummaryProduksiPipa{\r\n        jumlahProduksi jumlahBanding tidakCapaiTarget karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function ProduksiPipa(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Produksi Pipa\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryProduksiPipa);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterProduksiPipa,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail produksi pipa',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterProduksiPipa.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterProduksiPipa.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterProduksiPipa.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterProduksiPipa.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterProduksiPipa.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Shift</TableCell>\r\n                            <TableCell align=\"center\">Tipe Mesin</TableCell>\r\n                            <TableCell align=\"center\">Ukuran</TableCell>\r\n                            <TableCell align=\"center\">Dis</TableCell>\r\n                            <TableCell align=\"center\">Pin</TableCell>\r\n                            <TableCell align=\"center\">Hasil Produksi</TableCell>\r\n                            <TableCell align=\"center\">BS</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterProduksiPipa.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.createdAt).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.shift}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.tipeMesin}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.ukuran}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.dis}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pin}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.hasilProduksi}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.BS}</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Produksi Pipa</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Banding: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Pernah Banding</option>\r\n                            <option value=\"2\">Tidak Pernah Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Produksi</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                    <TableCell align=\"center\">Tidak Capai Target</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryProduksiPipa.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahProduksi}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.tidakCapaiTarget}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { CImage } from '@coreui/react';\r\n\r\n\r\nconst getLaporanMasterMixerPipa = gql`\r\nquery getLaporanMasterMixerPipa(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterMixerPipa(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id tipeMesin totalHasil targetMixer status pernahBanding createdAt foto bahanDigunakan foto keterangan keteranganBanding\r\n            karyawan{\r\n                nama\r\n            }ketua{\r\n                nama\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryMixerPipa = gql`\r\nquery getSummaryMixerPipa{\r\n    getSummaryMixerPipa{\r\n        jumlahProduksi jumlahBanding tidakCapaiTarget karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function MixerPipa(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const [dataDetail, setDataDetail] = useState([]);\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Mixer Pipa\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryMixerPipa);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterMixerPipa,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        setDataDetail(laporan);\r\n        setVisible(true);\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterMixerPipa.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterMixerPipa.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterMixerPipa.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterMixerPipa.rows.length > 0){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Tipe Mesin</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Total Hasil</TableCell>\r\n                            <TableCell align=\"center\">Target</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Banding</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterMixerPipa.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.tipeMesin}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.createdAt).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.totalHasil}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.targetMixer}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pernahBanding === true? \r\n                                        <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                            <div className=\"badgeStatusAktif\">Aman</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Mixer Pipa</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Banding: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Pernah Banding</option>\r\n                            <option value=\"2\">Tidak Pernah Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visible} onHide={() => setVisible(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Detail Laporan</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"parent\">\r\n                            <p className=\"childLeft\">Nama Pelapor</p>\r\n                                <p className=\"childRight\">: {dataDetail.karyawan?.nama}</p>\r\n                            <p className=\"childLeft\">Nama Ketua</p>\r\n                                <p className=\"childRight\">: {dataDetail.ketua?.nama}</p>\r\n                            <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                <p className=\"childRight\">: {dayjs(dataDetail.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                            <p className=\"childLeft\">Tipe Mesin</p>\r\n                                <p className=\"childRight\">: {dataDetail.tipeMesin}</p>\r\n                            <p className=\"childLeft\">Jumlah Bahan</p>\r\n                                <p className=\"childRight\">: {dataDetail.bahanDigunakan}</p>\r\n                            <p className=\"childLeft\">Target Hasil</p>\r\n                                <p className=\"childRight\">: {dataDetail.targetMixer}</p>\r\n                            <p className=\"childLeft\">Total Hasil</p>\r\n                                <p className=\"childRight\">: {dataDetail.totalHasil}</p>\r\n                            <p className=\"childLeft\">Keterangan</p>\r\n                                <p className=\"childRight\">: {dataDetail.keterangan}</p>\r\n                            {\r\n                                dataDetail.pernahBanding === false? \r\n                                    null:\r\n                                    <>\r\n                                        <p className=\"childLeft\">Keterangan Banding</p>\r\n                                            <p className=\"childRight\">: {dataDetail.keteranganBanding}</p>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"tagPInRow\">\r\n                            <p className=\"tagPTextLeft\">Status: \r\n                                {\r\n                                    dataDetail.status === 1? \r\n                                    <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                    dataDetail.status === 2? \r\n                                        <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>\r\n                                }\r\n                            </p>\r\n                            <p className=\"tagPTextLeft\">Status Banding:\r\n                                {dataDetail.pernahBanding === true? \r\n                                    <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                        <div className=\"badgeStatusAktif\">Aman</div>}\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"subJudul\">Dokumentasi: </p>\r\n                        <CImage src={!dataDetail.foto ? \"/default.png\": dataDetail.foto} alt=\"\" id=\"img\" className=\"img imageCenter\" width=\"250\" height=\"200\"/>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisible(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Produksi</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                    <TableCell align=\"center\">Tidak Capai Target</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryMixerPipa.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahProduksi}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.tidakCapaiTarget}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n\r\nconst getLaporanMasterQualityControl = gql`\r\nquery getLaporanMasterQualityControl(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterQualityControl(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id shift tipeMesin merk panjang ketebalan diameterDalam diameterLuar\r\n            totalReject totalProduksi jumlahBanding createdAt \r\n            karyawan{\r\n                nama \r\n            }ketua{\r\n                nama\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryQualityControlPipa = gql`\r\nquery getSummaryQualityControlPipa{\r\n    getSummaryQualityControlPipa{\r\n        jumlahProduksi jumlahBanding tidakCapaiTarget karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function QualityControl(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Quality Control Pipa\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryQualityControlPipa);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterQualityControl,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail quality control pipa',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterQualityControl.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterQualityControl.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterQualityControl.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterQualityControl.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterQualityControl.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Shift</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Merk</TableCell>\r\n                            <TableCell align=\"center\">Total Reject</TableCell>\r\n                            <TableCell align=\"center\">Total Produksi</TableCell>\r\n                            <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterQualityControl.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.shift}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.createdAt).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.merk}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.totalReject}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.totalProduksi}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Quality Control</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Produksi</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Reject</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryQualityControlPipa.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahProduksi}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.tidakCapaiTarget}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n\r\nconst getLaporanMasterStokistPipa = gql`\r\nquery getLaporanMasterStokistPipa(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterStokistPipa(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id shift foto keterangan status pernahBanding keteranganBanding jumlahBaik jumlahBS createdAt\r\n            karyawan{\r\n                nama \r\n            }ketua{\r\n                nama\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryStokistPipa = gql`\r\nquery getSummaryStokistPipa{\r\n    getSummaryStokistPipa{\r\n        jumlahBanding karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function QualityControl(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Stokist Pipa\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryStokistPipa);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterStokistPipa,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail stokist pipa',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterStokistPipa.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterStokistPipa.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterStokistPipa.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterStokistPipa.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterStokistPipa.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Shift</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Jumlah Baik</TableCell>\r\n                            <TableCell align=\"center\">Jumlah BS</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Banding</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterStokistPipa.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.shift}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jumlahBaik}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jumlahBS}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pernahBanding === true? \r\n                                        <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                            <div className=\"badgeStatusAktif\">Aman</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Stokist Pipa</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Banding: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Pernah Banding</option>\r\n                            <option value=\"2\">Tidak Pernah Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryStokistPipa.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n\r\nconst getLaporanMasterArmada = gql`\r\nquery getLaporanMasterArmada(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterArmada(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id idNota keterangan penerima foto status pengantaran kembali createdAt\r\n            armada{nama} stokist{nama} supir{nama} kernet{nama}\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryArmada = gql`\r\nquery getSummaryArmada{\r\n    getSummaryArmada{\r\n        jumlahPengantaran supir{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function ProduksiPipa(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Armada\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryArmada);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterArmada,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail armada',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterArmada.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterArmada.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterArmada.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterArmada.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterArmada.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nota</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Nama Armada</TableCell>\r\n                            <TableCell align=\"center\">Nama Stokist</TableCell>\r\n                            <TableCell align=\"center\">Nama Supir</TableCell>\r\n                            <TableCell align=\"center\">Penerima</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterArmada.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.idNota}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.armada.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.stokist?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.supir.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.penerima}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusWaiting\">Terverifikasi Stoksit</div>:\r\n                                                laporan.status === 3? \r\n                                                <div className=\"badgeStatusWaiting\">Pengantaran</div>:\r\n                                                    <div className=\"badgeStatusAktif\">Selesai</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Armada</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Supir Yang Mengantar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi Stokist</option>\r\n                            <option value=\"3\">Pengantaran</option>\r\n                            <option value=\"4\">Sudah Selesai</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Pengantaran</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryArmada.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.supir.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahPengantaran}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { CImage } from '@coreui/react';\r\n\r\n\r\nconst getLaporanMasterCatTegel = gql`\r\nquery getLaporanMasterCatTegel(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $merk: String \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterCatTegel(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        merk: $merk\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id merkProduk warna jumlahProduk satuanProduk foto keterangan khusus createdAt hLaporanCatTegel{\r\n                idPelapor jenisProduk karyawan{\r\n                    nama\r\n                }\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListMerkCatTegel = gql`\r\nquery getListMerkCatTegel{\r\n    getListMerkCatTegel{\r\n        merkProduk\r\n  }\r\n}\r\n`;\r\n\r\nexport default function CatTegel(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [merk, setMerk] = useState(\"\");\r\n\r\n    const { \r\n        loading: loadingMerk, \r\n        data: dataMerk, \r\n        refetch: refetchMerk\r\n    } = useQuery(getListMerkCatTegel);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterCatTegel,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            merk: merk,\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail cat tegel',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterCatTegel.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterCatTegel.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterCatTegel.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterCatTegel.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterCatTegel.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Produk</TableCell>\r\n                            <TableCell align=\"center\">Merk</TableCell>\r\n                            <TableCell align=\"center\">Warna</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterCatTegel.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.hLaporanCatTegel.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.hLaporanCatTegel.jenisProduk}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.merkProduk}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.warna}</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataMerkKu = [];\r\n    if(!dataMerk || loadingMerk){\r\n\r\n    }else if(dataMerk.getListMerkCatTegel.length === 0){\r\n\r\n    }else if(dataMerk.getListMerkCatTegel.length > 0){\r\n        dataMerkKu.push(dataMerk.getListMerkCatTegel.map((element, index) => (\r\n            <option key={index} value={element.merkProduk} >{element.merkProduk}</option>\r\n        )))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchMerk()\r\n                refetchLaporan()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Cat Tegel</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Merk: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={merk} \r\n                            onChange={e => \r\n                                setMerk(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataMerkKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { CImage } from '@coreui/react';\r\n\r\n\r\nconst getLaporanMasterHollow = gql`\r\nquery getLaporanMasterHollow(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterHollow(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id ukuran ketebalan berat noCoil jumlah BS keterangan foto status pernahBanding keteranganBanding createdAt\r\n            hLaporanHollow{\r\n                idPelapor idKetua totalBerat totalJumlah totalBS karyawan{nama} ketua{nama}\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummaryHollow = gql`\r\nquery getSummaryHollow{\r\n    getSummaryHollow{\r\n        jumlahProduksi jumlahBanding jumlahBS karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Hollow(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const [dataDetail, setDataDetail] = useState([]);\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Spandek dan Bajaringan\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummaryHollow);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterHollow,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        setDataDetail(laporan)\r\n        setVisible(true);\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterHollow.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterHollow.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterHollow.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterHollow.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterHollow.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Ukuran</TableCell>\r\n                            <TableCell align=\"center\">Ketebalan</TableCell>\r\n                            <TableCell align=\"center\">Jumlah</TableCell>\r\n                            <TableCell align=\"center\">BS</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Banding</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterHollow.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.hLaporanHollow.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.ukuran}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.ketebalan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jumlah}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.BS}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pernahBanding === true? \r\n                                        <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                            <div className=\"badgeStatusAktif\">Aman</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Hollow</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Banding: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Pernah Banding</option>\r\n                            <option value=\"2\">Tidak Pernah Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visible} onHide={() => setVisible(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Detail Laporan</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"parent\">\r\n                            <p className=\"childLeft\">Nama Pelapor</p>\r\n                                <p className=\"childRight\">: {dataDetail.hLaporanHollow?.karyawan.nama}</p>\r\n                            <p className=\"childLeft\">Nama Ketua</p>\r\n                                <p className=\"childRight\">: {dataDetail.hLaporanHollow?.ketua.nama}</p>\r\n                            <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                <p className=\"childRight\">: {dayjs(dataDetail.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                            <p className=\"childLeft\">Ukuran</p>\r\n                                <p className=\"childRight\">: {dataDetail.ukuran}</p>\r\n                            <p className=\"childLeft\">Ketebalan</p>\r\n                                <p className=\"childRight\">: {dataDetail.ketebalan}</p>\r\n                            <p className=\"childLeft\">Berat</p>\r\n                                <p className=\"childRight\">: {dataDetail.berat}</p>\r\n                            <p className=\"childLeft\">Nomor Coil</p>\r\n                                <p className=\"childRight\">: {dataDetail.noCoil}</p>\r\n                            <p className=\"childLeft\">Jumlah</p>\r\n                                <p className=\"childRight\">: {dataDetail.jumlah}</p>\r\n                            <p className=\"childLeft\">BS</p>\r\n                                <p className=\"childRight\">: {dataDetail.BS}</p>\r\n                            <p className=\"childLeft\">Keterangan</p>\r\n                                <p className=\"childRight\">: {dataDetail.keterangan}</p>\r\n                            {\r\n                                dataDetail.pernahBanding === false? \r\n                                    null:\r\n                                    <>\r\n                                        <p className=\"childLeft\">Keterangan Banding</p>\r\n                                            <p className=\"childRight\">: {dataDetail.keteranganBanding}</p>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"tagPInRow\">\r\n                            <p className=\"tagPTextLeft\">Status: \r\n                                {\r\n                                    dataDetail.status === 1? \r\n                                    <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                    dataDetail.status === 2? \r\n                                        <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>\r\n                                }\r\n                            </p>\r\n                            <p className=\"tagPTextLeft\">Status Banding:\r\n                                {dataDetail.pernahBanding === true? \r\n                                    <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                        <div className=\"badgeStatusAktif\">Aman</div>}\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"subJudul\">Dokumentasi: </p>\r\n                        <CImage src={!dataDetail.foto ? \"/default.png\": dataDetail.foto} alt=\"\" id=\"img\" className=\"img imageCenter\" width=\"250\" height=\"200\"/>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisible(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Produksi</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah BS</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummaryHollow.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahProduksi}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBS}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { CImage } from '@coreui/react';\r\n\r\n\r\nconst getLaporanMasterSpandek = gql`\r\nquery getLaporanMasterSpandek(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterSpandek(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id namaPemesan warna ukuran berat panjang BS noCoil keterangan foto status pernahBanding keteranganBanding createdAt \r\n            hLaporanSpandek{\r\n                jenisProduk totalPanjang totalBS totalBerat karyawan{nama} ketua{nama}\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummarySpandek = gql`\r\nquery getSummarySpandek{\r\n    getSummarySpandek{\r\n        jumlahProduksiFloat jumlahBanding jumlahBSFloat karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Spandek(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const [dataDetail, setDataDetail] = useState([]);\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Spandek dan Bajaringan\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummarySpandek);\r\n\r\n    if(dataSummary){\r\n        console.log(dataSummary)\r\n    }\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterSpandek,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        setDataDetail(laporan)\r\n        setVisible(true);\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterSpandek.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterSpandek.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterSpandek.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterSpandek.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterSpandek.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Produk</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Pemesan</TableCell>\r\n                            <TableCell align=\"center\">Ukuran</TableCell>\r\n                            <TableCell align=\"center\">Panjang</TableCell>\r\n                            <TableCell align=\"center\">BS</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Banding</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterSpandek.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.hLaporanSpandek.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.hLaporanSpandek.jenisProduk}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.namaPemesan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.ukuran}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.panjang}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.BS}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                            <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pernahBanding === true? \r\n                                        <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                            <div className=\"badgeStatusAktif\">Aman</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Spandek</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                            <option value=\"3\">Proses Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Banding: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Pernah Banding</option>\r\n                            <option value=\"2\">Tidak Pernah Banding</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visible} onHide={() => setVisible(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Detail Laporan</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"parent\">\r\n                            <p className=\"childLeft\">Nama Pelapor</p>\r\n                                <p className=\"childRight\">: {dataDetail.hLaporanSpandek?.karyawan.nama}</p>\r\n                            <p className=\"childLeft\">Nama Ketua</p>\r\n                                <p className=\"childRight\">: {dataDetail.hLaporanSpandek?.ketua.nama}</p>\r\n                            <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                <p className=\"childRight\">: {dayjs(dataDetail.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                            <p className=\"childLeft\">Pemesan</p>\r\n                                <p className=\"childRight\">: {dataDetail.namaPemesan}</p>\r\n                            <p className=\"childLeft\">Ukuran</p>\r\n                                <p className=\"childRight\">: {dataDetail.ukuran}</p>\r\n                            <p className=\"childLeft\">Berat</p>\r\n                                <p className=\"childRight\">: {dataDetail.berat}</p>\r\n                            <p className=\"childLeft\">Nomor Coil</p>\r\n                                <p className=\"childRight\">: {dataDetail.noCoil}</p>\r\n                            <p className=\"childLeft\">Panjang</p>\r\n                                <p className=\"childRight\">: {dataDetail.panjang}</p>\r\n                            <p className=\"childLeft\">BS</p>\r\n                                <p className=\"childRight\">: {dataDetail.BS}</p>\r\n                            <p className=\"childLeft\">Keterangan</p>\r\n                                <p className=\"childRight\">: {dataDetail.keterangan}</p>\r\n                            {\r\n                                dataDetail.pernahBanding === false? \r\n                                    null:\r\n                                    <>\r\n                                        <p className=\"childLeft\">Keterangan Banding</p>\r\n                                            <p className=\"childRight\">: {dataDetail.keteranganBanding}</p>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"tagPInRow\">\r\n                            <p className=\"tagPTextLeft\">Status: \r\n                                {\r\n                                    dataDetail.status === 1? \r\n                                    <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                    dataDetail.status === 2? \r\n                                        <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                            <div className=\"badgeStatusNon\">Proses Banding</div>\r\n                                }\r\n                            </p>\r\n                            <p className=\"tagPTextLeft\">Status Banding:\r\n                                {dataDetail.pernahBanding === true? \r\n                                    <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                        <div className=\"badgeStatusAktif\">Aman</div>}\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"subJudul\">Dokumentasi: </p>\r\n                        <CImage src={!dataDetail.foto ? \"/default.png\": dataDetail.foto} alt=\"\" id=\"img\" className=\"img imageCenter\" width=\"250\" height=\"200\"/>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisible(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Produksi</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah BS</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Banding</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {console.log(dataSummary)}\r\n                                {\r\n                                    dataSummary?.getSummarySpandek.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(\"qwe\")}\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{Number((laporan.jumlahProduksiFloat).toFixed(2))}</TableCell>\r\n                                            <TableCell align=\"center\">{Number((laporan.jumlahBSFloat).toFixed(2))}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n\r\nconst getLaporanMasterSekuriti = gql`\r\nquery getLaporanMasterSekuriti(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $gudang: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterSekuriti(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        gudang: $gudang\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id tanggalLaporan shift gudang{namaGudang} penyerah{nama} ketua{nama} penerima{nama}\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getGudang = gql`\r\nquery getGudang{\r\n    getGudang{\r\n        id namaGudang\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Sekuriti(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [gudang, setGudang] = useState(\"\");\r\n\r\n    const { \r\n        loading: loadingGudang, \r\n        data: dataGudang, \r\n        refetch: refetchGudang \r\n    } = useQuery(getGudang);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterSekuriti,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            gudang: parseInt(gudang),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail sekuriti',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterSekuriti.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterSekuriti.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterSekuriti.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterSekuriti.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterSekuriti.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Gudang</TableCell>\r\n                            <TableCell align=\"center\">Shift</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Ketua</TableCell>\r\n                            <TableCell align=\"center\">Penyerah</TableCell>\r\n                            <TableCell align=\"center\">Penerima</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterSekuriti.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.gudang.namaGudang}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.shift}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.tanggalLaporan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.ketua?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.penyerah?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.penerima?.nama}</TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataGudangKu = [];\r\n    if(!dataGudang || loadingGudang){\r\n\r\n    }else if(dataGudang.getGudang.length === 0){\r\n\r\n    }else if(dataGudang.getGudang.length > 0){\r\n        dataGudangKu.push(dataGudang.getGudang.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.namaGudang}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchGudang()\r\n                refetchLaporan()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Gudang</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Gudang: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={gudang} \r\n                            onChange={e => \r\n                                setGudang(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataGudangKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Modal} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n\r\nconst getLaporanMasterSales = gql`\r\nquery getLaporanMasterSales(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n    $banding: Int \r\n){\r\n    getLaporanMasterSales(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n        banding: $banding\r\n    ){\r\n        count rows{\r\n            id status laporanKejadian keteranganKejadian feedbackKaryawan createdAt\r\n            karyawan{nama} ketua{nama}\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanLaporan = gql`\r\nquery getListKaryawanLaporan(\r\n    $divisi: String \r\n){\r\n    getListKaryawanLaporan(\r\n        divisi: $divisi\r\n    ){\r\n        id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getSummarySales = gql`\r\nquery getSummarySales{\r\n    getSummarySales{\r\n        jumlahProduksi jumlahBanding karyawan{\r\n            nama\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function Sales(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [banding, setBanding] = useState(\"0\");\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [visibleSummary, setVisibleSummary] = useState(false);\r\n\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan, \r\n        refetch: refetchKaryawan \r\n    } = useQuery(getListKaryawanLaporan,{\r\n        variables: {\r\n            divisi: \"Sales\"\r\n        }\r\n    });\r\n\r\n    const { \r\n        loading: loadingSummary, \r\n        data: dataSummary, \r\n        refetch: refetchSummary\r\n    } = useQuery(getSummarySales);\r\n\r\n    const { \r\n        loading: loadingLaporan, \r\n        data: dataLaporan, \r\n        refetch: refetchLaporan \r\n    } = useQuery(getLaporanMasterSales,{\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawan),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n            banding: parseInt(banding),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [orderBy])\r\n\r\n    useEffect(() => {\r\n        refetchLaporan()\r\n    }, [page])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/laporan/detail sales',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(dataLaporan){\r\n        console.log(\"asd\")\r\n        console.log(dataLaporan);\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        pageKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading...</p>)\r\n        {console.log(loadingLaporan)}\r\n    }else if(dataLaporan.getLaporanMasterSales.count){\r\n      var jml = Math.ceil(dataLaporan.getLaporanMasterSales.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!dataLaporan || loadingLaporan){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(dataLaporan.getLaporanMasterSales.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Laporan Karyawan</p>)\r\n    }else if(dataLaporan.getLaporanMasterSales.rows.length > 0){\r\n        console.log(dataLaporan.getLaporanMasterSales.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Laporan</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Laporan Kejadian</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataLaporan.getLaporanMasterSales.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.createdAt}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === 1? \r\n                                        <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            <div className=\"badgeStatusAktif\">Terverifikasi</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.laporanKejadian === true? \r\n                                        <div className=\"badgeStatusNon\">Ada</div>:\r\n                                            <div className=\"badgeStatusAktif\">Tidak Ada</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    let dataKaryawanKu = [];\r\n    if(!dataKaryawan || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawanLaporan.length > 0){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawanLaporan.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama}</option>\r\n        )))\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n                refetchLaporan()\r\n                refetchSummary()\r\n                console.log('Refreshed!');\r\n            }\r\n        }\r\n    }, []) \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Sales</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawan} \r\n                            onChange={e => \r\n                                setKaryawan(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\">Semuanya</option>\r\n                            {dataKaryawanKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Menunggu Verifikasi</option>\r\n                            <option value=\"2\">Terverifikasi</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan Kejadian: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={banding} \r\n                            onChange={e => \r\n                                setBanding(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"0\">Semuanya</option>\r\n                            <option value=\"1\">Ada Laporan Kejadian</option>\r\n                            <option value=\"2\">Tidak Ada Laporan Kejadian</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" onClick={() => setVisibleSummary(true)}>Lihat Summary</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Laporan Terbaru\">Laporan Terbaru</option>\r\n                            <option value=\"Laporan Terlama\">Laporan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={visibleSummary} onHide={() => setVisibleSummary(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Summary</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Kunjungan</TableCell>\r\n                                    <TableCell align=\"center\">Jumlah Laporan Kejadian</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataSummary?.getSummarySales.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            {console.log(laporan)}\r\n                                            <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahProduksi}</TableCell>\r\n                                            <TableCell align=\"center\">{laporan.jumlahBanding}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisibleSummary(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanSales = gql`\r\nquery getDLaporanSales(\r\n    $id: String  \r\n){\r\n    getDLaporanSales(\r\n        id: $id\r\n    ){\r\n        namaToko foto keterangan jamMasuk jamKeluar createdAt\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailSales(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDLaporanSales,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanSales === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanSales !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Dokumentasi</TableCell>\r\n                                <TableCell align=\"center\">Nama Toko</TableCell>\r\n                                <TableCell align=\"center\">Jam Masuk</TableCell>\r\n                                <TableCell align=\"center\">Jam Keluar</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanSales.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <CImage src={!laporan.foto ? \"/default.png\": laporan.foto} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaToko}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamMasuk}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamKeluar}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Sales</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Pelapor</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Nama Ketua</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                                    {\r\n                                        dataLaporan.laporanKejadian === false? \r\n                                            null:\r\n                                            <>\r\n                                                <p className=\"childLeft\">Keterangan Kejadian</p>\r\n                                                    <p className=\"childRight\">: {dataLaporan.keteranganKejadian}</p>\r\n                                                <p className=\"childLeft\">Feedback Karyawan</p>\r\n                                                    <p className=\"childRight\">: {dataLaporan.feedbackKaryawan}</p>\r\n                                            </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"tagPInRow\">\r\n                                    <p className=\"tagPTextLeft\">Status: \r\n                                        {\r\n                                            dataLaporan.status === 1? \r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                                    <div className=\"badgeStatusAktif\">Terverifikasi</div>\r\n                                        }\r\n                                    </p>\r\n                                    <p className=\"tagPTextLeft\">Laporan Kejadian:\r\n                                        {dataLaporan.laporanKejadian === true? \r\n                                            <div className=\"badgeStatusNon\">Ada</div>:\r\n                                                <div className=\"badgeStatusAktif\">Tidak Ada</div>}\r\n                                    </p>\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanSekuriti = gql`\r\nquery getDLaporanSekuriti(\r\n  $id: String \r\n){\r\n    getDLaporanSekuriti(\r\n    id: $id\r\n  ){\r\n    dLaporanDinasSekuriti{\r\n        namaPelapor jamMasuk jamKeluar noHT keterangan\r\n    } dLaporanInventarisSekuriti{\r\n        namaPelapor namaBarang jumlahBarang baik keterangan\r\n    } dLaporanMutasiSekuriti{\r\n        namaPelapor jamLaporan uraian foto keterangan\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailSekuriti(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDLaporanSekuriti,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanSekuriti === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanSekuriti !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <h3 className=\"subJudul\">Detail Laporan Absensi Dinas:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama</TableCell>\r\n                                <TableCell align=\"center\">Jam Masuk</TableCell>\r\n                                <TableCell align=\"center\">Jam Keluar</TableCell>\r\n                                <TableCell align=\"center\">Nomor HT</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanSekuriti.dLaporanDinasSekuriti.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaPelapor}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamMasuk}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamKeluar}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.noHT}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-md-6\">\r\n                    <h3 className=\"subJudul\">Detail Laporan Inventaris:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                <TableCell align=\"center\">Nama Barang</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Barang</TableCell>\r\n                                <TableCell align=\"center\">Kondisi</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanSekuriti.dLaporanInventarisSekuriti.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaPelapor}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jumlahBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.kondisi === true? \"Baik\": \"Tidak Baik\"}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan Mutasi:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Jam Laporan</TableCell>\r\n                                <TableCell align=\"center\">Nama Pelapor</TableCell>\r\n                                <TableCell align=\"center\">Uraian</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                                <TableCell align=\"center\">Foto</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanSekuriti.dLaporanMutasiSekuriti.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamLaporan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaPelapor}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.uraian}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <CImage src={!laporan.foto ? \"/default.png\": laporan.foto} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Sales</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text className=\"parent\">\r\n                                <p className=\"childLeft\">Gudang</p>\r\n                                    <p className=\"childRight\">: {dataLaporan.gudang?.namaGudang}</p>\r\n                                <p className=\"childLeft\">Shift</p>\r\n                                    <p className=\"childRight\">: {dataLaporan.shift}</p>\r\n                                <p className=\"childLeft\">Nama Ketua</p>\r\n                                    <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                                <p className=\"childLeft\">Nama Penyerah</p>\r\n                                    <p className=\"childRight\">: {dataLaporan.penyerah?.nama}</p>\r\n                                <p className=\"childLeft\">Nama Penerima</p>\r\n                                    <p className=\"childRight\">: {dataLaporan.penerima?.nama}</p>\r\n                                <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                    <p className=\"childRight\">: {dayjs(dataLaporan.tanggalLaporan).format('DD-MM-YYYY')}</p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanKetuaArmada = gql`\r\n  query getDLaporanKetuaArmada(\r\n    $id: String \r\n  ){\r\n    getDLaporanKetuaArmada(\r\n      id: $id\r\n    ){\r\n      id merkBarang tipeBarang ukuranBarang jumlahBarang satuanBarang\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailArmada(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDLaporanKetuaArmada,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanKetuaArmada === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanKetuaArmada !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Barang Yang Diantarkan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">No.</TableCell>\r\n                                <TableCell align=\"center\">Merk</TableCell>\r\n                                <TableCell align=\"center\">Tipe Barang</TableCell>\r\n                                <TableCell align=\"center\">Ukuran Barang</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Barang</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanKetuaArmada.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.merkBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.tipeBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.ukuranBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jumlahBarang} {laporan.satuanBarang}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Detail</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nota</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.idNota}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                                    <p className=\"childLeft\">Penerima</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.penerima}</p>\r\n                                    <p className=\"childLeft\">Armada</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.armada?.idArmada}</p>\r\n                                    <p className=\"childLeft\">Stokist</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.stokist?.idStokist}</p>\r\n                                    <p className=\"childLeft\">Supir</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.supir?.idSupir}</p>\r\n                                    <p className=\"childLeft\">Kernet</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.kernet?.idKernet}</p>\r\n                                    <p className=\"childLeft\">Keterangan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                                </div>\r\n                                <p className=\"text-center statusKu\">Status: \r\n                                    {\r\n                                        dataLaporan.status === 1? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi Stokist</div>:\r\n                                                dataLaporan.status === 2?\r\n                                                <div className=\"badgeStatusWaiting\">Terverifikasi Stokist</div>:\r\n                                                    dataLaporan.status === 3?\r\n                                                    <div className=\"badgeStatusWaiting\">Pengantaran</div>:\r\n                                                        <div className=\"badgeStatusAktif\">Selesai</div>\r\n                                    }\r\n                                </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanStokistPipa = gql`\r\n  query getDLaporanStokistPipa(\r\n    $id: String\r\n  ){\r\n    getDLaporanStokistPipa(\r\n      id: $id\r\n    ){\r\n      jumlahPipa panjangPipa beratPipa totalBaik totalBS laporanStokStokistPipa{\r\n        merkBarang tipeBarang ukuranBarang\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function DetailStokistPipa(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDLaporanStokistPipa,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanStokistPipa === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanStokistPipa !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">No.</TableCell>\r\n                                <TableCell align=\"center\">Tipe Barang</TableCell>\r\n                                <TableCell align=\"center\">Merk</TableCell>\r\n                                <TableCell align=\"center\">Ukuran</TableCell>\r\n                                <TableCell align=\"center\">Panjang</TableCell>\r\n                                <TableCell align=\"center\">Berat</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Pipa</TableCell>\r\n                                <TableCell align=\"center\">Pipa Bagus</TableCell>\r\n                                <TableCell align=\"center\">Pipa BS</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanStokistPipa.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.laporanStokStokistPipa.tipeBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.laporanStokStokistPipa.merkBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.laporanStokStokistPipa.ukuranBarang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.panjangPipa}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.beratPipa}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jumlahPipa}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.totalBaik}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.totalBS}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Stokist Pipa</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Pelapor</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Nama Ketua</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                                    <p className=\"childLeft\">Shift</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.shift}</p>\r\n                                    <p className=\"childLeft\">Total Pipa Baik</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jumlahBaik}</p>\r\n                                    <p className=\"childLeft\">Total Pipa BS</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jumlahBS}</p>\r\n                                    <p className=\"childLeft\">Keterangan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                                    {\r\n                                        dataLaporan.pernahBanding === false? \r\n                                            null:\r\n                                            <>\r\n                                                <p className=\"childLeft\">Keterangan Banding</p>\r\n                                                    <p className=\"childRight\">: {dataLaporan.keteranganBanding}</p>\r\n                                            </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"tagPInRow\">\r\n                                    <p className=\"tagPTextLeft\">Status: \r\n                                        {\r\n                                            dataLaporan.status === 1? \r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                                    <div className=\"badgeStatusAktif\">Terverifikasi</div>\r\n                                        }\r\n                                    </p>\r\n                                    <p className=\"tagPTextLeft\">Status Banding:\r\n                                        {dataLaporan.pernahBanding === true? \r\n                                            <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                                <div className=\"badgeStatusAktif\">Aman</div>}\r\n                                    </p>\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanQualityControlPipa = gql`\r\nquery getDLaporanQualityControlPipa(\r\n  $HLaporanQualityControlPipaId: String \r\n){\r\n  getDLaporanQualityControlPipa(\r\n    HLaporanQualityControlPipaId: $HLaporanQualityControlPipaId\r\n  ){\r\n    diameter panjang berat foto status pernahBanding keteranganBanding jamLaporan keterangan\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailQualityControlPipa(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDLaporanQualityControlPipa,{\r\n        variables: {\r\n            HLaporanQualityControlPipaId: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanQualityControlPipa === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanQualityControlPipa !== null){\r\n        console.log(data.getDLaporanQualityControlPipa)\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Jam Laporan</TableCell>\r\n                                <TableCell align=\"center\">Diameter</TableCell>\r\n                                <TableCell align=\"center\">Panjang</TableCell>\r\n                                <TableCell align=\"center\">Berat</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                <TableCell align=\"center\">Banding</TableCell>\r\n                                <TableCell align=\"center\">Keterangan Banding</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanQualityControlPipa.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamLaporan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.diameter}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.panjang}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.berat}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 1? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 2? \r\n                                                <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                                    <div className=\"badgeStatusNon\">Proses Banding</div>\r\n                                        }\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.pernahBanding === true? \r\n                                                <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                                <div className=\"badgeStatusAktif\">Aman</div>\r\n                                        }\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganBanding}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Quality Control Pipa</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Pelapor</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Nama Ketua</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY')}</p>\r\n                                    <p className=\"childLeft\">Shift</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.shift}</p>\r\n                                    <p className=\"childLeft\">Tipe Mesin</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.tipeMesin}</p>\r\n                                    <p className=\"childLeft\">Merk</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.merk}</p>\r\n                                    <p className=\"childLeft\">Panjang</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.panjang}</p>\r\n                                    <p className=\"childLeft\">Ketebalan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ketebalan}</p>\r\n                                    <p className=\"childLeft\">Diameter Luar</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.diameterLuar}</p>\r\n                                    <p className=\"childLeft\">Diameter Dalam</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.diameterDalam}</p>\r\n                                    <p className=\"childLeft\">Total Reject</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.totalReject}</p>\r\n                                    <p className=\"childLeft\">Total Produksi</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.totalProduksi}</p>\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container, Modal, Button} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getDLaporanProduksiPipa = gql`\r\nquery getDLaporanProduksiPipa(\r\n  $HLaporanProduksiPipaId: String \r\n){\r\n    getDLaporanProduksiPipa(\r\n    HLaporanProduksiPipaId: $HLaporanProduksiPipaId\r\n  ){\r\n    totalProduksi targetProduksi foto status pernahBanding keteranganBanding jamLaporan keterangan createdAt uLaporan{\r\n        namaUraian nilaiUraian\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailProduksiPipa(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const [dataUraian, setDataUraian] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const { loading, data, refetch} = useQuery(getDLaporanProduksiPipa,{\r\n        variables: {\r\n            HLaporanProduksiPipaId: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    const goToDetail = (laporan) => {\r\n        setDataUraian(laporan);\r\n        setVisible(true);\r\n    }\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDLaporanProduksiPipa === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getDLaporanProduksiPipa !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Jam Laporan</TableCell>\r\n                                <TableCell align=\"center\">Target Produksi</TableCell>\r\n                                <TableCell align=\"center\">Total Produksi</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                <TableCell align=\"center\">Banding</TableCell>\r\n                                <TableCell align=\"center\">Keterangan Banding</TableCell>\r\n                                <TableCell align=\"center\">Foto</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDLaporanProduksiPipa.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jamLaporan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.targetProduksi}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.totalProduksi}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 1? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                                laporan.status === 2? \r\n                                                <div className=\"badgeStatusAktif\">Terverifikasi</div>:\r\n                                                    <div className=\"badgeStatusNon\">Proses Banding</div>\r\n                                        }\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.pernahBanding === true? \r\n                                                <div className=\"badgeStatusNon\">Pernah Banding</div>:\r\n                                                <div className=\"badgeStatusAktif\">Aman</div>\r\n                                        }\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganBanding}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <CImage src={!laporan.foto ? \"/default.png\": laporan.foto} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                            <Button variant=\"info\" onClick={() => goToDetail(laporan.uLaporan)}>\r\n                                                Detail\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Produksi Pipa</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Pelapor</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Nama Ketua</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ketua?.nama}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY')}</p>\r\n                                    <p className=\"childLeft\">Shift</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.shift}</p>\r\n                                    <p className=\"childLeft\">Tipe Mesin</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.tipeMesin}</p>\r\n                                    <p className=\"childLeft\">Warna</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.warna}</p>\r\n                                    <p className=\"childLeft\">Ukuran</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.ukuran}</p>\r\n                                    <p className=\"childLeft\">Dis</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.dis}</p>\r\n                                    <p className=\"childLeft\">Pin</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.pin}</p>\r\n                                    <p className=\"childLeft\">Hasil Produksi</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.hasilProduksi}</p>\r\n                                    <p className=\"childLeft\">BS</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.BS}</p>\r\n                                    <p className=\"childLeft\">Jumlah Bahan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jumlahBahan}</p>\r\n                                    <p className=\"childLeft\">Total Bahan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.totalBahan}</p>\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Modal show={visible} onHide={() => setVisible(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"judul\">Detail Uraian Laporan</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Nama Uraian</TableCell>\r\n                                    <TableCell align=\"center\">Nilai Uraian</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    dataUraian.map((laporan,index) =>(\r\n                                        <TableRow key={index}>\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaUraian}</TableCell>\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nilaiUraian}</TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setVisible(false)}>\r\n                        Tutup\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Container} from 'react-bootstrap';\r\nimport { gql, useQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CImage } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getULaporanCatTegel = gql`\r\n  query getULaporanCatTegel(\r\n    $id: String \r\n  ){\r\n    getULaporanCatTegel(\r\n      id: $id\r\n    ){\r\n      id namaBahan jumlahBahan satuanBahan\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function DetailCatTegel(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getULaporanCatTegel,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetail= [];\r\n    if(!data || loading){\r\n        dataDetail.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getULaporanCatTegel === null){\r\n        dataDetail.push(<p key={0}>Tidak ada Detail Laporan</p>)\r\n    }else if(data.getULaporanCatTegel !== null){\r\n        dataDetail.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    <h3 className=\"subJudul\">Detail Laporan:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">No.</TableCell>\r\n                                <TableCell align=\"center\">Nama Bahan</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Bahan</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getULaporanCatTegel.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaBahan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jumlahBahan} {laporan.satuanBahan}</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Laporan Cat Tegel</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Detail Laporan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Pelapor</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.hLaporanCatTegel?.karyawan.nama}</p>\r\n                                    <p className=\"childLeft\">Jenis Produk</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.hLaporanCatTegel?.jenisProduk}</p>\r\n                                    <p className=\"childLeft\">Tanggal Laporan</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                                    <p className=\"childLeft\">Merk</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.merkProduk}</p>\r\n                                    <p className=\"childLeft\">Warna</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.warna}</p>\r\n                                    <p className=\"childLeft\">Jumlah Produk</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jumlahProduk} {dataLaporan.satuanProduk}</p>\r\n                                    <p className=\"childLeft\">Keterangan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                                </div>\r\n                                <p className=\"subJudul\">Dokumentasi: </p>\r\n                                <CImage src={!dataLaporan.foto ? \"/default.png\": dataLaporan.foto} alt=\"\" id=\"img\" className=\"img imageCenter\" width=\"250\" height=\"200\"/>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                    {dataDetail}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CContainer } from '@coreui/react';\r\n\r\n\r\nconst getListKaryawanMaster = gql`\r\n    query getListKaryawanMaster(\r\n        $page: Int \r\n        $limit: Int \r\n    ){\r\n        getListKaryawanMaster(\r\n            page: $page\r\n            limit: $limit\r\n        ){\r\n            count rows{\r\n                id nama nik noTelp tanggalMasuk tempatLahir tanggalLahir alamat agama pendidikan foto jabatan{\r\n                    namaJabatan tingkatJabatan\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function MasterKaryawan(props) {\r\n    let history = useHistory();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const { \r\n        loading: loadingKaryawan, \r\n        data: dataKaryawan ,\r\n        refetch: refetchKaryawan,\r\n    }= useQuery(getListKaryawanMaster,{\r\n        variables: {\r\n            page: pageNumber,\r\n            limit: limit,\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan, laporanPermintaan) =>{\r\n        history.push({\r\n            pathname: '/direktur/karyawan/detail karyawan',\r\n            state: { \r\n                laporan: laporan\r\n            }\r\n        });\r\n    }\r\n    \r\n    let dataKaryawanKu= [];\r\n    let counterKaryawanKu = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(dataKaryawan){\r\n        console.log(dataKaryawan);\r\n    }\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.count && !counterPage){\r\n      var jml = Math.ceil(dataKaryawan.getListKaryawanMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n        dataKaryawanKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.rows.length === 0){\r\n        dataKaryawanKu.push(<p key={1}>Tidak Ada Data Absensi</p>)\r\n    }else if(dataKaryawan.getListKaryawanMaster.rows.length > 0 && !counterKaryawanKu){\r\n        dataKaryawanKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\">Id</TableCell>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">NIK</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Masuk</TableCell>\r\n                            <TableCell align=\"center\">Tempat Lahir</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Lahir</TableCell>\r\n                            <TableCell align=\"center\">Alamat</TableCell>\r\n                            <TableCell align=\"center\">Agama</TableCell>\r\n                            <TableCell align=\"center\">Pendidikan</TableCell>\r\n                            <TableCell align=\"center\">Nama Jabatan</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataKaryawan.getListKaryawanMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"right\">{laporan.id}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.nik}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalMasuk).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.tempatLahir}</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.tanggalLahir).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.alamat}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.agama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pendidikan}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {laporan.jabatan.tingkatJabatan === 2? \r\n                                            \"Ketua\"\r\n                                            :laporan.jabatan.tingkatJabatan === 4?\r\n                                                \"Ketua\":\r\n                                                    \"Anggota\"} {laporan.jabatan.namaJabatan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan, null, null)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterKaryawanKu = true;\r\n    }\r\n    useEffect(() => {\r\n        refetchKaryawan()\r\n    }, [pageNumber])\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchKaryawan()\r\n            }\r\n        }\r\n    }, [])         \r\n\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Karyawan</h1>\r\n                    {dataKaryawanKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </CContainer>\r\n    )\r\n}","import React, {useState, Fragment} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation} from '@apollo/client';\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CFormSelect,\r\n  CFormLabel,\r\n  CImage,\r\n  CAlert,\r\n} from '@coreui/react'\r\nimport { freeSet } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\n\r\nconst getJabatan = gql`\r\n  query getJabatan{\r\n    getJabatan{\r\n      id\r\n      namaJabatan\r\n      tingkatJabatan\r\n    }\r\n  }\r\n`;\r\n\r\nconst registerKaryawan = gql`\r\n    mutation registerKaryawan(\r\n      $id: Int \r\n      $nama: String\r\n      $nik: String\r\n      $noTelp: String \r\n      $tanggalMasuk: MyDate\r\n      $tempatLahir: String\r\n      $tanggalLahir: MyDate\r\n      $alamat: String\r\n      $agama: String\r\n      $pendidikan: String\r\n      $file: Upload\r\n      $idJabatan: Int!\r\n  ) {\r\n    registerKaryawan(\r\n      id: $id\r\n      nama: $nama\r\n      nik: $nik\r\n      noTelp: $noTelp\r\n      tanggalMasuk: $tanggalMasuk\r\n      tempatLahir: $tempatLahir\r\n      tanggalLahir: $tanggalLahir\r\n      alamat: $alamat\r\n      agama: $agama\r\n      pendidikan: $pendidikan\r\n      file: $file\r\n      idJabatan: $idJabatan\r\n    ) {\r\n      id\r\n      nama\r\n      username\r\n      passwordRaw\r\n    }\r\n  }\r\n`;\r\nexport default function RegisterKaryawanDirektur(props) {\r\n    const[variables,setVariables] = useState({\r\n        id: 0,\r\n        username:'',\r\n        idJabatan: 0,\r\n        nik: '',\r\n        noTelp: '',\r\n        tanggalMasuk: '',\r\n        tempatLahir: '',\r\n        tanggalLahir: '',\r\n        alamat: '',\r\n        agama: '',\r\n        pendidikan: '',\r\n        foto: '',\r\n    })\r\n    const [file, setFile] = useState();\r\n    const [imageURI, setImageURI] = useState();\r\n    const [errors, setErrors] = useState({})\r\n    const [success, setSuccess] = useState({})\r\n    const { loading, data } = useQuery(getJabatan);\r\n\r\n    let usersMarkUp\r\n    let counter = false;\r\n    if(!data || loading){\r\n        usersMarkUp = <p>Loading...</p>\r\n    }else if(data.getJabatan.length === 0){\r\n        usersMarkUp = <p>Tidak Ada Daftar Jabatan</p>\r\n    }else if(data.getJabatan.length > 0 && !counter){\r\n        usersMarkUp = data.getJabatan.map(jabatan =>(\r\n            <option key={jabatan.id} value={jabatan.id}>\r\n                {jabatan.tingkatJabatan === 2? 'Ketua ' : null}\r\n                {jabatan.tingkatJabatan === 4? 'Ketua ' : null}\r\n                {jabatan.namaJabatan}\r\n            </option>\r\n        ))\r\n        counter = true;\r\n    }\r\n    \r\n    let showError\r\n    let showUser\r\n    if(success){\r\n        console.log(success);\r\n        showUser = \r\n            Object.keys(success).map(i => (\r\n                        <Alert variant='success'>\r\n                            {success[i]}\r\n                        </Alert>\r\n                    ))\r\n    }\r\n\r\n    if(errors){\r\n        console.log(errors);\r\n        showError = \r\n          <div className=\"mt-2\">\r\n            {\r\n              Object.keys(errors).map(i => (\r\n                <CAlert color=\"danger\">{errors[i]}</CAlert>\r\n              ))\r\n            }\r\n          </div>\r\n    }\r\n\r\n    const [registerKaryawanku] = useMutation(registerKaryawan,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            setErrors(err.graphQLErrors[0].extensions.errors)\r\n            setSuccess({});\r\n        },\r\n        onCompleted(data){\r\n            setErrors({});\r\n            setSuccess({\r\n                username: `Username: ${data.registerKaryawan.username}`,\r\n                password: `Password: ${data.registerKaryawan.passwordRaw}`\r\n            })\r\n        }\r\n    })\r\n    const register = () =>{\r\n        console.log(variables.idJabatan);\r\n        registerKaryawanku({variables:{\r\n            id: parseInt(variables.id),\r\n            nama: variables.username,\r\n            nik: variables.nik,\r\n            noTelp: variables.noTelp,\r\n            tanggalMasuk: variables.tanggalMasuk,\r\n            tempatLahir:  variables.tempatLahir,\r\n            tanggalLahir: variables.tanggalLahir,\r\n            alamat: variables.alamat,\r\n            agama: variables.agama,\r\n            pendidikan: variables.pendidikan,\r\n            file: file,\r\n            idJabatan: parseInt(variables.idJabatan),\r\n        }\r\n        });\r\n        console.log(variables);\r\n    }\r\n    const handleFileChange = e =>{\r\n        const file = e.target.files[0]\r\n        if(!file) return\r\n        setFile(e.target.files[0]);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n            if(reader.readyState === 2){\r\n                setImageURI(reader.result);\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <h1>Tambah Karyawan</h1>\r\n                    <p className=\"text-medium-emphasis\">Masukkan Data-data Karyawan</p>\r\n                    {showUser}\r\n                    {showError}\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"ID\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, id: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilUser} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Nama Lengkap\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, username: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NIK\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, nik: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"NO.Telpon\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, noTelp: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaIdBadge />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, idJabatan: parseInt(e.target.value)})\r\n                            }>\r\n                            <option value=\"0\">Pilih Jabatan</option>\r\n                            {usersMarkUp}\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Masuk: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalMasuk} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalMasuk: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilBuilding} />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Tempat Lahir\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, tempatLahir: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CFormLabel>Tanggal Lahir: </CFormLabel>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilCalendar} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            value={variables.tanggalLahir} \r\n                            onChange={e => \r\n                                setVariables({...variables, tanggalLahir: e.target.value})\r\n                            }\r\n                        />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaAddressCard />\r\n                        </CInputGroupText>\r\n                        <CFormInput \r\n                            placeholder=\"Alamat\" \r\n                            autoComplete=\"nama\" \r\n                            onChange={e => setVariables({...variables, alamat: e.target.value})}/>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <FaIcons.FaPlaceOfWorship />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, agama: e.target.value})\r\n                            }>\r\n                            <option value=\"Islam\">Islam</option>\r\n                            <option value=\"Kristen\">Kristen</option>\r\n                            <option value=\"Katolik\">Katolik</option>\r\n                            <option value=\"Buddha\">Buddha</option>\r\n                            <option value=\"Hindu\">Hindu</option>\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>\r\n                            <CIcon content={freeSet.cilEducation} />\r\n                        </CInputGroupText>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            onChange={e => \r\n                                setVariables({...variables, pendidikan: e.target.value})\r\n                            }>\r\n                            <option value=\"SMP\">SMP</option>\r\n                            <option value=\"SMA\">SMA</option>\r\n                            <option value=\"Sarjana\">Sarjana</option>\r\n                        </Form.Control>\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                        <CCol xs={6}>\r\n                            <CButton color=\"primary\" className=\"px-4\" onClick={() => register()}>\r\n                                Tambahkan\r\n                            </CButton>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CForm>\r\n            </CCol>\r\n            <CCol md={4}>\r\n                <CForm>\r\n                    <CImage src={!imageURI ? \"/default.png\": imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </CForm>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n        /*<Fragment>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Daftar Karyawan</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col xs lg=\"4\">\r\n                    <Form onSubmit={register}>\r\n                        {showError}\r\n                        {showUser}\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.nama && 'text-danger'}>{errors.nama ?? 'Nama'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                name=\"nama\"\r\n                                value= {variables.username}\r\n                                onChange={e => \r\n                                    setVariables({...variables, username : e.target.value})}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.nik && 'text-danger'}>{errors.nik ?? 'No. NIK'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.nik} \r\n                                onChange={e => \r\n                                    setVariables({...variables, nik: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                        <Form.Label>Jabatan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={variables.idJabatan}\r\n                                onChange={e => \r\n                                    setVariables({...variables, idJabatan: parseInt(e.target.value)})\r\n                            }>\r\n                                {usersMarkUp}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tanggalMasuk && 'text-danger'}>{errors.tanggalMasuk ?? 'Tanggal Masuk'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                value={variables.tanggalMasuk} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tanggalMasuk: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tempatLahir && 'text-danger'}>{errors.tempatLahir ?? 'Tempat Lahir'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.tempatLahir} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tempatLahir: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.tanggalLahir && 'text-danger'}>{errors.tanggalLahir ?? 'Tanggal Lahir'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"date\" \r\n                                value={variables.tanggalLahir} \r\n                                onChange={e => \r\n                                    setVariables({...variables, tanggalLahir: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.alamat && 'text-danger'}>{errors.alamat ?? 'Alamat'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.alamat} \r\n                                onChange={e => \r\n                                    setVariables({...variables, alamat: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.agama && 'text-danger'}>{errors.agama ?? 'Agama'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.agama} \r\n                                onChange={e => \r\n                                    setVariables({...variables, agama: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label className={errors.pendidikan && 'text-danger'}>{errors.pendidikan ?? 'Pendidikan'}</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                value={variables.pendidikan} \r\n                                onChange={e => \r\n                                    setVariables({...variables, pendidikan: e.target.value})\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n                    <div className='text-center'>\r\n                        <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                            {loading? 'loading..':'Daftarkan'}\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs lg=\"2\" className=\"justify-content-center\">\r\n                    <img src={imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"175\" height=\"200\"/>\r\n                    <input type=\"file\" onChange={handleFileChange} />\r\n                </Col>\r\n            </Row>\r\n        </Fragment>*/\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useMutation} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CFormSelect,\r\n  CFormLabel,\r\n  CImage,\r\n} from '@coreui/react'\r\nimport { freeSet } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nconst getKaryawanKu = gql`\r\nquery getKaryawanKu(\r\n    $id: Int \r\n){\r\n    getKaryawanKu(\r\n        id: $id\r\n    ){\r\n        id nama nik tanggalMasuk tempatLahir tanggalLahir alamat agama pendidikan foto jabatan{\r\n            namaJabatan tingkatJabatan\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst updateKaryawan = gql`\r\n    mutation updateKaryawan(\r\n      $id: Int \r\n      $idPermintaan: Int \r\n      $nama: String\r\n      $nik: String\r\n      $tanggalMasuk: MyDate\r\n      $tempatLahir: String\r\n      $tanggalLahir: MyDate\r\n      $alamat: String\r\n      $agama: String\r\n      $pendidikan: String\r\n      $file: Upload\r\n  ) {\r\n    updateKaryawan(\r\n      id: $id\r\n      idPermintaan: $idPermintaan\r\n      nama: $nama\r\n      nik: $nik\r\n      tanggalMasuk: $tanggalMasuk\r\n      tempatLahir: $tempatLahir\r\n      tanggalLahir: $tanggalLahir\r\n      alamat: $alamat\r\n      agama: $agama\r\n      pendidikan: $pendidikan\r\n      file: $file\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function DetailKaryawan(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [file, setFile] = useState();\r\n    const [imageURI, setImageURI] = useState();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    \r\n    let dataPermintaan=[];\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state.laporan);\r\n        }\r\n    }, [location]);\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-12\">\r\n                </Col>\r\n            </Row>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={2}>\r\n                <CImage src={!imageURI ? \"/default.png\": imageURI} alt=\"\" id=\"img\" className=\"img\" width=\"150\" height=\"150\"/>\r\n            </CCol>\r\n            <CCol md={6}>\r\n                <CForm>\r\n                    <h1>Detail Data Karyawan</h1>\r\n                    <div className=\"parent\">\r\n                        <p className=\"childLeft\">Nama Karyawan</p>\r\n                            <p className=\"childRight\">: {dataLaporan.nama}</p>\r\n                        <p className=\"childLeft\">NIK</p>\r\n                            <p className=\"childRight\">: {dataLaporan.nik}</p>\r\n                        <p className=\"childLeft\">NO.Telpon</p>\r\n                            <p className=\"childRight\">: {dataLaporan.noTelp}</p>\r\n                        <p className=\"childLeft\">Tanggal Masuk</p>\r\n                            <p className=\"childRight\">: {dayjs(dataLaporan.tanggalMasuk).format('DD-MM-YYYY')}</p>\r\n                        <p className=\"childLeft\">Tempat Lahir</p>\r\n                            <p className=\"childRight\">: {dataLaporan.tempatLahir}</p>\r\n                        <p className=\"childLeft\">Tanggal Lahir</p>\r\n                            <p className=\"childRight\">: {dayjs(dataLaporan.tanggalLahir).format('DD-MM-YYYY')}</p>\r\n                        <p className=\"childLeft\">Alamat</p>\r\n                            <p className=\"childRight\">: {dataLaporan.alamat}</p>\r\n                        <p className=\"childLeft\">Agama</p>\r\n                            <p className=\"childRight\">: {dataLaporan.agama}</p>\r\n                        <p className=\"childLeft\">Pendidikan</p>\r\n                            <p className=\"childRight\">: {dataLaporan.pendidikan}</p>\r\n                        <p className=\"childLeft\">Jabatan</p>\r\n                            <p className=\"childRight\">: {\r\n                                dataLaporan.jabatan?.tingkatJabatan === 2? \"Ketua \": \r\n                                dataLaporan.jabatan?.tingkatJabatan === 4? \"Ketua \":\r\n                                    \"Anggota \"\r\n                            }{dataLaporan.jabatan?.namaJabatan}</p>\r\n                    </div>\r\n                </CForm>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst getIndexGaji = gql`\r\nquery getIndexGaji(\r\n    $status: Boolean\r\n){\r\n    getIndexGaji(\r\n        status: $status\r\n    ){\r\n    id namaGaji keteranganGaji status\r\n  }\r\n}\r\n`;\r\nexport default function MasterGaji(props) {\r\n\r\n    const { loading, data, refetch } = useQuery(getIndexGaji,{\r\n        variables:{\r\n            status: false\r\n        }\r\n    });\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIndexGaji.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Index Gaji</p>)\r\n    }else if(data.getIndexGaji.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexGaji.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaGaji}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganGaji}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Index Gaji</h1></Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col className=\"col-md-8\">\r\n                        {dataKu}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst getIndexIuran = gql`\r\nquery getIndexIuran(\r\n    $status: Boolean\r\n){\r\n    getIndexIuran(\r\n        status: $status\r\n    ){\r\n    id namaIuran keteranganIuran status\r\n  }\r\n}\r\n`;\r\nexport default function MasterIuran(props) {\r\n    const { loading, data, refetch } = useQuery(getIndexIuran,{\r\n        variables:{\r\n            status: false\r\n        }\r\n    });\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIndexIuran.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Index Iuran</p>)\r\n    }else if(data.getIndexIuran.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexIuran.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaIuran}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganIuran}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Index Iuran</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker'\r\n\r\n\r\nconst getKontrakKaryawan = gql`\r\nquery getKontrakKaryawan(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getKontrakKaryawan(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n    ){\r\n        count rows{\r\n            id jenisKontrak totalGaji totalIuran tanggalMulai tanggalBerakhir status karyawan{\r\n                id nama jabatan{\r\n                    tingkatJabatan namaJabatan\r\n                }\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function MasterKontrak(props) {\r\n    let history = useHistory();\r\n    const [id, setId] = useState(-1);\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [divisi, setDivisi] = useState(\"\");\r\n    const [bulan, setBulan] = useState(\"1\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n\r\n    const { loading, data, refetch } = useQuery(getKontrakKaryawan,{\r\n        variables: {\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/direktur/kontrak/detail kontrak',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getKontrakKaryawan.count){\r\n      var jml = Math.ceil(data.getKontrakKaryawan.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getKontrakKaryawan.rows.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getKontrakKaryawan.rows.length > 0){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Id Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Total Gaji</TableCell>\r\n                            <TableCell align=\"center\">Total Iuran</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Mulai</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Berakhir</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"right\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getKontrakKaryawan.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.karyawan.id}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.jenisKontrak}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalIuran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    {console.log(dayjs(laporan.tanggalBerakhir).diff(new Date(), 'day'))}\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{dayjs(laporan.tanggalMulai).format('DD-MM-YYYY')}</TableCell>\r\n                                    {\r\n                                        dayjs(laporan.tanggalBerakhir).diff(new Date(), 'day') < 9? \r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\" style={{backgroundColor: 'red'}}>\r\n                                                {dayjs(laporan.tanggalBerakhir).format('DD-MM-YYYY')}\r\n                                            </TableCell>:\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                                {dayjs(laporan.tanggalBerakhir).format('DD-MM-YYYY')}\r\n                                            </TableCell>\r\n                                    }\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 0? <div className=\"badgeStatusWaiting\">Menunggu Persetujuan</div>: \r\n                                                laporan.status === 1? <div className=\"badgeStatusAktif\">Di Setujui</div>:\r\n                                                    laporan.status === 2? <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Batalkan</div>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    \r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Kontrak Karyawan</h1></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Persetujuan</option>\r\n                        <option value=\"1\">Disetujui</option>\r\n                        <option value=\"2\">Ditolak</option>\r\n                        <option value=\"3\">Dibatalkan</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Kontrak Terdekat\">Kontrak Habis Terdekat</option>\r\n                            <option value=\"Nama Asc\">Nama A-Z</option>\r\n                            <option value=\"Nama Desc\">Nama Z-A</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\n\r\nconst getDetailKontrak = gql`\r\nquery getDetailKontrak(\r\n    $id: String  \r\n){\r\n    getDetailKontrak(\r\n        id: $id\r\n    ){\r\n        dKontrakGaji{\r\n            total dKontrakIndexGaji{\r\n                namaGaji\r\n            }\r\n        }\r\n        dKontrakIuran{\r\n            total dKontrakIndexIuran{\r\n                namaIuran\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailKontrak(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailKontrak,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetailKontrak= [];\r\n    if(!data || loading){\r\n        dataDetailKontrak.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailKontrak === null){\r\n        dataDetailKontrak.push(<p key={0}>Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getDetailKontrak !== null){\r\n        dataDetailKontrak.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <h3 className=\"text-center\">Detail Gaji:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Gaji</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailKontrak.dKontrakGaji.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.dKontrakIndexGaji.namaGaji}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n                <Col className=\"col-md-4\">\r\n                    <h3 className=\"text-center\">Detail Iuran:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama Iuran</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailKontrak.dKontrakIuran.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.dKontrakIndexIuran.namaIuran}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Kontrak Karyawan</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Kontrak Karyawan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Karyawan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Jenis Kontrak</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.jenisKontrak}</p>\r\n                                    <p className=\"childLeft\">Total Gaji</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Total Iuran</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalIuran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Tanggal Mulai</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalMulai).format('DD-MM-YYYY')}</p>\r\n                                    <p className=\"childLeft\">Tanggal Berakhir</p>\r\n                                        <p className=\"childRight\">: {dayjs(dataLaporan.tanggalBerakhir).format('DD-MM-YYYY')}</p>\r\n                                </div>\r\n                                <p className=\"text-center statusKu\">Status:\r\n                                    {\r\n                                        dataLaporan.status === 0? \r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Persetujuan</div>: \r\n                                            dataLaporan.status === 1? \r\n                                                <div className=\"badgeStatusAktif\">Di Setujui</div>: \r\n                                                dataLaporan.status === 2? \r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>:\r\n                                                    <div className=\"badgeStatusNon\">Di Batalkan</div>\r\n                                    }\r\n                                </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataDetailKontrak}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst getPembayaranGaji = gql`\r\nquery getPembayaranGaji(\r\n    $page: Int \r\n    $limit: Int \r\n    $orderBy: String \r\n    $karyawan: Int \r\n    $bulan: MyDate\r\n    $status: Int \r\n){\r\n    getPembayaranGaji(\r\n        page: $page\r\n        limit: $limit \r\n        orderBy: $orderBy\r\n        karyawan: $karyawan\r\n        bulan: $bulan\r\n        status: $status\r\n    ){\r\n        count rows{\r\n            id totalGaji tanggalPembayaran status createdAt karyawan{nama} keuangan{nama} hrd{nama} kontrak{\r\n                karyawan{nama} jenisKontrak tanggalMulai tanggalBerakhir totalGaji totalIuran\r\n            }\r\n        }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\nexport default function MasterPembayaranGaji(props) {\r\n    let history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n\r\n    const goToDetail = (laporan) => {\r\n        console.log(\"asd\");\r\n        console.log(laporan)\r\n        history.push({\r\n            pathname: '/kontrak/detail pembayaran gaji',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const { loading, data, refetch } = useQuery(getPembayaranGaji,{\r\n        variables:{\r\n            page: parseInt(page),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPage(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let pageKu = [];\r\n    let counter = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n\r\n    }else if(data.getPembayaranGaji.count){\r\n      var jml = Math.ceil(data.getPembayaranGaji.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={page}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n    }\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaiting\">Loading....</p>)\r\n    }else if(data.getPembayaranGaji.rows.length === 0){\r\n        console.log(data.getPembayaranGaji.rows.length)\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Slip Pembayaran Gaji</p>)\r\n    }else if(data.getPembayaranGaji.rows.length > 0 && !counter){\r\n        console.log(data.getPembayaranGaji.rows.length)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Masa Kontrak</TableCell>\r\n                            <TableCell align=\"center\">Total Gaji</TableCell>\r\n                            <TableCell align=\"center\">Tanggal Pembayaran</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getPembayaranGaji.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.kontrak.karyawan?.nama}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.kontrak.jenisKontrak}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            dayjs(laporan.kontrak.tanggalMulai).format(\"DD-MM-YYYY\")\r\n                                        } - {\r\n                                            dayjs(laporan.kontrak.tanggalBerakhir).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.tanggalPembayaran.toString() === \"Invalid Date\"? \r\n                                                \"-\": \r\n                                                dayjs(laporan.tanggalPembayaran).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        {\r\n                                            laporan.status === 0?\r\n                                                <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</p>:\r\n                                                laporan.status === 1?\r\n                                                    <p key={0} className=\"badgeStatusWaiting\">Menunggu Pembayaran</p>:\r\n                                                    laporan.status === 2?\r\n                                                    <p key={0} className=\"badgeStatusAktif\">Selesai</p>:\r\n                                                        laporan.status === 3?\r\n                                                        <p key={0} className=\"badgeStatusNon\">Dibatalkan</p>:\r\n                                                        <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi Penerimaan</p>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Pembayaran Gaji</h1></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"col-md-4\">\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Divisi Karyawan</Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={divisiKontrak} \r\n                                onChange={e => \r\n                                    setDivisiKontrak(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataDivisiKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Karyawan: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={karyawanKontrak} \r\n                                onChange={e => \r\n                                    setKaryawanKontrak(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                {dataKaryawanKontrakKu}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Status Laporan: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={status} \r\n                                onChange={e => \r\n                                    setStatus(e.target.value)\r\n                                }\r\n                            >\r\n                            <option value=\"-1\">Semuanya</option>\r\n                            <option value=\"0\">Menunggu Verifikasi HRD</option>\r\n                            <option value=\"1\">Menunggu Pembayaran Gaji</option>\r\n                            <option value=\"2\">Selesai</option>\r\n                            <option value=\"3\">Dibatalkan</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Bulan</Form.Label>\r\n                            <DatePicker\r\n                                selected={selectedDateAwal}\r\n                                onChange={date => setSelectedDateAwal(date)}\r\n                                dateFormat='MM-yyyy'\r\n                                maxDate={new Date()}\r\n                                showMonthYearPicker\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex flex-row-reverse\">\r\n                    <Col className=\"col-md-4\">\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={orderBy} \r\n                                onChange={e => \r\n                                    setOrderBy(e.target.value)\r\n                                }\r\n                            >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Slip Terbaru\">Slip Terbaru</option>\r\n                                <option value=\"Slip Terlama\">Slip Terlama</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {dataKu}\r\n                        <div className=\"pageContainerKu\">\r\n                            {pageKu}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst getDetailPembayaranGaji = gql`\r\nquery getDetailPembayaranGaji(\r\n    $id: String  \r\n){\r\n    getDetailPembayaranGaji(\r\n        id: $id\r\n    ){\r\n        nama total pengurangan keterangan\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport default function DetailKontrak(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailPembayaranGaji,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            console.log(location.state?.laporan)\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataDetailKontrak= [];\r\n    if(data){\r\n        console.log(\"data\");\r\n        console.log(data);\r\n    }\r\n    if(!data || loading){\r\n        dataDetailKontrak.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailPembayaranGaji.length === 0){\r\n        dataDetailKontrak.push(<p key={0}>Tidak ada Slip Gaji Karyawan</p>)\r\n    }else if(data.getDetailPembayaranGaji.length > 0 ){\r\n        dataDetailKontrak.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    <h3 className=\"text-center\">Detail Slip:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Nama</TableCell>\r\n                                <TableCell align=\"center\">Keterangan</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailPembayaranGaji.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nama}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keterangan}</TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                            <div className={laporan.pengurangan === true? \"badgeStatusNon\": \"badgeStatusAktif\"}>\r\n                                                {laporan.pengurangan === true? \"-\":null} <CurrencyFormat displayType={'text'} value={laporan.total} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Pembayaran Gaji</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-6\">\r\n                    <Card>\r\n                        <Card.Header className=\"subJudul\">Slip Gaji</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className=\"parent\">\r\n                                    <p className=\"childLeft\">Nama Karyawan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.kontrak?.karyawan?.nama}</p>\r\n                                    <p className=\"childLeft\">Jenis Kontrak</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.kontrak?.jenisKontrak}</p>\r\n                                    <p className=\"childLeft\">Masa Kontrak\r\n                                    </p>\r\n                                        <p className=\"childRight\">: {\r\n                                            dayjs(dataLaporan.kontrak?.tanggalMulai).format(\"DD-MM-YYYY\")\r\n                                        } - {\r\n                                            dayjs(dataLaporan.kontrak?.tanggalBerakhir).format(\"DD-MM-YYYY\")\r\n                                        }\r\n                                    </p>\r\n                                    <p className=\"childLeft\">Total Gaji</p>\r\n                                        <p className=\"childRight\">: <CurrencyFormat displayType={'text'} value={dataLaporan.totalGaji} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                    <p className=\"childLeft\">Tanggal Pembayaran</p>\r\n                                        <p className=\"childRight\">: {\r\n                                                dataLaporan.tanggalPembayaran?.toString() === \"Invalid Date\"? \r\n                                                    \"-\": \r\n                                                    dayjs(dataLaporan.tanggalPembayaran).format(\"DD-MM-YYYY\")\r\n                                            }\r\n                                        </p>\r\n                                    <p className=\"childLeft\">HRD</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.hrd?.nama}</p>\r\n                                    <p className=\"childLeft\">Keuangan</p>\r\n                                        <p className=\"childRight\">: {dataLaporan.keuangan?.nama}</p>\r\n                                </div>\r\n                                <p className=\"text-center statusKu\">Status:\r\n                                    {\r\n                                        dataLaporan.status === 0?\r\n                                            <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi HRD</p>:\r\n                                            dataLaporan.status === 1?\r\n                                                <p key={0} className=\"badgeStatusWaiting\">Menunggu Pembayaran</p>:\r\n                                                    dataLaporan.status === 2?\r\n                                                    <p key={0} className=\"badgeStatusAktif\">Selesai</p>:\r\n                                                    dataLaporan.status === 3?\r\n                                                        <p key={0} className=\"badgeStatusNon\">Dibatalkan</p>:\r\n                                                        <p key={0} className=\"badgeStatusWaiting\">Menunggu Verifikasi Penerimaan</p>\r\n                                    }\r\n                                </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataDetailKontrak}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container, Form} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CContainer } from '@coreui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport DatePicker from 'react-datepicker'\r\n\r\nconst getListPinjaman = gql`\r\n    query getListPinjaman(\r\n        $page: Int \r\n        $limit: Int \r\n        $orderBy: String \r\n        $karyawan: Int \r\n        $bulan: MyDate\r\n        $status: Int \r\n    ){\r\n        getListPinjaman(\r\n            page: $page\r\n            limit: $limit\r\n            orderBy: $orderBy\r\n            karyawan: $karyawan\r\n            bulan: $bulan\r\n            status: $status\r\n        ){\r\n            count rows{\r\n                id karyawan{nama} hrd{nama} keuangan{nama}  jumlahPinjam keteranganPinjam lunas cicilan status\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function PermintaanPinjaman(props) {\r\n    let history = useHistory();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const { \r\n        loading: loadingPinjaman, \r\n        data: dataPinjaman ,\r\n        refetch: refetchPinjaman,\r\n    }= useQuery(getListPinjaman,{\r\n        variables: {\r\n            page: pageNumber,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const goToDetail = (laporan) =>{\r\n        history.push({\r\n            pathname: '/direktur/permintaan/detail pinjaman',\r\n            state: { \r\n                laporan: laporan,\r\n            }\r\n        });\r\n    }\r\n    \r\n    let dataUtangKu= [];\r\n    let counterUtangKu = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(dataPinjaman){\r\n        console.log(dataPinjaman);\r\n    }\r\n    if(dataPinjaman === undefined || loadingPinjaman){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPinjaman.getListPinjaman.count && !counterPage){\r\n      var jml = Math.ceil(dataPinjaman.getListPinjaman.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(dataPinjaman === undefined || loadingPinjaman){\r\n        dataUtangKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPinjaman.getListPinjaman.rows.length === 0){\r\n        dataUtangKu.push(<p key={1}>Tidak Ada Data Absensi</p>)\r\n    }else if(dataPinjaman.getListPinjaman.rows.length > 0 && !counterUtangKu){\r\n        dataUtangKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Jumlah Pinjaman</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Pinjaman</TableCell>\r\n                            <TableCell align=\"center\">Lunas</TableCell>\r\n                            <TableCell align=\"center\">Cicilan</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPinjaman.getListPinjaman.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan.nama}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <CurrencyFormat displayType={'text'} value={laporan.jumlahPinjam} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keteranganPinjam}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.lunas === true? \r\n                                        <div className=\"badgeStatusAktif\">Lunas</div>:\r\n                                        <div className=\"badgeStatusNon\">Belum</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.cicilan}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        laporan.status === 0?\r\n                                            <div className=\"badgeStatusWaiting\">Menunggu HRD</div>:\r\n                                            laporan.status === 1?\r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Uang Diserahkan</div>:\r\n                                                laporan.status === 2?\r\n                                                    <div className=\"badgeStatusAktif\">Selesai</div>:\r\n                                                    laporan.status === 4?\r\n                                                    <div className=\"badgeStatusNon\">Menunggu Verifikasi Penerima</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Tolak</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterUtangKu = true;\r\n    }\r\n    useEffect(() => {\r\n        refetchPinjaman()\r\n    }, [pageNumber])\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchPinjaman()\r\n            }\r\n        }\r\n    }, [])         \r\n\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Pinjaman</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Verifikasi HRD</option>\r\n                        <option value=\"1\">Menunggu Pembayaran Gaji</option>\r\n                        <option value=\"2\">Selesai</option>\r\n                        <option value=\"3\">Dibatalkan</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Slip Terbaru\">Slip Terbaru</option>\r\n                            <option value=\"Slip Terlama\">Slip Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    {dataUtangKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </CContainer>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Card, Container, Button, Form} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\n\r\nconst getDetailPinjaman = gql`\r\nquery getDetailPinjaman(\r\n    $id: String  \r\n){\r\n    getDetailPinjaman(\r\n        id: $id\r\n    ){\r\n        totalPembayaran pembayaranKe lunas\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport default function DetailPinjaman(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const { loading, data, refetch} = useQuery(getDetailPinjaman,{\r\n        variables: {\r\n            id: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location])\r\n\r\n    let dataKu= [];\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0}>Loading....</p>)\r\n    }else if(data.getDetailPinjaman === null){\r\n        dataKu.push(<p key={0}>Tidak ada Kontrak Karyawan</p>)\r\n    }else if(data.getDetailPinjaman !== null){\r\n        dataKu.push(\r\n            <Row key={0} className=\"justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    <h3 className=\"text-center\">Detail Gaji:</h3>\r\n                    <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">No Pembayaran</TableCell>\r\n                                <TableCell align=\"center\">Jumlah Pembayaran</TableCell>\r\n                                <TableCell align=\"center\">Lunas</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                data.getDetailPinjaman.map((laporan,index) =>(\r\n                                    <TableRow key={index}>\r\n                                        <TableCell align=\"center\">{laporan.pembayaranKe}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <CurrencyFormat displayType={'text'} value={laporan.totalPembayaran} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp '} />\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"center\">{\r\n                                            laporan.lunas === true?\r\n                                                <div className=\"badgeStatusAktifText\">Lunas</div>:\r\n                                                <div className=\"badgeStatusNonText\">Belum</div>\r\n                                        }</TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col>\r\n                    <Card className=\"mx-auto\" style={{width: '50%', textAlign: 'center'}}>\r\n                        <Card.Header>Detail Pinjaman Karyawan</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <p>Nama Karyawan: {dataLaporan.karyawan?.nama}</p>\r\n                                <p>Jumlah Pinjam: <CurrencyFormat displayType={'text'} value={dataLaporan.jumlahPinjam} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} /></p>\r\n                                <p>Cicilan: {dataLaporan.cicilan}</p>\r\n                                <p>Status Pembayaran: {dataLaporan.lunas === true?\r\n                                                <div className=\"badgeStatusAktifText\">Lunas</div>:\r\n                                                <div className=\"badgeStatusNonText\">Belum</div>}</p>\r\n                                <p>Status: \r\n                                    {\r\n                                        dataLaporan.status === 0?\r\n                                            <div className=\"badgeStatusWaiting\">Menunggu HRD</div>:\r\n                                            dataLaporan.status === 1?\r\n                                                <div className=\"badgeStatusWaiting\">Menunggu Uang Diserahkan</div>:\r\n                                                dataLaporan.status === 2?\r\n                                                    <div className=\"badgeStatusNon\">Selesai</div>:\r\n                                                    dataLaporan.status === 4?\r\n                                                    <div className=\"badgeStatusNon\">Menunggu Verifikasi Penerima</div>:\r\n                                                        <div className=\"badgeStatusNon\">Di Tolak</div>\r\n                                    }\r\n                                </p>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\n\r\nconst getAbsensi = gql`\r\n    query getAbsensi(\r\n        $page: Int \r\n        $limit: Int \r\n        $tglAwal: MyDate\r\n        $tglAkhir: MyDate\r\n    ){\r\n        getAbsensi(\r\n            page: $page \r\n            limit: $limit\r\n            tglAwal: $tglAwal\r\n            tglAkhir: $tglAkhir\r\n        ){\r\n            count rows{\r\n                namaKaryawan tanggal scanMasuk scanPulang terlambat jamBolos absen lembur jamKerja{\r\n                    namaShift jamMasuk jamKeluar\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function DaftarAbsensi(props) {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(null);\r\n    const [selectedDateAkhir, setSelectedDateAkhir] = useState(null);\r\n    const [getAbsensiKu, { loading, data }] = useLazyQuery(getAbsensi);\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getAbsensi.count && !counterPage){\r\n      var jml = Math.ceil(data.getAbsensi.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getAbsensi.rows.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Data Absensi</p>)\r\n    }else if(data.getAbsensi.rows.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Tanggal</TableCell>\r\n                            <TableCell align=\"right\">Shift</TableCell>\r\n                            <TableCell align=\"right\">Jam Masuk</TableCell>\r\n                            <TableCell align=\"right\">Jam Keluar</TableCell>\r\n                            <TableCell align=\"right\">Scan Masuk</TableCell>\r\n                            <TableCell align=\"right\">Scan Pulang</TableCell>\r\n                            <TableCell align=\"right\">Terlambat</TableCell>\r\n                            <TableCell align=\"right\">Pulang Cepat</TableCell>\r\n                            <TableCell align=\"right\">Absen</TableCell>\r\n                            <TableCell align=\"right\">Lembur</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getAbsensi.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.namaKaryawan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{dayjs(laporan.tanggal).format('DD-MM-YYYY')}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.namaShift}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.jamMasuk}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamKerja.jamKeluar}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.scanMasuk}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.scanPulang}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.terlambat}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.jamBolos}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.absen === true? <div className=\"badgeStatusNon\">Bolos</div>: \"\"}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.lembur}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    useEffect(() => {\r\n        getAbsensiKu({\r\n            variables: {\r\n                page: pageNumber,\r\n                limit: limit,\r\n                tglAwal: selectedDateAwal,\r\n                tglAkhir: selectedDateAkhir,\r\n            }\r\n        })\r\n    }, [pageNumber])\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Absensi</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-left\">\r\n                <Col className=\"col-md-4\">\r\n                    <p>Tanggal Awal:</p>\r\n                    <DatePicker\r\n                        selected={selectedDateAwal}\r\n                        onChange={date => setSelectedDateAwal(date)}\r\n                        dateFormat='dd-MM-yyyy'\r\n                        maxDate={new Date()}\r\n                        showYearDropdown\r\n                        scrollableMonthYearDropdown\r\n                    />\r\n                    <p>Tanggal Akhir:</p>\r\n                    <DatePicker\r\n                        selected={selectedDateAkhir}\r\n                        onChange={date => setSelectedDateAkhir(date)}\r\n                        dateFormat='dd-MM-yyyy'\r\n                        maxDate={new Date()}\r\n                        showYearDropdown\r\n                        scrollableMonthYearDropdown\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop: 10, marginBottom: 10}}>\r\n                <Col>\r\n                    <Button variant=\"success\" type=\"submit\" onClick={() => getAbsensiKu({\r\n                        variables: {\r\n                            page: 0,\r\n                            limit: limit,\r\n                            tglAwal: selectedDateAwal,\r\n                            tglAkhir: selectedDateAkhir,\r\n                        }\r\n                    })}>\r\n                        Cari\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery, useMutation} from '@apollo/client';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst getKuisioner = gql`\r\nquery getKuisioner{\r\n  getKuisioner{\r\n    id namaKuisioner deskripsiKuisioner jenisKuisioner divisi status\r\n  }\r\n}\r\n`;\r\n\r\nexport default function MasterKuisioner(props) {\r\n    let history = useHistory();\r\n    const { loading, data, refetch } = useQuery(getKuisioner);\r\n\r\n    const goToDetail = (laporan) =>{\r\n        console.log(\"asd\");\r\n        history.push({\r\n            pathname: '/direktur/kuisioner/detail kuisionerku',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    const goToDistribusi = (laporan) =>{\r\n        history.push({\r\n            pathname: '/direktur/kuisioner/detail distribusi',\r\n            state: { laporan: laporan }\r\n        });\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getKuisioner.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Kuisioner Tersedia</p>)\r\n    }else if(data.getKuisioner.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Divisi</TableCell>\r\n                            <TableCell align=\"center\">Deskripsi Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Jenis Kuisioner</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getKuisioner.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.namaKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.divisi}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.deskripsiKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jenisKuisioner}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.status === true? \r\n                                        <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                        <div className=\"badgeStatusNon\">Non-Aktif</div>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" style={{width: '20%'}}>\r\n                                        <div className=\"buttonsSideBySide\">\r\n                                            <Button className=\"buttonSideBySide\" variant=\"info\" onClick={() => goToDetail(laporan)}>\r\n                                                Detail\r\n                                            </Button>\r\n                                            <Button className=\"buttonSideBySide\" variant=\"info\" onClick={() => goToDistribusi(laporan)}>\r\n                                                Distribusi\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Master Kuisioner</h1>\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Form, Container} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\n\r\n\r\nconst getKuisioner = gql`\r\nquery getKuisioner{\r\n  getKuisioner{\r\n    id namaKuisioner deskripsiKuisioner\r\n  }\r\n}\r\n`;\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n  getListDivisi{\r\n    namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\nconst getListKaryawan= gql`\r\nquery getListKaryawan(\r\n  $divisi: String \r\n){\r\n  getListKaryawan(\r\n    divisi: $divisi\r\n  ){\r\n    id nama\r\n  }\r\n}\r\n`;\r\n\r\nconst getTanggapanWeb = gql`\r\nquery getTanggapanWeb(\r\n    $KuisionerId: Int \r\n    $idKaryawan: Int \r\n    $tanggal: MyDate\r\n){\r\n    getTanggapanWeb(\r\n        KuisionerId: $KuisionerId\r\n        idKaryawan: $idKaryawan\r\n        tanggal: $tanggal\r\n    ){\r\n        id teskPertanyaan jenisPertanyaan listTanggapan{\r\n            teskTanggapan\r\n        } listJawaban{\r\n            teskJawaban \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default function DaftarAbsensi(props) {\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(new Date())\r\n    const [kuisioner, setKuisioner] = useState(\"\");\r\n    const [divisi, setDivisi] = useState(\"\")\r\n    const [karyawan, setKaryawan] = useState(\"\");\r\n    const [listDivisi, setListDivisi] = React.useState({});\r\n    const [listKaryawan, setListKaryawan] = React.useState({});\r\n    const { \r\n        loading: loadingKuisioner\r\n        , data : dataKuisioner\r\n    } = useQuery(getKuisioner);\r\n    const { \r\n        loading: loadingDivisi\r\n        , data : dataDivisi\r\n    } = useQuery(getListDivisi);\r\n    const [getListKaryawanKu, { \r\n      loading: loadingKaryawan,\r\n      data: dataKaryawan,\r\n    }] = useLazyQuery(getListKaryawan);\r\n    const [getTanggapanWebKu, { \r\n      loading: loadingTanggapan,\r\n      data: dataTanggapan,\r\n    }] = useLazyQuery(getTanggapanWeb);\r\n\r\n    let dataKuisionerKu= [];\r\n    let counter = false;\r\n    if(dataKuisioner === undefined || loadingKuisioner){\r\n\r\n    }else if(dataKuisioner.getKuisioner.length === 0){\r\n\r\n    }else if(dataKuisioner.getKuisioner.length > 0 && !counter){\r\n        \r\n        dataKuisionerKu.push(dataKuisioner.getKuisioner.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.namaKuisioner}</option>\r\n        )))\r\n        counter = true;\r\n    }\r\n\r\n    let dataDivisiKu= [];\r\n    let counterDivisi = false;\r\n    if(dataDivisi === undefined || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n\r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.namaDivisi}</option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    let dataKaryawanKu= [];\r\n    let counterKaryawan = false;\r\n    if(dataKaryawan === undefined || loadingKaryawan){\r\n\r\n    }else if(dataKaryawan.getListKaryawan.length === 0){\r\n\r\n    }else if(dataKaryawan.getListKaryawan.length > 0 && !counterKaryawan){\r\n        dataKaryawanKu.push(dataKaryawan.getListKaryawan.map((element, index)=>(\r\n            <option key={index} value={element.id}>{element.nama}</option>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    let dataTanggapanKu = [];\r\n    let counterTanggapan = false;\r\n    if(dataTanggapan === undefined || loadingTanggapan){\r\n        if(kuisioner !== \"\"){\r\n            dataTanggapanKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n        }\r\n    }else if(dataTanggapan.getTanggapanWeb.length === 0){\r\n        if(kuisioner !== \"\"){\r\n            dataTanggapanKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Tanggapan Karyawan</p>)\r\n        }\r\n    }else if(dataTanggapan.getTanggapanWeb.length > 0 && !counterTanggapan){\r\n        dataTanggapanKu.push(dataTanggapan.getTanggapanWeb.map((element, index)=>(\r\n            <CCard style={{marginBottom: 5}}>\r\n                <CCardBody>\r\n                    <p>Pertanyaan: {element.teskPertanyaan}</p>\r\n                    <p style={{backgroundColor: 'greenyellow'}}>Jawaban: {element.listTanggapan[0].teskTanggapan}</p>\r\n                </CCardBody>\r\n            </CCard>\r\n        )))\r\n        counterKaryawan = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(!dataDivisi){\r\n\r\n      }else if(dataDivisi.getListDivisi.length > 0){\r\n        setListDivisi(dataDivisi.getListDivisi);\r\n      }\r\n    }, [dataDivisi])\r\n\r\n    useEffect(() => {\r\n\r\n      if(!dataKaryawan){\r\n\r\n      }else if(dataKaryawan.getListKaryawan.length > 0){\r\n        setListKaryawan(dataKaryawan.getListKaryawan);\r\n      }\r\n    }, [dataKaryawan])  \r\n\r\n\r\n    useEffect(() => {\r\n      if(divisi !== \"\"){\r\n        getListKaryawanKu({variables: {\r\n          divisi: divisi\r\n        }})\r\n      }\r\n    }, [divisi])\r\n\r\n    const cariData = e =>{\r\n        e.preventDefault();\r\n        console.log(kuisioner + \" - \"+ karyawan)\r\n        getTanggapanWebKu({\r\n            variables: {\r\n                KuisionerId: parseInt(kuisioner),\r\n                idKaryawan: parseInt(karyawan),\r\n                tanggal: selectedDateAwal,\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white p-0 justify-content-center\">\r\n                <CCard className=\"col-md-5\">\r\n                    <CCardBody>\r\n                        <h1 className=\"text-center\">Form Data Tanggapan</h1>\r\n                        <Form onSubmit={cariData}>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Kuisioner</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={kuisioner}\r\n                                    onChange={e => \r\n                                        setKuisioner(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataKuisionerKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Bulan</Form.Label>\r\n                            <DatePicker\r\n                                selected={selectedDateAwal}\r\n                                onChange={date => setSelectedDateAwal(date)}\r\n                                dateFormat='MM-yyyy'\r\n                                maxDate={new Date()}\r\n                                showMonthYearPicker\r\n                            />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Divisi</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={divisi}\r\n                                    onChange={e => \r\n                                        setDivisi(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataDivisiKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                            <Form.Label>Karyawan</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"select\" \r\n                                    value={karyawan}\r\n                                    onChange={e => \r\n                                        setKaryawan(e.target.value)\r\n                                }>\r\n                                    <option value=\"\"></option>\r\n                                    {dataKaryawanKu}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"text-center\">\r\n                                <Button variant=\"success\" type=\"submit\" >\r\n                                    Cari\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </Row>\r\n            <Row className=\"justify-content-center\" style={{marginTop: 10}}>\r\n                <Col className=\"col-md-8\">\r\n                    <h2 className=\"text-center\">Data Tanggapan</h2>\r\n                    {dataTanggapanKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from '@coreui/react';\r\nimport * as BiIcons from 'react-icons/bi';\r\nimport { CCard, CCardBody } from '@coreui/react';\r\n\r\nconst getListDivisi = gql`\r\n  query getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n    }\r\n  }\r\n`;\r\n\r\nconst getPertanyaan = gql`\r\nquery getPertanyaan(\r\n  $KuisionerId: Int \r\n){\r\n  getPertanyaan(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id ListKuisionerId teskPertanyaan jenisPertanyaan status listJawaban{\r\n      id teskJawaban\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailKuisioner(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const {\r\n        loading: loadingPertanyaan,\r\n        data: dataPertanyaan,\r\n        refetch\r\n    } = useQuery(getPertanyaan,{\r\n        variables: {\r\n            KuisionerId: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location]);\r\n\r\n    const { loading, data } = useQuery(getListDivisi);\r\n\r\n    let dataKu = [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n\r\n    }else if(data.getListDivisi.length === 0){\r\n        \r\n    }else if(data.getListDivisi.length > 0 && !counter){\r\n        dataKu.push(data.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counter = true;\r\n    }\r\n\r\n    let dataPertanyaanKu = []\r\n    let counterPertanyaan = false;\r\n    if(!dataPertanyaan || loadingPertanyaan){\r\n        dataPertanyaanKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length === 0){\r\n        dataPertanyaanKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Pertanyaan</p>)\r\n    }else if(dataPertanyaan.getPertanyaan.length > 0 && !counterPertanyaan){\r\n        dataPertanyaanKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Tesk Pertanyaan</TableCell>\r\n                            <TableCell align=\"center\">Jenis Pertanyaan</TableCell>\r\n                            <TableCell align=\"center\">Jawaban</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPertanyaan.getPertanyaan.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan)}\r\n                                    <TableCell>{laporan.teskPertanyaan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.jenisPertanyaan}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                    {\r\n                                        laporan.jenisPertanyaan === \"Pilih Opsi\"?\r\n                                        <>\r\n                                            <ul>\r\n                                            {\r\n                                                laporan.listJawaban.map((jawaban, index1)=>(\r\n                                                    <li>{jawaban.teskJawaban}</li>\r\n                                                ))\r\n                                            }\r\n                                            </ul>\r\n                                        </>\r\n                                        :\r\n                                        laporan.listJawaban[0]?.teskJawaban\r\n                                    }\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterPertanyaan = true;\r\n    }\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                dataPertanyaanKu = [];\r\n                refetch()\r\n            }\r\n        }\r\n    }, [])    \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <CCard className=\"col-md-5\">\r\n                    <CCardBody>\r\n                        <h1 className=\"text-center\">Detail Kuisioner</h1>\r\n                        <div className=\"parent\">\r\n                            <p className=\"childLeft\">Nama Kuisioner</p>\r\n                                <p className=\"childRight\">: {dataLaporan.namaKuisioner}</p>\r\n                            <p className=\"childLeft\">Deskripsi Kuisioner</p>\r\n                                <p className=\"childRight\">: {dataLaporan.deskripsiKuisioner}</p>\r\n                            <p className=\"childLeft\">Jenis Kuisioner</p>\r\n                                <p className=\"childRight\">: {dataLaporan.jenisKuisioner}</p>\r\n                        </div>\r\n                        <p className=\"text-center statusKu\">Status:\r\n                            {\r\n                                dataLaporan.status === true? \r\n                                    <div className=\"badgeStatusAktif\">Aktif</div>: \r\n                                        <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                            }\r\n                        </p>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataPertanyaanKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport * as BiIcons from 'react-icons/bi';\r\n\r\nconst getListJabatan = gql`\r\n  query getListJabatan{\r\n    getListJabatan{\r\n        tingkatJabatan jabatanKu\r\n    }\r\n  }\r\n`;\r\n\r\nconst getDistribusi = gql`\r\nquery getDistribusi(\r\n  $KuisionerId: Int \r\n){\r\n  getDistribusi(\r\n    KuisionerId: $KuisionerId\r\n  ){\r\n    id namaJabatan TingkatJabatan persentaseNilai status\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DetailDistribusi(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const {\r\n        loading: loadingPertanyaan,\r\n        data: dataPertanyaan,\r\n        refetch\r\n    } = useQuery(getDistribusi,{\r\n        variables: {\r\n            KuisionerId: dataLaporan.id\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(location.state !== undefined){\r\n            setDataLaporan(location.state?.laporan)\r\n        }\r\n    }, [location]);\r\n\r\n    let dataDistribusiKu = []\r\n    let counterDistribusi = false;\r\n    if(!dataPertanyaan || loadingPertanyaan){\r\n        dataDistribusiKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(dataPertanyaan.getDistribusi.length === 0){\r\n        dataDistribusiKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Distribusi</p>)\r\n    }else if(dataPertanyaan.getDistribusi.length > 0){\r\n        console.log(\"masuk\")\r\n        dataDistribusiKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Jabatan</TableCell>\r\n                            <TableCell>Persentase Nilai</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPertanyaan.getDistribusi.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.namaJabatan}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.persentaseNilai}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">{laporan.status === true? \"Aktif\": \"Non-Aktif\"}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetch()\r\n            }\r\n        }\r\n    }, [])    \r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <BiIcons.BiArrowBack size=\"50\" onClick={() => history.goBack()} className=\"iconBack\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Distribusi Kuisioner {dataLaporan.namaKuisioner}</h1></Col>\r\n            </Row>\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col className=\"col-md-8\">\r\n                    {dataDistribusiKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container, Badge} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CCard, CCardBody, CImage } from '@coreui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\n\r\nconst getPengaruhNilai = gql`\r\nquery getPengaruhNilai{\r\n    getPengaruhNilai{\r\n        id nilaiMin nilaiMax hasilNilai pengurangan nilaiUang\r\n  }\r\n}\r\n`;\r\nexport default function MasterNilai(props) {\r\n\r\n    const { loading, data, refetch } = useQuery(getPengaruhNilai);\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(!data || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getPengaruhNilai.length === 0){\r\n        dataKu.push(<p key={0} className=\"badgeStatusNonText\">Tidak ada Data Nilai</p>)\r\n    }else if(data.getPengaruhNilai.length > 0 && !counter){\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nilai Bawah</TableCell>\r\n                            <TableCell align=\"center\">Nilai Atas</TableCell>\r\n                            <TableCell align=\"center\">Grade Nilai</TableCell>\r\n                            <TableCell align=\"center\">Pengaruh Ke Gaji</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getPengaruhNilai.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nilaiMin}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.nilaiMax}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.hasilNilai}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className={laporan.pengurangan === true? \"badgeStatusNonText\": \"badgeStatusAktifText\"}>\r\n                                            {laporan.pengurangan === true?\"-\":\"+\"}<CurrencyFormat displayType={'text'} value={laporan.nilaiUang} thousandSeparator={'.'} decimalSeparator={','} prefix={'Rp'} />\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <Container className=\"containerKu\">\r\n                <Row className=\"bg-white justify-content-center\">\r\n                    <Col><h1 className=\"text-center\">Master Nilai</h1></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {dataKu}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport dayjs from 'dayjs'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst getIndexPenilaian = gql`\r\nquery getIndexPenilaian{\r\n    getIndexPenilaian{\r\n    id namaIndex nilaiIndex keteranganIndex status\r\n  }\r\n}\r\n`;\r\nexport default function MasterIndex(props) {\r\n    \r\n    const { loading, data, refetch } = useQuery(getIndexPenilaian);\r\n\r\n    var counterJml = 0;\r\n    let dataKu= [];\r\n    let counter = false;\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getIndexPenilaian.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Index Penilaian Yang Tersedia</p>)\r\n    }else if(data.getIndexPenilaian.length > 0 && !counter){\r\n        counterJml = 0;\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Index</TableCell>\r\n                            <TableCell align=\"center\">Keterangan Index</TableCell>\r\n                            <TableCell align=\"right\">Persentase Index</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIndexPenilaian.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.namaIndex}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">{laporan.keteranganIndex}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\" >{laporan.nilaiIndex}</TableCell>\r\n                                    <p hidden>{counterJml += laporan.nilaiIndex}</p>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\"></TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{fontWeight: 'bold'}}>Total</TableCell>\r\n                            {\r\n                                counterJml < 80?\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{backgroundColor: 'red'}}>{counterJml}(Jumlah Kurang Dari 80)</TableCell>:\r\n                                    counterJml > 80?\r\n                                        <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{backgroundColor: 'red'}}>{counterJml}(Jumlah Lebih Dari 80)</TableCell>:\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\">{counterJml}</TableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white justify-content-center\">\r\n                <Col><h1 className=\"text-center\">Master Index Penilaian</h1></Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col className=\"col-md-10\">\r\n                    {dataKu}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container, Form} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\n\r\nconst getNilaiKaryawan = gql`\r\n    query getNilaiKaryawan(\r\n        $page: Int \r\n        $limit: Int\r\n        $orderBy: String \r\n        $karyawan: Int \r\n        $bulan: MyDate\r\n        $divisi: String \r\n    ){\r\n        getNilaiKaryawan(\r\n            page: $page \r\n            limit: $limit\r\n            orderBy: $orderBy\r\n            karyawan: $karyawan\r\n            bulan: $bulan\r\n            divisi: $divisi\r\n        ){\r\n            count rows{\r\n                nama jabatan{\r\n                    namaJabatan tingkatJabatan\r\n                } hPenilaianHRD{\r\n                    totalNilai\r\n                } hPenilaianKuisioner{\r\n                    totalNilai\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst getListDivisi = gql`\r\nquery getListDivisi{\r\n    getListDivisi{\r\n        namaDivisi\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst getListKaryawanKontrak = gql`\r\nquery getListKaryawanKontrak(\r\n    $divisi: String \r\n){\r\n    getListKaryawanKontrak(\r\n        divisi: $divisi\r\n    ){\r\n        id nama jabatan{jabatanKu}\r\n  }\r\n}\r\n`;\r\n\r\nexport default function DaftarPenilaian(props) {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(5);\r\n    const [selectedDateAwal, setSelectedDateAwal] = useState(new Date());\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [karyawanKontrak, setKaryawanKontrak] = useState(\"\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const { loading, data, refetch } = useQuery(getNilaiKaryawan,{\r\n        variables: {\r\n            page: parseInt(pageNumber),\r\n            limit: parseInt(limit),\r\n            orderBy: orderBy,\r\n            karyawan: parseInt(karyawanKontrak),\r\n            bulan: selectedDateAwal,\r\n            divisi: divisiKontrak,\r\n        }\r\n    });\r\n    \r\n    useEffect(() => {\r\n        refetch() \r\n    }, [orderBy])\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    let dataKu= [];\r\n    let counter = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(data === undefined || loading){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(data.getNilaiKaryawan.count && !counterPage){\r\n      var jml = Math.ceil(data.getNilaiKaryawan.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          marginPagesDisplayed={2}\r\n          forcePage={pageNumber}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(data === undefined || loading){\r\n        dataKu.push(<p key={0} className=\"badgeStatusWaitingText\">Loading...</p>)\r\n    }else if(data.getNilaiKaryawan.rows.length === 0){\r\n        dataKu.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada Penilaian Yang Tersedia</p>)\r\n    }else if(data.getNilaiKaryawan.rows.length > 0 && !counter){\r\n        console.log(data.getNilaiKaryawan.rows)\r\n        dataKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nama Karyawan</TableCell>\r\n                            <TableCell>Divisi Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Nilai HRD</TableCell>\r\n                            <TableCell align=\"right\">Nilai Kuisioner</TableCell>\r\n                            <TableCell align=\"right\">Total Nilai</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getNilaiKaryawan.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan.jabatan)}\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.nama}\r\n                                    </TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {laporan.jabatan.tingkatJabatan === 2? \"Ketua \":\r\n                                            laporan.jabatan.tingkatJabatan === 4? \"Ketua \": \"Anggota \"}\r\n                                            {laporan.jabatan.namaJabatan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{laporan.hPenilaianHRD === null? \"Belum Ada Penilaian\": laporan.hPenilaianHRD[0].totalNilai}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.hPenilaianKuisioner === null? \"Belum Ada Penilaian\": laporan.hPenilaianKuisioner[0].totalNilai}</TableCell>\r\n                                    <TableCell align=\"right\">{(laporan.hPenilaianHRD[0]?.totalNilai + laporan.hPenilaianKuisioner[0]?.totalNilai)}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counter = true;\r\n    }\r\n\r\n    \r\n    const { \r\n        loading: loadingDivisi,\r\n        data: dataDivisi \r\n    } = useQuery(getListDivisi);\r\n\r\n    let dataDivisiKu = [];\r\n    let counterDivisi = false;\r\n    if(!dataDivisi || loadingDivisi){\r\n\r\n    }else if(dataDivisi.getListDivisi.length === 0){\r\n        \r\n    }else if(dataDivisi.getListDivisi.length > 0 && !counterDivisi){\r\n        dataDivisiKu.push(dataDivisi.getListDivisi.map((divisi,index) =>(\r\n            <option key={index} value={divisi.namaDivisi}>\r\n                {divisi.namaDivisi}\r\n            </option>\r\n        )))\r\n        counterDivisi = true;\r\n    }\r\n\r\n    const { \r\n        loading: loadingKaryawanKontrak, \r\n        data: dataKaryawanKontrak, \r\n        refetch: refetchKaryawanKontrak\r\n    } = useQuery(getListKaryawanKontrak,{\r\n        variables: {\r\n            divisi: divisiKontrak\r\n        }\r\n    });\r\n\r\n    let dataKaryawanKontrakKu = [];\r\n    if(!dataKaryawanKontrak || loadingKaryawanKontrak){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length === 0){\r\n\r\n    }else if(dataKaryawanKontrak.getListKaryawanKontrak.length > 0){\r\n        dataKaryawanKontrakKu.push(dataKaryawanKontrak.getListKaryawanKontrak.map((element, index) => (\r\n            <option key={index} value={element.id} >{element.nama} ({element.jabatan.jabatanKu})</option>\r\n        )))\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Penilaian</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Divisi Karyawan</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={divisiKontrak} \r\n                            onChange={e => \r\n                                setDivisiKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataDivisiKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Karyawan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={karyawanKontrak} \r\n                            onChange={e => \r\n                                setKaryawanKontrak(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {dataKaryawanKontrakKu}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bulan</Form.Label>\r\n                        <DatePicker\r\n                            selected={selectedDateAwal}\r\n                            onChange={date => setSelectedDateAwal(date)}\r\n                            dateFormat='MM-yyyy'\r\n                            maxDate={new Date()}\r\n                            showMonthYearPicker\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-row-reverse\">\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Nilai Tertinggi\">Nilai Tertinggi</option>\r\n                            <option value=\"Nilai Terendah\">Nilai Terendah</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {useState, Fragment, useEffect} from 'react'\r\nimport { Row, Col, Form, Button, Alert, Container} from 'react-bootstrap';\r\nimport { gql, useQuery, useMutation, useLazyQuery} from '@apollo/client';\r\nimport {ReactNativeFile} from 'apollo-upload-client';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nconst getIzin = gql`\r\n  query getIzin{\r\n    getIzin{\r\n        id namaIzin totalIzin keterangan status batasanHari\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MasterIzin(props) {\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const {loading, data, refetch} = useQuery(getIzin);\r\n\r\n    let dataCuti = []\r\n    let counterCuti = false;\r\n    if(data){\r\n        console.log(data);\r\n    }\r\n    if(!data || loading){\r\n        dataCuti.push(<p key={0} className=\"badgeStatusWaitingText\">Loading....</p>)\r\n    }else if(data.getIzin.length === 0){\r\n        dataCuti.push(<p key={1} className=\"badgeStatusNonText\">Tidak Ada List Izin</p>)\r\n    }else if(data.getIzin.length > 0 && !counterCuti){\r\n        dataCuti.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Izin</TableCell>\r\n                            <TableCell align=\"right\">Total Cuti</TableCell>\r\n                            <TableCell align=\"center\">Keterangan</TableCell>\r\n                            <TableCell align=\"center\">Batasan Hari</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data.getIzin.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    {console.log(laporan)}\r\n                                    <TableCell align=\"center\">{laporan.namaIzin}</TableCell>\r\n                                    <TableCell align=\"right\">{laporan.totalIzin} Hari</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                            laporan.batasanHari === true? \r\n                                                <div className=\"badgeStatusNon\">Ada Batasan Hari</div>: \r\n                                                <div className=\"badgeStatusAktif\">Tidak Ada Batasan</div>\r\n                                    }</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                        <div className=\"badgeContainer\">{\r\n                                        laporan.status === true? \r\n                                            <div className=\"badgeStatusAktif\">Aktif</div>:\r\n                                            <div className=\"badgeStatusNon\">Non-Aktif</div>\r\n                                    }</div></TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterCuti = true;\r\n    }\r\n\r\n    return (\r\n        <Container className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-md-center\">\r\n                <Col className=\"col-md-4\">\r\n                    <h1 className=\"text-center\">Detail Kuisioner</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {dataCuti}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Row, Col, Card, Button, Container, Form} from 'react-bootstrap';\r\nimport { gql, useLazyQuery, useQuery, useMutation} from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ReactPaginate from 'react-paginate';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CContainer } from '@coreui/react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport DatePicker from 'react-datepicker'\r\nimport { CModal, CModalBody, CModalHeader, CModalTitle } from '@coreui/react';\r\n\r\nconst getListPermintaanPromosiMaster = gql`\r\n    query getListPermintaanPromosiMaster(\r\n        $page: Int \r\n        $limit: Int \r\n        $orderBy: String  \r\n        $status: Int \r\n    ){\r\n        getListPermintaanPromosiMaster(\r\n            page: $page\r\n            limit: $limit\r\n            orderBy: $orderBy\r\n            status: $status\r\n        ){\r\n            count rows{\r\n                id penerima{nama} pelapor{nama} karyawan{nama} kenaikan keterangan keteranganDirektur status createdAt\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst updateStatusPermintaanPromosi = gql`\r\n    mutation updateStatusPermintaanPromosi(\r\n        $status: Int\r\n        $id: Int  \r\n        $keterangan: String \r\n  ) {\r\n    updateStatusPermintaanPromosi(\r\n        status: $status\r\n        id: $id\r\n        keterangan: $keterangan\r\n    ) {\r\n        id\r\n    }\r\n  }\r\n`;\r\nexport default function DaftarPermintaanPromosi(props) {\r\n    let history = useHistory();\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [divisiKontrak, setDivisiKontrak] = useState(\"\");\r\n    const [status, setStatus] = useState(-1);\r\n    const [visible, setVisible] = useState(false);\r\n    const [dataLaporan, setDataLaporan] = useState([]);\r\n    const [keterangan, setKeterangan] = useState(\"\");\r\n    const { \r\n        loading: loadingPermintaan, \r\n        data: dataPermintaan ,\r\n        refetch: refetchPermintaan,\r\n    }= useQuery(getListPermintaanPromosiMaster,{\r\n        variables: {\r\n            page: pageNumber,\r\n            limit: limit,\r\n            orderBy: orderBy,\r\n            status: parseInt(status),\r\n        }\r\n    });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const [updateStatusIndexKu] = useMutation(updateStatusPermintaanPromosi,{\r\n        update(_,res){\r\n            console.log(res)\r\n        },\r\n        onError: (err) => {\r\n            console.log(err)\r\n            alert(err.graphQLErrors[0].extensions.errors);\r\n        },\r\n        onCompleted(data){\r\n            refetchPermintaan()\r\n        }\r\n    })\r\n\r\n    const doAction = (status, id) =>{\r\n        var statusPermintaan = status === true? 1: 2;\r\n        updateStatusIndexKu({\r\n            variables: {\r\n                id: id,\r\n                status: parseInt(statusPermintaan),\r\n                keterangan: keterangan,\r\n            }\r\n        })\r\n        setVisible(false);\r\n    }\r\n    \r\n    const openModal = (laporan) =>{\r\n        setDataLaporan(laporan);\r\n        setVisible(true);\r\n    }\r\n    \r\n    let dataUtangKu= [];\r\n    let counterUtangKu = false;\r\n    let pageKu = [];\r\n    let counterPage = false;\r\n    if(dataPermintaan){\r\n        console.log(dataPermintaan);\r\n    }\r\n    if(dataPermintaan === undefined || loadingPermintaan){\r\n        pageKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPermintaan.getListPermintaanPromosiMaster.count && !counterPage){\r\n      var jml = Math.ceil(dataPermintaan.getListPermintaanPromosiMaster.count / limit);\r\n      pageKu.push(\r\n        <ReactPaginate\r\n          key={1}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={jml}\r\n          forcePage={pageNumber}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={(selected) => changePage(selected)}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousLinkClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n        />\r\n      )\r\n      counterPage = true;\r\n    }\r\n    if(dataPermintaan === undefined || loadingPermintaan){\r\n        dataUtangKu.push(<p key={0}>Loading...</p>)\r\n    }else if(dataPermintaan.getListPermintaanPromosiMaster.rows.length === 0){\r\n        dataUtangKu.push(<p key={1}>Tidak Ada Data Absensi</p>)\r\n    }else if(dataPermintaan.getListPermintaanPromosiMaster.rows.length > 0 && !counterUtangKu){\r\n        dataUtangKu.push(\r\n            <TableContainer component={Paper} key={0}>\r\n                <Table className=\"tableKu\" aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Nama Karyawan</TableCell>\r\n                            <TableCell align=\"right\">Nama Peminta</TableCell>\r\n                            <TableCell align=\"center\">Keterangan</TableCell>\r\n                            <TableCell align=\"center\">Promosi</TableCell>\r\n                            <TableCell align=\"center\">Status</TableCell>\r\n                            <TableCell align=\"center\">Tanggal</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            dataPermintaan.getListPermintaanPromosiMaster.rows.map((laporan,index) =>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\">{laporan.karyawan?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.pelapor?.nama}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.keterangan}</TableCell>\r\n                                    <TableCell align=\"center\">{laporan.kenaikan === true? \r\n                                        <div className=\"badgeStatusAktif\">Naik Jabatan</div>:\r\n                                        <div className=\"badgeStatusNon\">Turun Jabatan</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        laporan.status === 0?\r\n                                            <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                            laporan.status === 1?\r\n                                                <div className=\"badgeStatusAktif\">Di Setujui</div>:\r\n                                                <div className=\"badgeStatusNon\">Di Tolak</div>\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">{dayjs(laporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                                        <Button variant=\"info\" onClick={() => openModal(laporan)}>\r\n                                            Detail\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n        counterUtangKu = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.performance) {\r\n            if (performance.navigation.type == 1) {\r\n                refetchPermintaan()\r\n            }\r\n        }\r\n    }, [])         \r\n\r\n    return (\r\n        <CContainer className=\"containerKu\">\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    <h1 className=\"text-center\">Daftar Permintaan Promosi</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"col-md-4\">\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Status Laporan: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={status} \r\n                            onChange={e => \r\n                                setStatus(e.target.value)\r\n                            }\r\n                        >\r\n                        <option value=\"-1\">Semuanya</option>\r\n                        <option value=\"0\">Menunggu Verifikasi</option>\r\n                        <option value=\"1\">Di Setujui</option>\r\n                        <option value=\"2\">Di Tolak</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Urutkan Berdasar: </Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\" \r\n                            value={orderBy} \r\n                            onChange={e => \r\n                                setOrderBy(e.target.value)\r\n                            }\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Permintaan Terbaru\">Permintaan Terbaru</option>\r\n                            <option value=\"Permintaan Terlama\">Permintaan Terlama</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"bg-white py-5 justify-content-center\">\r\n                <Col>\r\n                    {dataUtangKu}\r\n                    <div className=\"pageContainerKu\">\r\n                        {pageKu}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <CModal fullscreen=\"md\" visible={visible} onClose={() => setVisible(false)}>\r\n                <CModalHeader>\r\n                    <CModalTitle>Detail Permintaan Promosi</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody className=\"justify-content-center\">\r\n                    <div className=\"parent\">\r\n                        <p className=\"childLeft\">Nama Karyawan</p>\r\n                            <p className=\"childRight\">: {dataLaporan.karyawan?.nama}</p>\r\n                        <p className=\"childLeft\">Nama Peminta</p>\r\n                            <p className=\"childRight\">: {dataLaporan.pelapor?.nama}</p>\r\n                        <p className=\"childLeft\">Promosi</p>\r\n                            <p className=\"childRight\">: {dataLaporan.kenaikan === true?\"Naik Jabatan\":\r\n                                \"Turun Jabatan\"\r\n                            }</p>\r\n                        <p className=\"childLeft\">Keterangan</p>\r\n                            <p className=\"childRight\">: {dataLaporan.keterangan}</p>\r\n                        <p className=\"childLeft\">Keterangan Direktur</p>\r\n                            <p className=\"childRight\">: {dataLaporan.keteranganDirektur}</p>\r\n                        <p className=\"childLeft\">Tanggal</p>\r\n                            <p className=\"childRight\">: {dayjs(dataLaporan.createdAt).format('DD-MM-YYYY HH:mm:ss')}</p>\r\n                    </div>\r\n                    <p className=\"text-center statusKu\">Status:\r\n                        {\r\n                            dataLaporan.status === 0?\r\n                                <div className=\"badgeStatusWaiting\">Menunggu Verifikasi</div>:\r\n                                dataLaporan.status === 1?\r\n                                    <div className=\"badgeStatusWaiting\">Di Setujui</div>:\r\n                                    <div className=\"badgeStatusAktif\">Di Tolak</div>\r\n                        }\r\n                    </p>\r\n                    {\r\n                        dataLaporan.status !== 0? null:\r\n                        <Form>\r\n                            <Form.Group as={Col}>\r\n                                <Form.Label>Keterangan</Form.Label>\r\n                                <Form.Control \r\n                                    as=\"textarea\" \r\n                                    value={keterangan} \r\n                                    onChange={e => \r\n                                        setKeterangan(e.target.value)\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"text-center\">\r\n                                <Button className=\"buttonSideBySide\" variant=\"primary\" onClick={() => doAction(true, dataLaporan.id)}>\r\n                                    Setuju\r\n                                </Button>\r\n                                <Button className=\"buttonSideBySide\" variant=\"danger\" onClick={() => doAction(false, dataLaporan.id)}>\r\n                                    Tolak\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                </CModalBody>\r\n            </CModal>\r\n        </CContainer>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Reports = () => {\r\n  return (\r\n    <div className='reports'>\r\n      <h1>Reports</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ReportsOne = () => {\r\n  return (\r\n    <div className='reports'>\r\n      <h1>Reports/reports1</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ReportsTwo = () => {\r\n  return (\r\n    <div className='reports'>\r\n      <h1>Reports/reports2</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ReportsThree = () => {\r\n  return (\r\n    <div className='reports'>\r\n      <h1>Reports/reports3</h1>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { useAuthState, useAuthDispatch } from '../context/auth';\r\n\r\nexport default function DynamicRoute(props){\r\n    const { user } = useAuthState()\r\n    const dispatch = useAuthDispatch();\r\n\r\n    if(props.authenticated && !user){\r\n        return <Redirect to=\"/\"/>\r\n    }else if(props.guest && user){\r\n        return <Redirect to=\"/menu\"/>\r\n    }else if(props.logout && user){\r\n        dispatch({type: 'LOGOUT'})\r\n        return <Redirect to=\"/\"/>\r\n    }else{\r\n        return <Route component={props.component} {...props} />\r\n    }\r\n}","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as FIcons from 'react-icons/fi';\r\nimport * as MdIcons from 'react-icons/md';\r\nimport * as GoIcons from 'react-icons/go';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Dashboard',\r\n    path: '/Dashboard',\r\n    icon: <AiIcons.AiFillHome />,\r\n  },\r\n  {\r\n    title: 'Karyawan',\r\n    path: '#',\r\n    icon: <FaIcons.FaUsers />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Register',\r\n        path: '/karyawan/register',\r\n        icon: <FIcons.FiUserPlus />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Karyawan',\r\n        path: '/karyawan/master karyawan',\r\n        icon: <FaIcons.FaUserEdit />\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Kontrak',\r\n    path: '#',\r\n    icon: <FaIcons.FaFileContract />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Gaji',\r\n        path: '/kontrak/master Gaji',\r\n        icon: <FaIcons.FaMoneyCheckAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Iuran',\r\n        path: '/kontrak/master Iuran',\r\n        icon: <FaIcons.FaMoneyCheckAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Kontrak',\r\n        path: '/kontrak/master Kontrak',\r\n        icon: <FaIcons.FaFileContract />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Tambah Kontrak',\r\n        path: '/kontrak/tambah Kontrak',\r\n        icon: <FaIcons.FaFileSignature />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Pembayaran Gaji',\r\n        path: '/kontrak/master pembayaran gaji',\r\n        icon: <FaIcons.FaFileSignature />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Permintaan',\r\n    path: '#',\r\n    icon: <FaIcons.FaWarehouse />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Daftar Izin',\r\n        path: '/permintaan/permintaan izin',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Pinjaman',\r\n        path: '/permintaan/permintaan pinjaman',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Penambahan',\r\n    path: '#',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Tambah Gudang',\r\n        path: '/penambahan/tambah gudang',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Tambah Group Divisi',\r\n        path: '/penambahan/tambah group',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Surat',\r\n    path: '#',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Tambah Surat Perintah',\r\n        path: '/surat/tambah surat',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Surat Keterangan',\r\n        path: '/surat/daftar surat keterangan',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Surat Perintah',\r\n        path: '/surat/daftar surat perintah',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Absensi',\r\n    path: '#',\r\n    icon: <FaIcons.FaUserCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Tambah Absensi',\r\n        path: '/absensi/tambah',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Absensi',\r\n        path: '/absensi/daftar',\r\n        icon: <FaIcons.FaFileAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Laporan',\r\n    path: '#',\r\n    icon: <FaIcons.FaUserCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Produksi Pipa',\r\n        path: '/laporan/produksi pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Mixer Pipa',\r\n        path: '/laporan/mixer pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Quality Control',\r\n        path: '/laporan/quality control',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Stokist Pipa',\r\n        path: '/laporan/stokist pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Armada',\r\n        path: '/laporan/armada',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Cat Tegel',\r\n        path: '/laporan/cat tegel',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Spandek',\r\n        path: '/laporan/spandek',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Hollow',\r\n        path: '/laporan/hollow',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Sekuriti',\r\n        path: '/laporan/sekuriti',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Sales',\r\n        path: '/laporan/sales',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Kuisioner',\r\n    path: '#',\r\n    icon: <FaIcons.FaQuestionCircle />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Tambah Kuisioner',\r\n        path: '/kuisioner/tambah kuisioner',\r\n        icon: <FaIcons.FaQuestionCircle />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Tambah Pertanyaan',\r\n        path: '/kuisioner/tambah pertanyaan',\r\n        icon: <FaIcons.FaQuestionCircle />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Tanggapan',\r\n        path: '/kuisioner/daftar tanggapan',\r\n        icon: <MdIcons.MdFeedback />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Kuisioner',\r\n        path: '/kuisioner/master kuisioner',\r\n        icon: <FaIcons.FaQuestionCircle />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Isi Kuisioner',\r\n        path: '/kuisioner/isi kuisioner',\r\n        icon: <FaIcons.FaQuestionCircle />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Penilaian',\r\n    path: '#',\r\n    icon: <GoIcons.GoChecklist />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Tambah Penilaian',\r\n        path: '/penilaian/tambah penilaian',\r\n        icon: <GoIcons.GoChecklist />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Index Penilaian',\r\n        path: '/penilaian/master index',\r\n        icon: <GoIcons.GoChecklist />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Penilaian',\r\n        path: '/penilaian/daftar penilaian',\r\n        icon: <GoIcons.GoFile />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Nilai',\r\n        path: '/penilaian/master nilai',\r\n        icon: <GoIcons.GoFile />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Izin',\r\n    path: '#',\r\n    icon: <FaIcons.FaCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Izin',\r\n        path: '/izin/master izin',\r\n        icon: <FaIcons.FaCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Profil',\r\n    path: '/profil',\r\n    icon: <FaIcons.FaUserCircle />,\r\n  },\r\n  {\r\n    title: 'Logout',\r\n    path: '/logout',\r\n    icon: <FaIcons.FaSignOutAlt />,\r\n  },\r\n];","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as FIcons from 'react-icons/fi';\r\nimport * as MdIcons from 'react-icons/md';\r\nimport * as GoIcons from 'react-icons/go';\r\n\r\nexport const SidebarDataDirektur = [\r\n  {\r\n    title: 'Dashboard',\r\n    path: '/Dashboard',\r\n    icon: <AiIcons.AiFillHome />,\r\n  },\r\n  {\r\n    title: 'Karyawan',\r\n    path: '#',\r\n    icon: <FaIcons.FaUsers />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Karyawan',\r\n        path: '/direktur/karyawan/master karyawan',\r\n        icon: <FaIcons.FaUserEdit />\r\n      },\r\n      {\r\n        title: 'Register Karyawan',\r\n        path: '/direktur/karyawan/register karyawan',\r\n        icon: <FaIcons.FaUserEdit />\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Kontrak',\r\n    path: '#',\r\n    icon: <FaIcons.FaFileContract />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Gaji',\r\n        path: '/direktur/kontrak/master Gaji',\r\n        icon: <FaIcons.FaMoneyCheckAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Iuran',\r\n        path: '/direktur/kontrak/master Iuran',\r\n        icon: <FaIcons.FaMoneyCheckAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Kontrak',\r\n        path: '/direktur/kontrak/master Kontrak',\r\n        icon: <FaIcons.FaFileContract />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Pembayaran Gaji',\r\n        path: '/direktur/kontrak/master pembayaran gaji',\r\n        icon: <FaIcons.FaFileSignature />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Permintaan',\r\n    path: '#',\r\n    icon: <FaIcons.FaWarehouse />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Daftar Izin',\r\n        path: '/permintaan/permintaan izin',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Pinjaman',\r\n        path: '/direktur/permintaan/permintaan pinjaman',\r\n        icon: <FaIcons.FaWarehouse />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Absensi',\r\n    path: '#',\r\n    icon: <FaIcons.FaUserCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Daftar Absensi',\r\n        path: '/direktur/absensi/daftar',\r\n        icon: <FaIcons.FaFileAlt />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Laporan',\r\n    path: '#',\r\n    icon: <FaIcons.FaUserCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Produksi Pipa',\r\n        path: '/laporan/produksi pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Mixer Pipa',\r\n        path: '/laporan/mixer pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Quality Control',\r\n        path: '/laporan/quality control',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Stokist Pipa',\r\n        path: '/laporan/stokist pipa',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Armada',\r\n        path: '/laporan/armada',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Cat Tegel',\r\n        path: '/laporan/cat tegel',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Spandek',\r\n        path: '/laporan/spandek',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Hollow',\r\n        path: '/laporan/hollow',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Sekuriti',\r\n        path: '/laporan/sekuriti',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Sales',\r\n        path: '/laporan/sales',\r\n        icon: <FaIcons.FaUserCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Kuisioner',\r\n    path: '#',\r\n    icon: <FaIcons.FaQuestionCircle />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Daftar Tanggapan',\r\n        path: '/direktur/kuisioner/daftar tanggapan',\r\n        icon: <MdIcons.MdFeedback />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Kuisioner',\r\n        path: '/direktur/kuisioner/master kuisioner',\r\n        icon: <FaIcons.FaQuestionCircle />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Penilaian',\r\n    path: '#',\r\n    icon: <GoIcons.GoChecklist />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Index Penilaian',\r\n        path: '/direktur/penilaian/master index',\r\n        icon: <GoIcons.GoChecklist />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Daftar Penilaian',\r\n        path: '/direktur/penilaian/daftar penilaian',\r\n        icon: <GoIcons.GoFile />,\r\n        cName: 'sub-nav'\r\n      },\r\n      {\r\n        title: 'Master Nilai',\r\n        path: '/direktur/penilaian/master nilai',\r\n        icon: <GoIcons.GoFile />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Izin',\r\n    path: '#',\r\n    icon: <FaIcons.FaCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Master Izin',\r\n        path: '/direktur/izin/master izin',\r\n        icon: <FaIcons.FaCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Promosi',\r\n    path: '#',\r\n    icon: <FaIcons.FaCheck />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: 'Daftar Permintaan Promosi',\r\n        path: '/direktur/promosi/daftar permintaan promosi',\r\n        icon: <FaIcons.FaCheck />,\r\n        cName: 'sub-nav'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Profil',\r\n    path: '/profil',\r\n    icon: <FaIcons.FaUserCircle />,\r\n  },\r\n  {\r\n    title: 'Logout',\r\n    path: '/logout',\r\n    icon: <FaIcons.FaSignOutAlt />,\r\n  },\r\n];","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #ffffff;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 60px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #ffffff;\r\n    background: #0000ff;\r\n    border-left: 4px solid #ffffff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n  background: #414757;\r\n  height: 60px;\r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  font-size: 18px;\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #ffffff;\r\n    background-color: #0000ff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SubMenu = ({ item }) => {\r\n  const [subnav, setSubnav] = useState(false);\r\n\r\n  const showSubnav = () => setSubnav(!subnav);\r\n\r\n  return (\r\n    <>\r\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n        <div>\r\n          {item.icon}\r\n          <SidebarLabel>{item.title}</SidebarLabel>\r\n        </div>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </SidebarLink>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          return (\r\n            <DropdownLink to={item.path} key={index}>\r\n              {item.icon}\r\n              <SidebarLabel>{item.title}</SidebarLabel>\r\n            </DropdownLink>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubMenu;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SideBarData';\r\nimport { SidebarDataDirektur } from './SideBarDataDirektur';\r\nimport SubMenu from './SubMenu';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { useAuthState, useAuthDispatch } from '../context/auth';\r\n\r\nconst Nav = styled.div`\r\n  background: #303C54;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  position: absolute;\r\n  left: 0;\r\n  width: 100%;\r\n  top: 0;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #3C4B64;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst SideMenuBtn = styled.nav`\r\n  position: absolute;\r\n  left: ${({ sidebar }) => (sidebar ? '+15%' : '2%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  const { user } = useAuthState()\r\n  const divisi = localStorage.getItem('divisi');\r\n  return (\r\n    <>\r\n      \r\n        {\r\n          user ? \r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n              <Nav>\r\n                <NavIcon to='#'>\r\n                  <SideMenuBtn sidebar={sidebar}>\r\n                    <FaIcons.FaBars onClick={showSidebar}/>\r\n                  </SideMenuBtn>\r\n                </NavIcon>\r\n              </Nav>\r\n              <SidebarNav sidebar={sidebar}>\r\n                <SidebarWrap>\r\n                  <NavIcon to='#'>\r\n                    <img src=\"/logo.png\" width=\"25%\"/>\r\n                    <label style={{color: 'white', fontWeight:'bold', textDecoration: 'none'}}>HJMB</label>\r\n                  </NavIcon>\r\n                  {\r\n                    divisi === \"Direktur Perusahaan\"? \r\n                    SidebarDataDirektur.map((item, index) => {\r\n                      return <SubMenu item={item} key={index} />;\r\n                    })\r\n                    :\r\n                    SidebarData.map((item, index) => {\r\n                      return <SubMenu item={item} key={index} />;\r\n                    })\r\n                  }\r\n                </SidebarWrap>\r\n              </SidebarNav>\r\n            </IconContext.Provider>:null\r\n        }\r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import './App.scss';\n\nimport React, {useState} from 'react';\nimport {Container} from 'react-bootstrap';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport ApolloProvider from './ApolloProvider';  \n\nimport Login from './pages/Login';\nimport Register from './pages/Daftar Karyawan';\nimport MasterKaryawan from './pages/Karyawan/MasterKaryawan';\nimport DetailKaryawan from './pages/Karyawan/Detail Karyawan';\nimport Permintaan from './pages/Permintaan';\nimport DetailPermintaan from './pages/Detail Permintaan';\nimport PermintaanPinjaman from './pages/Permintaan/Permintaan Utang';\nimport DetailPinjaman from './pages/Permintaan/Detail Utang';\nimport PermintaanSurat from './pages/Permintaan/Permintaan Surat';\nimport DetailSurat from './pages/Permintaan/Detail Surat';\nimport DaftarSuratPerintah from './pages/Penambahan/Daftar Surat Perintah';\nimport DetailSuratPerintah from './pages/Penambahan/Detail Surat Perintah';\nimport Dashboard from './pages/Dashboard';\nimport Profil from './pages/Profil';\nimport UbahPassword from './pages/Ubah Password';\nimport TambahSuratPerintah from './pages/Penambahan/Tambah Surat Perintah Kerja';\nimport RegisterGudang from './pages/Tambah Gudang';\nimport RegisterMesin from './pages/Tambah Mesin';\nimport TambahGroup from './pages/Tambah Group';\nimport DetailPembagianGroup from './pages/Pembagian Group Detail';\nimport Menu from './pages/Menu';\nimport Overview from './pages/Overview';\nimport RegisterAbsensi from './pages/Absensi/Tambah Absensi';\nimport DaftarAbsensi from './pages/Absensi/Daftar Absensi';\nimport RegisterJamKerja from './pages/Tambah Jam Kerja';\nimport RegisterKuisioner from './pages/Kuisioner/Tambah Kuisioner';\nimport RegisterPertanyaan from './pages/Kuisioner/Tambah Pertanyaan';\nimport DaftarTanggapan from './pages/Kuisioner/DaftarTanggapan';\nimport MasterKuisioner from './pages/Kuisioner/Master Kuisioner';\nimport DetailKuisioner from './pages/Kuisioner/Detail Kuisioner';\nimport DetailPertanyaan from './pages/Kuisioner/Detail Pertanyaan';\nimport TambahPertanyaanBaru from './pages/Kuisioner/Tambah Pertanyaan Baru';\nimport DetailDistribusi from './pages/Kuisioner/Detail Distribusi';\nimport IsiKuisioner from './pages/Kuisioner/Isi Kuisioner';\nimport TambahPenilaian from './pages/Penilaian/Tambah Penilaian';\nimport DaftarPenilaian from './pages/Penilaian/Daftar Penilaian';\nimport MasterNilai from './pages/Penilaian/Master Nilai';\nimport MasterIndex from './pages/Penilaian/Master Index';\nimport MasterIzin from './pages/Izin/Master Izin';\nimport MasterGaji from './pages/Kontrak/MasterGaji';\nimport MasterIuran from './pages/Kontrak/MasterIuran';\nimport MasterKontrak from './pages/Kontrak/Master Kontrak';\nimport TambahKontrak from './pages/Kontrak/Tambah Kontrak';\nimport DetailKontrak from './pages/Kontrak/Detail Kontrak';\nimport MasterPembayaranGaji from './pages/Kontrak/Master Pembayaran Gaji';\nimport DetailPembayaranGaji from './pages/Kontrak/Detail Pembayaran Gaji';\nimport ProduksiPipa from './pages/Laporan/Produksi Pipa';\nimport MixerPipa from './pages/Laporan/Mixer Pipa';\nimport QualityControl from './pages/Laporan/Quality Control';\nimport StokistPipa from './pages/Laporan/Stokist Pipa';\nimport Armada from './pages/Laporan/Armada';\nimport CatTegel from './pages/Laporan/Cat Tegel';\nimport Hollow from './pages/Laporan/Hollow';\nimport Spandek from './pages/Laporan/Spandek';\nimport Sekuriti from './pages/Laporan/Sekuriti';\nimport Sales from './pages/Laporan/Sales';\nimport DetailSales from './pages/Laporan/Sales Detail';\nimport DetailSekuriti from './pages/Laporan/Sekuriti Detail';\nimport DetailArmada from './pages/Laporan/Armada Detail';\nimport DetailStokistPipa from './pages/Laporan/Stokist Pipa Detail';\nimport DetailQualityControlPipa from './pages/Laporan/Quality Control Detail';\nimport DetailProduksiPipa from './pages/Laporan/Produksi Pipa Detail';\nimport DetailCatTegel from './pages/Laporan/Cat Tegel Detail';\n\n//direktur\nimport MasterKaryawanDirektur from './pages/Direktur/Karyawan/MasterKaryawan';\nimport RegisterKaryawanDirektur from './pages/Direktur/Karyawan/Daftar HRD';\nimport DetailKaryawanDirektur from './pages/Direktur/Karyawan/Detail Karyawan';\nimport MasterGajiDirektur from './pages/Direktur/Kontrak/MasterGaji';\nimport MasterIuranDirektur from './pages/Direktur/Kontrak/MasterIuran';\nimport MasterKontrakDirektur from './pages/Direktur/Kontrak/Master Kontrak';\nimport DetailKontrakDirektur from './pages/Direktur/Kontrak/Detail Kontrak';\nimport MasterPembayaranGajiDirektur from './pages/Direktur/Kontrak/Master Pembayaran Gaji';\nimport DetailPembayaranGajiDirektur from './pages/Direktur/Kontrak/Detail Pembayaran Gaji';\nimport PermintaanPinjamanDirektur from './pages/Direktur/Permintaan/Permintaan Utang';\nimport DetailPinjamanDirektur from './pages/Direktur/Permintaan/Detail Utang';\nimport DaftarAbsensiDirektur from './pages/Direktur/Absensi/Daftar Absensi';\nimport MasterKuisionerDirektur from './pages/Direktur/Kuisioner/Master Kuisioner';\nimport DaftarTanggapanDirektur from './pages/Direktur/Kuisioner/DaftarTanggapan';\nimport DetailKuisionerDirektur from './pages/Direktur/Kuisioner/Detail Kuisioner';\nimport DetailDistribusiDirektur from './pages/Direktur/Kuisioner/Detail Distribusi';\nimport MasterNilaiDirektur from './pages/Direktur/Penilaian/Master Nilai';\nimport MasterIndexDirektur from './pages/Direktur/Penilaian/Master Index';\nimport DaftarPenilaianDirektur from './pages/Direktur/Penilaian/Daftar Penilaian';\nimport MasterIzinDirektur from './pages/Direktur/Izin/Master Izin';\nimport DaftarPermintaanPromosi from './pages/Direktur/Promosi/Daftar Permintaan';\n\nimport { Reports, ReportsOne, ReportsTwo, ReportsThree } from './pages/Reports';\nimport Team from './pages/Team';\n\nimport {AuthProvider} from './context/auth';\nimport DynamicRoute from './util/DynamicRoute';\nimport Sidebar from './components/SideBar';\nfunction App() {\n  const [isLogin, setLogin] = useState('false');\n\n  return (\n    <ApolloProvider>\n      <AuthProvider>\n        <BrowserRouter>\n          <Container className=\"pt-5\">\n            <Sidebar />\n            <Switch>\n              <DynamicRoute path='/' exact component={Login} guest />\n              <DynamicRoute path='/dashboard' exact component={Dashboard} authenticated />\n              <DynamicRoute path='/reports' exact component={Reports} authenticated />\n              <DynamicRoute path='/reports/reports1' exact component={ReportsOne} authenticated />\n              <DynamicRoute path='/reports/reports2' exact component={ReportsTwo} authenticated />\n              <DynamicRoute path='/reports/reports3' exact component={ReportsThree} authenticated />\n              <DynamicRoute path='/karyawan/register' exact component={Register} authenticated />\n              <DynamicRoute path='/karyawan/master karyawan' exact component={MasterKaryawan} authenticated />\n              <DynamicRoute path='/karyawan/detail karyawan' exact component={DetailKaryawan} authenticated />\n              <DynamicRoute path='/penambahan/tambah gudang' exact component={RegisterGudang} authenticated />\n              <DynamicRoute path='/penambahan/mesin' exact component={RegisterMesin} authenticated />\n              <DynamicRoute path='/penambahan/tambah group' exact component={TambahGroup} authenticated />\n              <DynamicRoute path='/surat/tambah surat' exact component={TambahSuratPerintah} authenticated />\n              <DynamicRoute path='/surat/daftar surat keterangan' exact component={PermintaanSurat} authenticated />\n              <DynamicRoute path='/surat/detail surat' exact component={DetailSurat} authenticated />\n              <DynamicRoute path='/surat/daftar surat perintah' exact component={DaftarSuratPerintah} authenticated />\n              <DynamicRoute path='/surat/detail surat perintah' exact component={DetailSuratPerintah} authenticated />\n              <DynamicRoute path='/penambahan/detail pembagian group' exact component={DetailPembagianGroup} authenticated />\n              <DynamicRoute path='/absensi/tambah' exact component={RegisterAbsensi} authenticated />\n              <DynamicRoute path='/absensi/daftar' exact component={DaftarAbsensi} authenticated />\n              <DynamicRoute path='/jamKerja/tambah' exact component={RegisterJamKerja} authenticated />\n              <DynamicRoute path='/kuisioner/tambah kuisioner' exact component={RegisterKuisioner} authenticated />\n              <DynamicRoute path='/kuisioner/tambah pertanyaan' exact component={RegisterPertanyaan} authenticated />\n              <DynamicRoute path='/kuisioner/daftar tanggapan' exact component={DaftarTanggapan} authenticated />\n              <DynamicRoute path='/kuisioner/master kuisioner' exact component={MasterKuisioner} authenticated />\n              <DynamicRoute path='/kuisioner/detail kuisionerku' exact component={DetailKuisioner} authenticated />\n              <DynamicRoute path='/kuisioner/detail pertanyaan' exact component={DetailPertanyaan} authenticated />\n              <DynamicRoute path='/kuisioner/tambah pertanyaan baru' exact component={TambahPertanyaanBaru} authenticated />\n              <DynamicRoute path='/kuisioner/detail distribusi' exact component={DetailDistribusi} authenticated />\n              <DynamicRoute path='/kuisioner/isi kuisioner' exact component={IsiKuisioner} authenticated />\n              <DynamicRoute path='/penilaian/tambah penilaian' exact component={TambahPenilaian} authenticated />\n              <DynamicRoute path='/penilaian/master index' exact component={MasterIndex} authenticated />\n              <DynamicRoute path='/penilaian/daftar penilaian' exact component={DaftarPenilaian} authenticated />\n              <DynamicRoute path='/penilaian/master nilai' exact component={MasterNilai} authenticated />\n              <DynamicRoute path='/izin/master izin' exact component={MasterIzin} authenticated />\n              <DynamicRoute path='/kontrak/master gaji' exact component={MasterGaji} authenticated />\n              <DynamicRoute path='/kontrak/master iuran' exact component={MasterIuran} authenticated />\n              <DynamicRoute path='/kontrak/master kontrak' exact component={MasterKontrak} authenticated />\n              <DynamicRoute path='/kontrak/tambah kontrak' exact component={TambahKontrak} authenticated />\n              <DynamicRoute path='/kontrak/detail kontrak' exact component={DetailKontrak} authenticated />\n              <DynamicRoute path='/kontrak/master pembayaran gaji' exact component={MasterPembayaranGaji} authenticated />\n              <DynamicRoute path='/kontrak/detail pembayaran gaji' exact component={DetailPembayaranGaji} authenticated />\n              <DynamicRoute path='/permintaan/permintaan izin' exact component={Permintaan} authenticated />\n              <DynamicRoute path='/permintaan/detail permintaan' exact component={DetailPermintaan} authenticated />\n              <DynamicRoute path='/permintaan/permintaan pinjaman' exact component={PermintaanPinjaman} authenticated />\n              <DynamicRoute path='/permintaan/detail pinjaman' exact component={DetailPinjaman} authenticated />\n              <DynamicRoute path='/laporan/produksi pipa' exact component={ProduksiPipa} authenticated />\n              <DynamicRoute path='/laporan/mixer pipa' exact component={MixerPipa} authenticated />\n              <DynamicRoute path='/laporan/quality control' exact component={QualityControl} authenticated />\n              <DynamicRoute path='/laporan/stokist pipa' exact component={StokistPipa} authenticated />\n              <DynamicRoute path='/laporan/armada' exact component={Armada} authenticated />\n              <DynamicRoute path='/laporan/cat tegel' exact component={CatTegel} authenticated />\n              <DynamicRoute path='/laporan/spandek' exact component={Spandek} authenticated />\n              <DynamicRoute path='/laporan/hollow' exact component={Hollow} authenticated />\n              <DynamicRoute path='/laporan/sekuriti' exact component={Sekuriti} authenticated />\n              <DynamicRoute path='/laporan/sales' exact component={Sales} authenticated />\n              <DynamicRoute path='/laporan/detail sales' exact component={DetailSales} authenticated />\n              <DynamicRoute path='/laporan/detail sekuriti' exact component={DetailSekuriti} authenticated />\n              <DynamicRoute path='/laporan/detail armada' exact component={DetailArmada} authenticated />\n              <DynamicRoute path='/laporan/detail stokist pipa' exact component={DetailStokistPipa} authenticated />\n              <DynamicRoute path='/laporan/detail quality control pipa' exact component={DetailQualityControlPipa} authenticated />\n              <DynamicRoute path='/laporan/detail produksi pipa' exact component={DetailProduksiPipa} authenticated />\n              <DynamicRoute path='/laporan/detail cat tegel' exact component={DetailCatTegel} authenticated />\n              <DynamicRoute path='/profil' exact component={Profil} authenticated />\n              <DynamicRoute path='/ubah password' exact component={UbahPassword} authenticated />\n\n              \n              <DynamicRoute path='/direktur/karyawan/register karyawan' exact component={RegisterKaryawanDirektur} authenticated />\n              <DynamicRoute path='/direktur/karyawan/master karyawan' exact component={MasterKaryawanDirektur} authenticated />\n              <DynamicRoute path='/direktur/karyawan/detail karyawan' exact component={DetailKaryawanDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/master gaji' exact component={MasterGajiDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/master iuran' exact component={MasterIuranDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/master kontrak' exact component={MasterKontrakDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/detail kontrak' exact component={DetailKontrakDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/master pembayaran gaji' exact component={MasterPembayaranGajiDirektur} authenticated />\n              <DynamicRoute path='/direktur/kontrak/detail pembayaran gaji' exact component={DetailPembayaranGajiDirektur} authenticated />\n              <DynamicRoute path='/direktur/permintaan/permintaan pinjaman' exact component={PermintaanPinjamanDirektur} authenticated />\n              <DynamicRoute path='/direktur/permintaan/detail pinjaman' exact component={DetailPinjamanDirektur} authenticated />\n              <DynamicRoute path='/direktur/absensi/daftar' exact component={DaftarAbsensiDirektur} authenticated />\n              <DynamicRoute path='/direktur/kuisioner/daftar tanggapan' exact component={DaftarTanggapanDirektur} authenticated />\n              <DynamicRoute path='/direktur/kuisioner/master kuisioner' exact component={MasterKuisionerDirektur} authenticated />\n              <DynamicRoute path='/direktur/kuisioner/detail kuisionerku' exact component={DetailKuisionerDirektur} authenticated />\n              <DynamicRoute path='/direktur/kuisioner/detail distribusi' exact component={DetailDistribusiDirektur} authenticated />\n              <DynamicRoute path='/direktur/penilaian/master index' exact component={MasterIndexDirektur} authenticated />\n              <DynamicRoute path='/direktur/penilaian/daftar penilaian' exact component={DaftarPenilaianDirektur} authenticated />\n              <DynamicRoute path='/direktur/penilaian/master nilai' exact component={MasterNilaiDirektur} authenticated />\n              <DynamicRoute path='/direktur/izin/master izin' exact component={MasterIzinDirektur} authenticated />\n              <DynamicRoute path='/direktur/promosi/daftar permintaan promosi' exact component={DaftarPermintaanPromosi} authenticated />\n              <DynamicRoute path='/logout' exact logout />\n            </Switch>\n          </Container>\n        </BrowserRouter>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}